<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBXf85b82172df247ca98f60cf3299a575d">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AnimationWeightedBlendFix">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="ClientAnimatorThrottling">0</token>
			<string name="CollisionGroups">Default^0^-1</string>
			<Ref name="CurrentCamera">RBXafdd48407a7f4f119eb4ed56d9dd2976</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<float name="Gravity">196.199997</float>
			<token name="HumanoidOnlySetCollisionsOnStateChange">0</token>
			<token name="InterpolationThrottling">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PhysicsSteppingMethod">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="Retargeting">0</token>
			<token name="SignalBehavior">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<int name="StreamingMinRadius">64</int>
			<token name="StreamingPauseMode">0</token>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBXafdd48407a7f4f119eb4ed56d9dd2976">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>30.9326572</X>
					<Y>10.0354986</Y>
					<Z>30.0464592</Z>
					<R00>0.0766042545</R00>
					<R01>-0.317648709</R01>
					<R02>0.945109129</R02>
					<R10>-3.72528985e-09</R10>
					<R11>0.947894454</R11>
					<R12>0.31858483</R12>
					<R20>-0.99706161</R20>
					<R21>-0.0244049579</R21>
					<R22>0.0726127476</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>29.0424385</X>
					<Y>9.39832878</Y>
					<Z>29.9012337</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBX7176f7dbe71044fdad49dc8845e9017b">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">false</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0500000007</R>
					<G>0.330000013</G>
					<B>0.360000014</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX102441acf48b4eecb314810a99f38968">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284636770</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">1568</token>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
			<Item class="Texture" referent="RBXeab78fdf5ca848da8e6c7c94b834fd68">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Color3 name="Color3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="Face">1</token>
					<string name="Name">Texture</string>
					<float name="OffsetStudsU">0</float>
					<float name="OffsetStudsV">0</float>
					<int64 name="SourceAssetId">-1</int64>
					<float name="StudsPerTileU">8</float>
					<float name="StudsPerTileV">8</float>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxassetid://6372755229</url></Content>
					<float name="Transparency">0.800000012</float>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="Model" referent="RBX6a32cbd2ef2a48988c6990159afc0655">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<string name="Name">Dummy</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">RBXfed5448338a849388671bc0cc8a04e8e</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>22.0490532</X>
						<Y>3.00000048</Y>
						<Z>29.2284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CFrame>
				</OptionalCoordinateFrame>
			</Properties>
			<Item class="Part" referent="RBXfed5448338a849388671bc0cc8a04e8e">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>3.00000048</Y>
						<Z>29.2284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="Name">HumanoidRootPart</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBX6ea84d9c12d84b51b250321d95263a71">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-1</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RootRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX7188734ce0fb4187a9f4d8680f350abb">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0</X>
								<Y>-0.349999994</Y>
								<Z>0</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Vector3Value" referent="RBX6e5832d3f3ec43a2b2f2f87456cb7ff1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>2</X>
							<Y>2</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBXebb26fa9e79f4c2ab1c1bc1b895d1657">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>2.1499548</Y>
						<Z>27.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.999999762</X>
						<Y>0.300030679</Y>
						<Z>0.999999881</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>0.000478982925</X>
						<Y>0.125045404</Y>
						<Z>5.96046448e-08</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715537</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715537</url></Content>
					<string name="Name">LeftHand</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.999999762</X>
						<Y>0.300030679</Y>
						<Z>0.999999881</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXbb81bdca93be4f559fb2ea4e5ad47892">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.000478982925</X>
							<Y>0.125045404</Y>
							<Z>5.96046448e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftWristRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX31a98bd2257a4602bbb5c5a78edab851">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.000478982925</X>
								<Y>0.125045404</Y>
								<Z>5.96046448e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX15d9619edc284b1abc1af6d787f489c4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-0.149954513</Y>
							<Z>-1.46306121e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>-0</R02>
							<R10>0</R10>
							<R11>6.12323426e-17</R11>
							<R12>1</R12>
							<R20>0</R20>
							<R21>-1</R21>
							<R22>6.12323426e-17</R22>
						</CoordinateFrame>
						<string name="Name">LeftGripAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX41df83f101d041579d1a33a22a6d5e5f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0</X>
								<Y>-0.149954513</Y>
								<Z>-1.46306121e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBXf24bbd75c7f04d319977127f7f07f3b3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>0.000478625298</X>
							<Y>-0.5009287</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0.000478982925</X>
							<Y>0.125045404</Y>
							<Z>5.96046448e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">LeftWrist</string>
						<Ref name="Part0">RBX3c10ddde50334f68963c41a368838499</Ref>
						<Ref name="Part1">RBXebb26fa9e79f4c2ab1c1bc1b895d1657</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX9a9859438f7248488a32c9a9c48c36b5">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.999999762</X>
							<Y>0.300030679</Y>
							<Z>0.999999881</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX3c10ddde50334f68963c41a368838499">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>2.77592897</Y>
						<Z>27.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.999999642</X>
						<Y>1.05191803</Y>
						<Z>1</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>0.000478625298</X>
						<Y>0.258688211</Y>
						<Z>7.64462551e-20</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715541</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715541</url></Content>
					<string name="Name">LeftLowerArm</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.999999642</X>
						<Y>1.05191803</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXfb41c033aa5543c79f89bfb6a4f6ab89">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.000478625298</X>
							<Y>0.258688211</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftElbowRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX63945fcda4bb4679aa70f774ea6bb5a2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.000478625298</X>
								<Y>0.258688211</Y>
								<Z>7.64462551e-20</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX19d03ae2aab540998fd0540fa2d9d66d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.000478625298</X>
							<Y>-0.5009287</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftWristRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXea876f94a43e4b16b0522c643caab7f5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.000478625298</X>
								<Y>-0.5009287</Y>
								<Z>7.64462551e-20</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBXaf6b7f732b9547feb906c8e44e9dd527">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>0.000479221344</X>
							<Y>-0.334056377</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0.000478625298</X>
							<Y>0.258688211</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">LeftElbow</string>
						<Ref name="Part0">RBX16c41aa8c9c6470d82ebf5630ea1babd</Ref>
						<Ref name="Part1">RBX3c10ddde50334f68963c41a368838499</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX2b0f96e865b84253b9f61ec44101d476">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.999999642</X>
							<Y>1.05191803</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX16c41aa8c9c6470d82ebf5630ea1babd">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>3.36867356</Y>
						<Z>27.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.999999762</X>
						<Y>1.16867065</Y>
						<Z>0.99999994</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>0.500000358</X>
						<Y>0.394326687</Y>
						<Z>8.94069672e-08</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715550</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715550</url></Content>
					<string name="Name">LeftUpperArm</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.999999762</X>
						<Y>1.16867065</Y>
						<Z>0.99999994</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXf963b6b665ab489eb22e049cd373cc07">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.500000358</X>
							<Y>0.394326687</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftShoulderRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXe64cc7e949524b2c8fbfcb1446f4bc36">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.500000358</X>
								<Y>0.394326687</Y>
								<Z>8.94069672e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX29f9f21703934eddbc8cc5af9b8ebfd4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.000479221344</X>
							<Y>-0.334056377</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftElbowRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXa60ea3b93b13441a8c32055622f0e5c7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.000479221344</X>
								<Y>-0.334056377</Y>
								<Z>8.94069672e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXb69ed39e219b42038797f53f3f5c319c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>2.38418579e-07</X>
							<Y>0.584326625</Y>
							<Z>-2.70968314e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftShoulderAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX95d9cbbe1c8042d292ac479e905d006f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>2.38418579e-07</X>
								<Y>0.584326625</Y>
								<Z>-2.70968314e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBXb8ece55f333c400eb878a3427062270d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-1</X>
							<Y>0.56301713</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0.500000358</X>
							<Y>0.394326687</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">LeftShoulder</string>
						<Ref name="Part0">RBX31e46f7475a5404d812dc4bb0e9ab9d4</Ref>
						<Ref name="Part1">RBX16c41aa8c9c6470d82ebf5630ea1babd</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX0309e9da821d4f57b7d0ee467c2cd3a6">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.999999762</X>
							<Y>1.16867065</Y>
							<Z>0.99999994</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX11b79a317294428caf709f58d9a096cb">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>2.1499548</Y>
						<Z>30.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.999999881</X>
						<Y>0.300030679</Y>
						<Z>0.999999881</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>3.57627869e-07</X>
						<Y>0.125045404</Y>
						<Z>5.96046448e-08</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715557</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715557</url></Content>
					<string name="Name">RightHand</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.999999881</X>
						<Y>0.300030679</Y>
						<Z>0.999999881</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBX4f62b297f26943d79ab6c491e3d2121f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>3.57627869e-07</X>
							<Y>0.125045404</Y>
							<Z>5.96046448e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightWristRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXfe592bf0bc2844c5adced3b7d25cf54c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>3.57627869e-07</X>
								<Y>0.125045404</Y>
								<Z>5.96046448e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX8b43a7e49c074e089c46b2402d70d4b6">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>-0.149954513</Y>
							<Z>-1.46306121e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>-0</R02>
							<R10>0</R10>
							<R11>6.12323426e-17</R11>
							<R12>1</R12>
							<R20>0</R20>
							<R21>-1</R21>
							<R22>6.12323426e-17</R22>
						</CoordinateFrame>
						<string name="Name">RightGripAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX4045fa90f32c4ddb8bc6425468caf90b">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0</X>
								<Y>-0.149954513</Y>
								<Z>-1.46306121e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX8e764c8b983b4e0892ed5c2f185132e9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>1.1920929e-07</X>
							<Y>-0.5009287</Y>
							<Z>-6.86244753e-18</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>3.57627869e-07</X>
							<Y>0.125045404</Y>
							<Z>5.96046448e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">RightWrist</string>
						<Ref name="Part0">RBX883bb8f76e2149888befddeb2cfed911</Ref>
						<Ref name="Part1">RBX11b79a317294428caf709f58d9a096cb</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX07976558d6f1440bbfb3cb24a2482f51">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.999999881</X>
							<Y>0.300030679</Y>
							<Z>0.999999881</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX883bb8f76e2149888befddeb2cfed911">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>2.77592897</Y>
						<Z>30.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.999999762</X>
						<Y>1.05191803</Y>
						<Z>1</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>1.1920929e-07</X>
						<Y>0.258579493</Y>
						<Z>7.64462551e-20</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715562</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715562</url></Content>
					<string name="Name">RightLowerArm</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.999999762</X>
						<Y>1.05191803</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBX9498361bb4db45e3bf817b7c34ae717e">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>1.1920929e-07</X>
							<Y>0.258579493</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightElbowRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXce5ebc03016f4f94a37799f31550103b">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>1.1920929e-07</X>
								<Y>0.258579493</Y>
								<Z>7.64462551e-20</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX4a1924edec274166908070fa7ae9fa46">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>1.1920929e-07</X>
							<Y>-0.5009287</Y>
							<Z>-6.86244753e-18</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightWristRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXdf72212613c24fc69272c79ce363fa67">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>1.1920929e-07</X>
								<Y>-0.5009287</Y>
								<Z>-6.86244753e-18</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX48581d50f5af47de96d0be38992a9a32">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-5.96046448e-07</X>
							<Y>-0.334165096</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>1.1920929e-07</X>
							<Y>0.258579493</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">RightElbow</string>
						<Ref name="Part0">RBX921c2b1dd11048b08c4079c3d34ddff4</Ref>
						<Ref name="Part1">RBX883bb8f76e2149888befddeb2cfed911</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX103ccdd4982c40f6a593a3988a36f9bb">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.999999762</X>
							<Y>1.05191803</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX921c2b1dd11048b08c4079c3d34ddff4">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>3.36867356</Y>
						<Z>30.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.999999642</X>
						<Y>1.16867065</Y>
						<Z>0.99999994</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>-0.500000715</X>
						<Y>0.394326687</Y>
						<Z>8.94069672e-08</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715576</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715576</url></Content>
					<string name="Name">RightUpperArm</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.999999642</X>
						<Y>1.16867065</Y>
						<Z>0.99999994</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXbc8bc49ff2124c67ae36d233b439afab">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0.500000715</X>
							<Y>0.394326687</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightShoulderRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXab957febc79b4cb99e5810c24cc3dd1e">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0.500000715</X>
								<Y>0.394326687</Y>
								<Z>8.94069672e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXf697cd4be9e94a839ef74b4374352f97">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-5.96046448e-07</X>
							<Y>-0.334165096</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightElbowRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXcddb7e644de94b2281eccb95121d7306">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-5.96046448e-07</X>
								<Y>-0.334165096</Y>
								<Z>8.94069672e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX14163d609b844083b982a2266a8f2e7e">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-8.34465027e-07</X>
							<Y>0.584326625</Y>
							<Z>-2.70968314e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightShoulderAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXa723c4c67ac14d16be2f85cbb3fa8b12">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-8.34465027e-07</X>
								<Y>0.584326625</Y>
								<Z>-2.70968314e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX9526c9df9e114118919536192fd176c9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>0.99999994</X>
							<Y>0.56301713</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0.500000715</X>
							<Y>0.394326687</Y>
							<Z>8.94069672e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">RightShoulder</string>
						<Ref name="Part0">RBX31e46f7475a5404d812dc4bb0e9ab9d4</Ref>
						<Ref name="Part1">RBX921c2b1dd11048b08c4079c3d34ddff4</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBXdf645fb5dd5343d7a906b477aa6dda57">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.999999642</X>
							<Y>1.16867065</Y>
							<Z>0.99999994</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX31e46f7475a5404d812dc4bb0e9ab9d4">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>3.19998312</Y>
						<Z>29.2284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>2</X>
						<Y>1.60003424</Y>
						<Z>1.00000036</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>-5.96046448e-08</X>
						<Y>-0.799985707</Y>
						<Z>1.1920929e-07</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715593</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715593</url></Content>
					<string name="Name">UpperTorso</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2</X>
						<Y>1.60003424</Y>
						<Z>1.00000036</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXf8bad89973d249e79105112f0c57c07a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-5.96046448e-08</X>
							<Y>-0.799985707</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">WaistRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXf80150d4e79746fe9795d5d9481d6873">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-5.96046448e-08</X>
								<Y>-0.799985707</Y>
								<Z>1.1920929e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX153cac6ca29c4ec298a3e0ecb065b232">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-5.96046448e-08</X>
							<Y>0.800017118</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">NeckRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXf4d3351aa3534095a0a93419767ce6c5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-5.96046448e-08</X>
								<Y>0.800017118</Y>
								<Z>1.1920929e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXfe0fcb4af4044d9bb684592a1d252c86">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-1</X>
							<Y>0.56301713</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftShoulderRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXaef6e840749f477cba81be72e9cc462f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-1</X>
								<Y>0.56301713</Y>
								<Z>1.1920929e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXabf5b10a52a347f38b6700c157fff35a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.99999994</X>
							<Y>0.56301713</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightShoulderRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX6025cdaee80843b0a8b5112a56685fe0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.99999994</X>
								<Y>0.56301713</Y>
								<Z>1.1920929e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXfa57a8b0238b48bd9812325d57d7c667">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-5.96046448e-08</X>
							<Y>-0.199985683</Y>
							<Z>-0.499999881</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">BodyFrontAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXfecc2d9d39f446b3957b168585dd3763">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-5.96046448e-08</X>
								<Y>-0.199985683</Y>
								<Z>-0.499999881</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX42345e284cc349619c5b721ae2b557ba">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-5.96046448e-08</X>
							<Y>-0.199985683</Y>
							<Z>0.5</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">BodyBackAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXc702078ed1c54d0eb8a94800d1bc827c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-5.96046448e-08</X>
								<Y>-0.199985683</Y>
								<Z>0.5</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXeb850da178344a989e7f5382ad3287b3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0.999999881</X>
							<Y>0.800016999</Y>
							<Z>-7.27397378e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftCollarAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX1fcb64f4d7a541db8bc885792b4049cc">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0.999999881</X>
								<Y>0.800016999</Y>
								<Z>-7.27397378e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX673dcb0dd0b9494095db73b8a9e914de">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.99999994</X>
							<Y>0.800016761</Y>
							<Z>4.61295997e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightCollarAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX51aa8ceb574747d8b557058d26f34542">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.99999994</X>
								<Y>0.800016761</Y>
								<Z>4.61295997e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXd570d0c3cd104f729a5dc23d91a32a1e">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-5.05859497e-08</X>
							<Y>0.800017118</Y>
							<Z>7.11172419e-08</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">NeckAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXface60571d5c4519845511c1cab03eeb">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-5.05859497e-08</X>
								<Y>0.800017118</Y>
								<Z>7.11172419e-08</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX373bf3b5f4b3441eb914851a0b843518">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-1.1920929e-07</X>
							<Y>0.200024918</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-5.96046448e-08</X>
							<Y>-0.799985707</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">Waist</string>
						<Ref name="Part0">RBX82b7456f03644b42989ac7aa707266d0</Ref>
						<Ref name="Part1">RBX31e46f7475a5404d812dc4bb0e9ab9d4</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX3007fd3dd08649ad89d274ac7757528d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>2</X>
							<Y>1.60003424</Y>
							<Z>1.00000036</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBXee477be4260849fb81de83597fd5830a">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>0.150000334</Y>
						<Z>28.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>1</X>
						<Y>0.300000191</Y>
						<Z>1</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>-1.78813934e-07</X>
						<Y>0.101939693</Y>
						<Z>-1.7222776e-06</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715602</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715602</url></Content>
					<string name="Name">LeftFoot</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>1</X>
						<Y>0.300000221</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXc543cc0cc1bd4a80b443dd7e5dfd04b3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-1.78813934e-07</X>
							<Y>0.101939693</Y>
							<Z>-1.7222776e-06</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftAnkleRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX9876041212eb4d9ab4f76c1039edb1fa">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-1.78813934e-07</X>
								<Y>0.101939678</Y>
								<Z>-1.7222776e-06</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX6e8e1da9318f40ff8421f242a4957456">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-1.1920929e-07</X>
							<Y>-0.547157228</Y>
							<Z>-2.21401592e-06</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-1.78813934e-07</X>
							<Y>0.101939693</Y>
							<Z>-1.7222776e-06</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">LeftAnkle</string>
						<Ref name="Part0">RBX9a2a4293892c4466ba8ee9a6ef155089</Ref>
						<Ref name="Part1">RBXee477be4260849fb81de83597fd5830a</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBXead65e8bdeb94aeda6d4b548ae0747ae">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>1</X>
							<Y>0.300000191</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX9a2a4293892c4466ba8ee9a6ef155089">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>0.79909724</Y>
						<Z>28.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.99999994</X>
						<Y>1.1930927</Y>
						<Z>0.999999523</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>2.98023224e-08</X>
						<Y>0.379018486</Y>
						<Z>-1.60860594e-07</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715610</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715610</url></Content>
					<string name="Name">LeftLowerLeg</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.99999994</X>
						<Y>1.19309282</Y>
						<Z>0.999999523</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBX2bbf614cfaf34ab18fa2cead875a9dc2">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>2.98023224e-08</X>
							<Y>0.379018486</Y>
							<Z>-1.60860594e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftKneeRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX3d94f2e7cb064cc386dac8a0018b85de">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>2.98023224e-08</X>
								<Y>0.379018426</Y>
								<Z>-1.60860594e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX920ffce1e34a43a8b29cc9c743f8ed36">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-1.1920929e-07</X>
							<Y>-0.547157228</Y>
							<Z>-2.21401592e-06</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftAnkleRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXa49a42c5dd884b01be8e7fe75666f163">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-1.1920929e-07</X>
								<Y>-0.547157168</Y>
								<Z>-2.21401592e-06</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX849ce919230d41698213a8b4f61d4e7c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>8.94069672e-08</X>
							<Y>-0.401102424</Y>
							<Z>-4.29081496e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>2.98023224e-08</X>
							<Y>0.379018486</Y>
							<Z>-1.60860594e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">LeftKnee</string>
						<Ref name="Part0">RBXc0f082c6cc434da28492279a0fc105eb</Ref>
						<Ref name="Part1">RBX9a2a4293892c4466ba8ee9a6ef155089</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX6db7f9b6d570473ebd03602d906943c9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.99999994</X>
							<Y>1.1930927</Y>
							<Z>0.999999523</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBXc0f082c6cc434da28492279a0fc105eb">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>1.57921815</Y>
						<Z>28.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>1.00000036</X>
						<Y>1.21656859</Y>
						<Z>0.999999881</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>5.96046448e-08</X>
						<Y>0.420782208</Y>
						<Z>-1.63912773e-07</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715616</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715616</url></Content>
					<string name="Name">LeftUpperLeg</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>1.00000036</X>
						<Y>1.21656871</Y>
						<Z>0.999999881</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXeb04519a801a43b084f767a14f28960a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>5.96046448e-08</X>
							<Y>0.420782208</Y>
							<Z>-1.63912773e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftHipRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX5c1a826e1e3844779ad0475c45456bbd">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>5.96046448e-08</X>
								<Y>0.420782149</Y>
								<Z>-1.63912773e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXe4a1ab363eee44b3b020ac3a2a4087ba">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>8.94069672e-08</X>
							<Y>-0.401102424</Y>
							<Z>-4.29081496e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftKneeRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX955759be89eb4bf381cc75d11f06db4b">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>8.94069672e-08</X>
								<Y>-0.401102364</Y>
								<Z>-4.29081496e-07</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBXadebe59ed6d34cfe8c40c8536f00a464">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-0.500000119</X>
							<Y>-0.199972257</Y>
							<Z>-0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>5.96046448e-08</X>
							<Y>0.420782208</Y>
							<Z>-1.63912773e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">LeftHip</string>
						<Ref name="Part0">RBX82b7456f03644b42989ac7aa707266d0</Ref>
						<Ref name="Part1">RBXc0f082c6cc434da28492279a0fc105eb</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBXe6efa0c2b4004c49b7a2f73cfcbab584">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>1.00000036</X>
							<Y>1.21656859</Y>
							<Z>0.999999881</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX3037e6981fea484f9479ee0b60129eac">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>0.150000632</Y>
						<Z>29.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.99999994</X>
						<Y>0.300000191</Y>
						<Z>1</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>-0</X>
						<Y>0.101939559</Y>
						<Z>7.64477954e-05</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715627</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715627</url></Content>
					<string name="Name">RightFoot</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.99999994</X>
						<Y>0.300000191</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBX9f102cd6e0974ddc98c28b16a92a1679">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0</X>
							<Y>0.101939559</Y>
							<Z>7.64477954e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightAnkleRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX272bfd88891142eca56796b2e7922c6c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0</X>
								<Y>0.101939559</Y>
								<Z>7.64477954e-05</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX0eb39f5db1944a05b4d802c8abc23e7e">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-0</X>
							<Y>-0.547157168</Y>
							<Z>7.62689815e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0</X>
							<Y>0.101939559</Y>
							<Z>7.64477954e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">RightAnkle</string>
						<Ref name="Part0">RBXb0476a28b5b9463eb5717cf6d4feb3c1</Ref>
						<Ref name="Part1">RBX3037e6981fea484f9479ee0b60129eac</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBXbd32cc61f4ad4ddbbbf178d6d6203aea">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.99999994</X>
							<Y>0.300000191</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBXb0476a28b5b9463eb5717cf6d4feb3c1">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>0.799097359</Y>
						<Z>29.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>0.99999994</X>
						<Y>1.19309282</Y>
						<Z>1.00000012</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>-0</X>
						<Y>0.379174292</Y>
						<Z>2.5553607e-05</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715632</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715632</url></Content>
					<string name="Name">RightLowerLeg</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.99999994</X>
						<Y>1.19309282</Y>
						<Z>1.00000012</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBXc59bd518a45e413b98ec5b4dbb32749c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0</X>
							<Y>0.379174292</Y>
							<Z>2.5553607e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightKneeRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX4b40ab608f764fbeb6c7f057f4b3aaf0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0</X>
								<Y>0.379174292</Y>
								<Z>2.5553607e-05</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX39fbabfb7f144772b1551890a05c351b">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0</X>
							<Y>-0.547157168</Y>
							<Z>7.62689815e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightAnkleRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX259baae12a234709bac62c06c1028cb3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0</X>
								<Y>-0.547157168</Y>
								<Z>7.62689815e-05</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBXcca3c79d1c534326af480e41d50f3a3e">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-0</X>
							<Y>-0.400946498</Y>
							<Z>-2.18767891e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0</X>
							<Y>0.379174292</Y>
							<Z>2.5553607e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">RightKnee</string>
						<Ref name="Part0">RBX4373f7a7bc5d4fa0b05106aa6a503dcf</Ref>
						<Ref name="Part1">RBXb0476a28b5b9463eb5717cf6d4feb3c1</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBXf8b7d2e777654cef9c0b6b14d5b928a8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>0.99999994</X>
							<Y>1.19309282</Y>
							<Z>1.00000012</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX4373f7a7bc5d4fa0b05106aa6a503dcf">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490055</X>
						<Y>1.57921815</Y>
						<Z>29.7284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>1.00000048</X>
						<Y>1.21656859</Y>
						<Z>0.99996686</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>-0</X>
						<Y>0.420782268</Y>
						<Z>-6.67300628e-05</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715641</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715641</url></Content>
					<string name="Name">RightUpperLeg</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>1.00000048</X>
						<Y>1.21656859</Y>
						<Z>0.99996686</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBX192a6018d60a4aacbd1f8354b6fbe857">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0</X>
							<Y>0.420782268</Y>
							<Z>-6.67300628e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightHipRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXf40fada914c844f48b2bbf5f30eb1e10">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0</X>
								<Y>0.420782268</Y>
								<Z>-6.67300628e-05</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX8b60fb1043894566aa278de8d502b53c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0</X>
							<Y>-0.400946498</Y>
							<Z>-2.18767891e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightKneeRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXe4bf30999e294d83a6b99f15380cc225">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0</X>
								<Y>-0.400946498</Y>
								<Z>-2.18767891e-05</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX6416df0d183649b38e6f49fe53d710f8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>0.499999881</X>
							<Y>-0.199972257</Y>
							<Z>-1.91208565e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0</X>
							<Y>0.420782268</Y>
							<Z>-6.67300628e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">RightHip</string>
						<Ref name="Part0">RBX82b7456f03644b42989ac7aa707266d0</Ref>
						<Ref name="Part1">RBX4373f7a7bc5d4fa0b05106aa6a503dcf</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX669db50e171348d7ae1accfbf9ece6f4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>1.00000048</X>
							<Y>1.21656859</Y>
							<Z>0.99996686</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="MeshPart" referent="RBX82b7456f03644b42989ac7aa707266d0">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0490532</X>
						<Y>2.19997263</Y>
						<Z>29.2284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="DoubleSided">false</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<bool name="HasJointOffset">true</bool>
					<bool name="HasSkinnedMesh">false</bool>
					<Vector3 name="InitialSize">
						<X>1.99999976</X>
						<Y>0.400055438</Y>
						<Z>1.00000012</Z>
					</Vector3>
					<Vector3 name="JointOffset">
						<X>-1.1920929e-07</X>
						<Y>-0.199972257</Y>
						<Z>-0</Z>
					</Vector3>
					<BinaryString name="LODData"></BinaryString>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<Content name="MeshID"><url>http://www.roblox.com/asset/?id=1699715652</url></Content>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=1699715652</url></Content>
					<string name="Name">LowerTorso</string>
					<SharedString name="PhysicalConfigData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<BinaryString name="PhysicsData"></BinaryString>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<token name="RenderFidelity">1</token>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureID"><null></null></Content>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>1.99999976</X>
						<Y>0.400055438</Y>
						<Z>1.00000012</Z>
					</Vector3>
				</Properties>
				<Item class="Attachment" referent="RBX083f7c8813394d3292bf16a6f191ac11">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-1.1920929e-07</X>
							<Y>-0.199972257</Y>
							<Z>-0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RootRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXc70a201ecd0f44d9ae949ce5e6493ac1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-1.1920929e-07</X>
								<Y>-0.199972257</Y>
								<Z>-0</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX5b4c6553ca184f2e80e3023bf6e72560">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-1.1920929e-07</X>
							<Y>0.200024918</Y>
							<Z>7.64462551e-20</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">WaistRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX0f511d70366641d3a55f0792f8c26c04">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-1.1920929e-07</X>
								<Y>0.200024918</Y>
								<Z>7.64462551e-20</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXf32bebfbdef04613b49b24e680d6a2a4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0.500000119</X>
							<Y>-0.199972257</Y>
							<Z>-0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">LeftHipRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX5b4082c20e05412ca6df701cee5e3c0f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0.500000119</X>
								<Y>-0.199972257</Y>
								<Z>-0</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX4b8f77b26299453ca47cc2fb8aa2c919">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>0.499999881</X>
							<Y>-0.199972257</Y>
							<Z>-1.91208565e-05</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">RightHipRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX649ec0e9332a49a38f83cfa83ca14ca2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>0.499999881</X>
								<Y>-0.199972257</Y>
								<Z>-1.91208565e-05</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXbeddbfb0cec045e7a736da32aa858b31">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-4.2200088e-07</X>
							<Y>-0.199972257</Y>
							<Z>-1.65436123e-24</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">WaistCenterAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX01748e15f80a47e08463837795a3e98e">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-4.2200088e-07</X>
								<Y>-0.199972257</Y>
								<Z>-1.65436123e-24</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXb9dc0cd52bf343be9b8871fe57bd6cf4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-1.32219867e-07</X>
							<Y>-0.199972257</Y>
							<Z>-0.50000006</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">WaistFrontAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX51e15dde6c5e400490f3ccc6733f3ff5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-1.32219867e-07</X>
								<Y>-0.199972257</Y>
								<Z>-0.50000006</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX254d99b6b9c145aa8f5032fa6db082ee">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-1.46413214e-07</X>
							<Y>-0.199972257</Y>
							<Z>0.50000006</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">WaistBackAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXc534c011003d410ba82c2f7fb0dd4c4d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-1.46413214e-07</X>
								<Y>-0.199972257</Y>
								<Z>0.50000006</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Motor6D" referent="RBX31dfae301f6e48dab0630da8e79a8313">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>0</X>
							<Y>-1</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-1.1920929e-07</X>
							<Y>-0.199972257</Y>
							<Z>-0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">Root</string>
						<Ref name="Part0">RBXfed5448338a849388671bc0cc8a04e8e</Ref>
						<Ref name="Part1">RBX82b7456f03644b42989ac7aa707266d0</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX246c5598455e40c09f6f857337cc9f2b">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>1.99999976</X>
							<Y>0.400055438</Y>
							<Z>1.00000012</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Humanoid" referent="RBXa27d70a2314a467c83ec1e851d5b7455">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoJumpEnabled">true</bool>
					<bool name="AutoRotate">true</bool>
					<bool name="AutomaticScalingEnabled">true</bool>
					<bool name="BreakJointsOnDeath">true</bool>
					<token name="CollisionType">0</token>
					<token name="DisplayDistanceType">0</token>
					<string name="DisplayName"></string>
					<float name="HealthDisplayDistance">100</float>
					<token name="HealthDisplayType">0</token>
					<float name="Health_XML">100</float>
					<float name="HipHeight">2</float>
					<Vector3 name="InternalBodyScale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="InternalHeadScale">1</float>
					<float name="JumpHeight">7.19999981</float>
					<float name="JumpPower">50</float>
					<float name="MaxHealth">100</float>
					<float name="MaxSlopeAngle">89</float>
					<string name="Name">Humanoid</string>
					<float name="NameDisplayDistance">100</float>
					<token name="NameOcclusion">2</token>
					<bool name="RequiresNeck">true</bool>
					<token name="RigType">1</token>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<bool name="UseJumpPower">true</bool>
					<float name="WalkSpeed">16</float>
				</Properties>
				<Item class="Animator" referent="RBXb031a161b5654087939ba110a4cdcd83">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animator</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX09498ca12bc54c7b984cf3f5845af63c">
				<Properties>
					<bool name="Anchored">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>22.0487804</X>
						<Y>4.50000048</Y>
						<Z>29.2284737</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>-1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="Name">Head</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">1</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX4b0962937afc47c284c6ba31ada94264">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">0</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1.25</X>
							<Y>1.25</Y>
							<Z>1.25</Z>
						</Vector3>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBX9cb602f8c9a84795abe213a8687c5d12">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>3.93568822e-09</X>
							<Y>0</Y>
							<Z>-0.000272244215</Z>
							<R00>1</R00>
							<R01>7.87137555e-09</R01>
							<R02>3.02998127e-15</R02>
							<R10>-7.87137555e-09</R10>
							<R11>1</R11>
							<R12>-4.1444258e-16</R12>
							<R20>-3.02998127e-15</R20>
							<R21>4.14442554e-16</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">FaceCenterAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXf3c8a57c7b2a4a5a8cf355847c85f5dc">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>3.93568822e-09</X>
								<Y>0</Y>
								<Z>-0.000272244215</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX8243a8b83e6544b49a87ae7fa875094a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>3.93568866e-09</X>
							<Y>0</Y>
							<Z>-0.600272298</Z>
							<R00>1</R00>
							<R01>7.87137555e-09</R01>
							<R02>3.02998127e-15</R02>
							<R10>-7.87137555e-09</R10>
							<R11>1</R11>
							<R12>-4.1444258e-16</R12>
							<R20>-3.02998127e-15</R20>
							<R21>4.14442554e-16</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">FaceFrontAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX8702fb9becd2416a9db27205fe0a0dcf">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>3.93568866e-09</X>
								<Y>0</Y>
								<Z>-0.600272298</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBXbce51b519cb842c6b7083f56c1436c2d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>8.65851391e-09</X>
							<Y>0.599999905</Y>
							<Z>-0.000272244215</Z>
							<R00>1</R00>
							<R01>7.87137555e-09</R01>
							<R02>3.02998127e-15</R02>
							<R10>-7.87137555e-09</R10>
							<R11>1</R11>
							<R12>-4.1444258e-16</R12>
							<R20>-3.02998127e-15</R20>
							<R21>4.14442554e-16</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">HairAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX6318ccf88f5e472f8255c79c84f07449">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>8.65851391e-09</X>
								<Y>0.599999905</Y>
								<Z>-0.000272244215</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX4fd1c41b1b314196947eb376736f7522">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>8.65851391e-09</X>
							<Y>0.599999905</Y>
							<Z>-0.000272244215</Z>
							<R00>1</R00>
							<R01>7.87137555e-09</R01>
							<R02>3.02998127e-15</R02>
							<R10>-7.87137555e-09</R10>
							<R11>1</R11>
							<R12>-4.1444258e-16</R12>
							<R20>-3.02998127e-15</R20>
							<R21>4.14442554e-16</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">HatAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBX6244a100f5544042b72caa9600b65815">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>8.65851391e-09</X>
								<Y>0.599999905</Y>
								<Z>-0.000272244215</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Attachment" referent="RBX01e2769615d44055bf4f57cd1b5d2244">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="CFrame">
							<X>-0</X>
							<Y>-0.500000119</Y>
							<Z>-0.000272244215</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">NeckRigAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
					</Properties>
					<Item class="Vector3Value" referent="RBXfddefe4451b8452a9be61339d5ec9b71">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">OriginalPosition</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Vector3 name="Value">
								<X>-0</X>
								<Y>-0.500000119</Y>
								<Z>-0.000272244215</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Decal" referent="RBX93661afd7b6440f68ef0bb9e759a724f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Color3 name="Color3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="Face">5</token>
						<string name="Name">face</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>rbxasset://textures/face.png</url></Content>
						<float name="Transparency">0</float>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Motor6D" referent="RBXbecc66857c7a4af4803e0fe74fdf3e0c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<CoordinateFrame name="C0">
							<X>-5.96046448e-08</X>
							<Y>0.800017118</Y>
							<Z>1.1920929e-07</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0</X>
							<Y>-0.500000119</Y>
							<Z>-0.000272244215</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<bool name="Enabled">true</bool>
						<float name="MaxVelocity">0</float>
						<string name="Name">Neck</string>
						<Ref name="Part0">RBX31e46f7475a5404d812dc4bb0e9ab9d4</Ref>
						<Ref name="Part1">RBX09498ca12bc54c7b984cf3f5845af63c</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Vector3Value" referent="RBX14f2c545031d46ed8f4b9a1bfd9254c2">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">OriginalSize</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Vector3 name="Value">
							<X>2</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Decal" referent="RBX4d3cacfc173d43e9b68f0de77c7107ed">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Color3 name="Color3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="Face">5</token>
						<string name="Name">face</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>rbxasset://textures/face.png</url></Content>
						<float name="Transparency">0</float>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Model" referent="RBX935c5191ee8742c68cbd93d15449425c">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">AnimSaves</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="KeyframeSequence" referent="RBX9a1d28d134b14dbfa72118034e753253">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">false</bool>
						<string name="Name">Left</string>
						<token name="Priority">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI4OTYxOQ==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBXb04a038cc1f64c95bb29b9717fedb085">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBX206b131f1f364bfca41599576d60095a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXf40964f7043842188921d3e74c391762">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX3cfc944f4bc342d59ec38361f3601e7a">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-4.60116318e-08</X>
											<Y>-5.96046448e-08</Y>
											<Z>1.25085961e-07</Z>
											<R00>0.994866729</R00>
											<R01>0</R01>
											<R02>0.101193726</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>-0.101193726</R20>
											<R21>0</R21>
											<R22>0.994866729</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX052e3bcc51144c268e135d29cc3a7439">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>5.96046448e-08</X>
												<Y>-1.78813934e-07</Y>
												<Z>4.8611364e-06</Z>
												<R00>0.996723354</R00>
												<R01>0.0808857158</R01>
												<R02>0</R02>
												<R10>-0.0808857158</R10>
												<R11>0.996723354</R11>
												<R12>3.20236476e-10</R12>
												<R20>7.45431539e-09</R20>
												<R21>-9.00945429e-10</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX2460cb581ac249a6a3a989e3b83eef77">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXc3e6166cfb6444d69ef06f5024f34e60">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>3.57627869e-07</X>
												<Y>0</Y>
												<Z>1.89393759e-05</Z>
												<R00>0.987164438</R00>
												<R01>-0.136227176</R01>
												<R02>0.083357282</R02>
												<R10>0.15849185</R10>
												<R11>0.899887085</R11>
												<R12>-0.406304717</R12>
												<R20>-0.01966241</R20>
												<R21>0.414301038</R21>
												<R22>0.909927487</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX41ec7793145d4466ac3feb35b814fd86">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXb1da111b250d42d5ad9f116b019980e5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-1.6996637e-08</X>
												<Y>8.34465027e-07</Y>
												<Z>6.24448876e-06</Z>
												<R00>0.986739457</R00>
												<R01>0</R01>
												<R02>-0.162312225</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0.162312225</R20>
												<R21>0</R21>
												<R22>0.986739457</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBX4a0335dc722d4bbfb2003bf8013366fb">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>-0.149999857</Y>
									<Z>-0.000323295593</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.00215931167</R11>
									<R12>0.999997675</R12>
									<R20>0</R20>
									<R21>-0.999997675</R21>
									<R22>0.00215931167</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX542490a7a2894c4791d3cb7e24ed21cf">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.433333337</float>
						</Properties>
						<Item class="Pose" referent="RBX1de9ce6ab47546548a3d317078be9489">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX500a1caf37ab491aad236bd4a3acf013">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXe43ccdd31eab4ef7a90fbdee29e1151c">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>1.63912773e-07</X>
											<Y>2.32458115e-06</Y>
											<Z>-4.61935997e-07</Z>
											<R00>0.391224593</R00>
											<R01>-0.0498359576</R01>
											<R02>0.918944836</R02>
											<R10>0.126363248</R10>
											<R11>0.99198401</R11>
											<R12>6.70552254e-08</R12>
											<R20>-0.911578596</R20>
											<R21>0.116120838</R21>
											<R22>0.394385993</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX0d62d969cca04b38bb3b84f5c4f2e695">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0667759776</X>
												<Y>0.010374248</Y>
												<Z>0.26446712</Z>
												<R00>0.893455863</R00>
												<R01>0.239915505</R01>
												<R02>0.379706651</R02>
												<R10>-0.259338081</R10>
												<R11>0.965786576</R11>
												<R12>-4.09781933e-08</R12>
												<R20>-0.36671558</R20>
												<R21>-0.0984723568</R21>
												<R22>0.925106943</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX4b19ab3d9cd74212a87146820524b9ca">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-9.41369217e-06</X>
													<Y>-7.74860382e-06</Y>
													<Z>1.33216381e-05</Z>
													<R00>1</R00>
													<R01>1.48493973e-08</R01>
													<R02>-2.98281471e-08</R02>
													<R10>0</R10>
													<R11>0.964246571</R11>
													<R12>-0.265006632</R12>
													<R20>0</R20>
													<R21>0.265006661</R21>
													<R22>0.964246631</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX8abff18f882644a59072a6cfb7cb2bd5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0393757671</X>
												<Y>-0.766544163</Y>
												<Z>-0.361996859</Z>
												<R00>0.0721067488</R00>
												<R01>0.322090745</R01>
												<R02>0.943958998</R02>
												<R10>0.979550719</R10>
												<R11>0.15536505</R11>
												<R12>-0.127837971</R12>
												<R20>-0.187833577</R20>
												<R21>0.933873355</R21>
												<R22>-0.304301202</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX1107c9facd03412cabbc4b527a259c70">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>5.58793545e-08</X>
													<Y>-9.62615013e-06</Y>
													<Z>5.7066336e-06</Z>
													<R00>0.980002761</R00>
													<R01>-0.198985338</R01>
													<R02>1.49011612e-07</R02>
													<R10>0.198985606</R10>
													<R11>0.980002582</R11>
													<R12>8.94069672e-08</R12>
													<R20>1.11525026e-07</R20>
													<R21>-6.00407475e-08</R21>
													<R22>1.00000024</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXb5cb9f5249e04eea9bee7c488f38f44a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-1.21891499e-05</X>
												<Y>1.63018703e-05</Y>
												<Z>2.91960314e-05</Z>
												<R00>0.336419404</R00>
												<R01>0.124652721</R01>
												<R02>-0.933425844</R02>
												<R10>-0.0349173993</R10>
												<R11>0.992170274</R11>
												<R12>0.119912915</R12>
												<R20>0.941064656</R20>
												<R21>-0.00774822757</R21>
												<R22>0.338137835</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBX1dbc7b43582c4ce0bc34e01408b8ab95">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>-0.199964523</Y>
									<Z>0.0037612915</Z>
									<R00>0.99999994</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>-0.00228153262</R11>
									<R12>0.999997377</R12>
									<R20>0</R20>
									<R21>-0.999997377</R21>
									<R22>-0.00228153262</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBXce7ae8d8106e4749b4a2a1151a1a7af7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">5</float>
						</Properties>
						<Item class="Pose" referent="RBXb71d9fa1404b46bfa9e4890f662dce0e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX70ac6453f28640739facaa559c8c9f53">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXf6f5e57fb20c4a51aaab99de31ab0e50">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>1.63912773e-07</X>
											<Y>2.32458115e-06</Y>
											<Z>-4.61935997e-07</Z>
											<R00>0.391224593</R00>
											<R01>-0.0498359576</R01>
											<R02>0.918944836</R02>
											<R10>0.126363248</R10>
											<R11>0.99198401</R11>
											<R12>6.70552254e-08</R12>
											<R20>-0.911578596</R20>
											<R21>0.116120838</R21>
											<R22>0.394385993</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX89ec68f728d446ae9d30ecc3bf0b80b3">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0667759776</X>
												<Y>0.010374248</Y>
												<Z>0.26446712</Z>
												<R00>0.893455863</R00>
												<R01>0.239915505</R01>
												<R02>0.379706651</R02>
												<R10>-0.259338081</R10>
												<R11>0.965786576</R11>
												<R12>-4.09781933e-08</R12>
												<R20>-0.36671558</R20>
												<R21>-0.0984723568</R21>
												<R22>0.925106943</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX6131831fdf894e6ca003329376e98909">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-9.41369217e-06</X>
													<Y>-7.74860382e-06</Y>
													<Z>1.33216381e-05</Z>
													<R00>1</R00>
													<R01>1.48493973e-08</R01>
													<R02>-2.98281471e-08</R02>
													<R10>0</R10>
													<R11>0.964246571</R11>
													<R12>-0.265006632</R12>
													<R20>0</R20>
													<R21>0.265006661</R21>
													<R22>0.964246631</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX88e3eb90e613409c811c232d23983f81">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0393757671</X>
												<Y>-0.766544163</Y>
												<Z>-0.361996859</Z>
												<R00>0.0721067488</R00>
												<R01>0.322090745</R01>
												<R02>0.943958998</R02>
												<R10>0.979550719</R10>
												<R11>0.15536505</R11>
												<R12>-0.127837971</R12>
												<R20>-0.187833577</R20>
												<R21>0.933873355</R21>
												<R22>-0.304301202</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX794518c8e1344b14bbc03085591ff1f9">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>5.58793545e-08</X>
													<Y>-9.62615013e-06</Y>
													<Z>5.7066336e-06</Z>
													<R00>0.980002761</R00>
													<R01>-0.198985338</R01>
													<R02>1.49011612e-07</R02>
													<R10>0.198985606</R10>
													<R11>0.980002582</R11>
													<R12>8.94069672e-08</R12>
													<R20>1.11525026e-07</R20>
													<R21>-6.00407475e-08</R21>
													<R22>1.00000024</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXdba528cbdd7041a48d245fc3c0bb29ce">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-1.64881349e-05</X>
												<Y>1.83880329e-05</Y>
												<Z>3.57641838e-05</Z>
												<R00>0.343737125</R00>
												<R01>0.116994172</R01>
												<R02>-0.931749582</R02>
												<R10>-0.0490337051</R10>
												<R11>0.993091702</R11>
												<R12>0.106607184</R12>
												<R20>0.93778491</R20>
												<R21>0.00904230494</R21>
												<R22>0.347099096</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBXc8b91d8abda84ce7885bfeda2fbbef62">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>-0.199964523</Y>
									<Z>0.0037612915</Z>
									<R00>0.99999994</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>-0.00228153262</R11>
									<R12>0.999997377</R12>
									<R20>0</R20>
									<R21>-0.999997377</R21>
									<R22>-0.00228153262</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBXbc61c4f8a1484db2914ccb85e29d264f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">5.5</float>
						</Properties>
						<Item class="Pose" referent="RBXe349e366259247d7a2449f8c1dc1dccd">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX7931f4f8094645309635c02a00c1c56d">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXb9b562b1feeb4db3af1d225c8ad16a22">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>1.49011612e-08</X>
											<Y>1.57952309e-05</Y>
											<Z>2.68220901e-07</Z>
											<R00>0.228446603</R00>
											<R01>0.0793796033</R01>
											<R02>-0.97031492</R02>
											<R10>0.141209915</R10>
											<R11>0.983428955</R11>
											<R12>0.113698244</R12>
											<R20>0.963261068</R20>
											<R21>-0.162992045</R21>
											<R22>0.213451803</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXe3c465defc1f4090a715d71457fc21cb">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.0133807659</X>
												<Y>-0.00533720525</Y>
												<Z>0.0973568186</Z>
												<R00>0.911712885</R00>
												<R01>0.388229489</R01>
												<R02>-0.134378701</R02>
												<R10>-0.324778706</R10>
												<R11>0.881416559</R11>
												<R12>0.342963308</R12>
												<R20>0.25159201</R20>
												<R21>-0.269040704</R21>
												<R22>0.9296875</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBX494fece59ee04e579362375537bcf6e8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.0210328996</X>
												<Y>-0.659757793</Y>
												<Z>0.171543196</Z>
												<R00>0.0721006542</R00>
												<R01>-0.828679562</R01>
												<R02>-0.555059969</R02>
												<R10>0.979549944</R10>
												<R11>-0.0459738746</R11>
												<R12>0.195877373</R12>
												<R20>-0.187837943</R20>
												<R21>-0.557831943</R21>
												<R22>0.808418393</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBXc53746eb712c4e27b8094223a561de8f">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-6.01261854e-05</X>
												<Y>2.78353691e-05</Y>
												<Z>4.10452485e-05</Z>
												<R00>0.266578287</R00>
												<R01>0.156753033</R01>
												<R02>0.950980961</R02>
												<R10>0.0645856261</R10>
												<R11>0.981562793</R11>
												<R12>-0.17989856</R12>
												<R20>-0.961646974</R20>
												<R21>0.109376736</R21>
												<R22>0.25153929</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX59e65e5a870e4819accb7cb9c20ec0fa">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">4.9666667</float>
						</Properties>
						<Item class="Pose" referent="RBX1753d2e3e89e412da64f2048d9019692">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX003dcaa8dafc4a67a5996cda09566e6d">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXa96da19c556a46fa85f2941bbcbe4e34">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>3.01748514e-07</X>
											<Y>4.529953e-06</Y>
											<Z>-7.59959221e-07</Z>
											<R00>0.189108163</R00>
											<R01>-0.0645802319</R01>
											<R02>0.979830444</R02>
											<R10>0.199623764</R10>
											<R11>0.979526877</R11>
											<R12>0.0260326564</R12>
											<R20>-0.961451292</R20>
											<R21>0.190674439</R21>
											<R22>0.198128268</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX8b0ef468f53d437f8f4a79a839ad8237">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.132685214</X>
												<Y>-0.868673503</Y>
												<Z>-0.592554271</Z>
												<R00>0.0721100122</R00>
												<R01>0.608471394</R01>
												<R02>0.790292919</R02>
												<R10>0.979550958</R10>
												<R11>0.106012791</R11>
												<R12>-0.171001345</R12>
												<R20>-0.187830552</R20>
												<R21>0.786463022</R21>
												<R22>-0.588383913</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBX1ab574f25c584e4c9723d50a090c4c9a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>2.98023224e-07</X>
												<Y>1.57058239e-05</Y>
												<Z>3.49334441e-05</Z>
												<R00>0.0916428342</R00>
												<R01>0.185909733</R01>
												<R02>-0.978283882</R02>
												<R10>-0.00373711996</R10>
												<R11>0.98247534</R11>
												<R12>0.186356142</R12>
												<R20>0.995784938</R20>
												<R21>-0.0134221977</R21>
												<R22>0.0907316133</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="KeyframeMarker" referent="RBX328805d2231643ae838f9a4355931cf5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">DrawEnd</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Value"></string>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX9ccdf4f845c941e19aa8f5b6966feac3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">false</bool>
						<string name="Name">Right</string>
						<token name="Priority">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI4OTYzNw==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBXd9f29b7b24c94e679dfb9b64bddb81ac">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBXde82ab12274744db8019f969e882b2c4">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX479a35b448174cb28af42c0bdf3e9d2a">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX659552925dd24e9884bdadcf486b3034">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-6.77003342e-08</X>
											<Y>-5.96046448e-08</Y>
											<Z>1.14805196e-07</Z>
											<R00>0.998197556</R00>
											<R01>0</R01>
											<R02>-0.060014572</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0.060014572</R20>
											<R21>0</R21>
											<R22>0.998197556</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX3ab9cc5f37354d4fbf12e991c31c5551">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.00713145733</X>
												<Y>0.0393384099</Y>
												<Z>-0.00118999183</Z>
												<R00>0.926777184</R00>
												<R01>0.178724825</R01>
												<R02>-0.330365688</R02>
												<R10>-0.158098549</R10>
												<R11>0.983447433</R11>
												<R12>0.0885210931</R12>
												<R20>0.34071818</R20>
												<R21>-0.0298089925</R21>
												<R22>0.939692795</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX2eed1dea26a141e985338e365f3bceba">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>5.5989949e-06</X>
													<Y>1.16229057e-06</Y>
													<Z>1.93715096e-07</Z>
													<R00>1</R00>
													<R01>-1.49011612e-08</R01>
													<R02>1.11758709e-08</R02>
													<R10>0</R10>
													<R11>0.984807491</R11>
													<R12>-0.173649624</R12>
													<R20>-9.81712489e-09</R20>
													<R21>0.173649639</R21>
													<R22>0.984807491</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX47ad36fb80cb46cabbfa38585dabff17">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.0222062469</X>
												<Y>0.0374109745</Y>
												<Z>0.0749209225</Z>
												<R00>0.64242506</R00>
												<R01>-0.598536015</R01>
												<R02>-0.478585899</R02>
												<R10>0.141335487</R10>
												<R11>0.706325233</R11>
												<R12>-0.69363457</R12>
												<R20>0.753202617</R20>
												<R21>0.377967149</R21>
												<R22>0.53835547</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX170cc40df9f64ac6ae9093cc73f7e67b">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-0.00021351238</X>
													<Y>-3.42428684e-05</Y>
													<Z>1.08890235e-05</Z>
													<R00>1</R00>
													<R01>-3.29596688e-08</R01>
													<R02>-1.88068476e-08</R02>
													<R10>2.30502337e-08</R10>
													<R11>0.971674919</R11>
													<R12>-0.236320943</R12>
													<R20>2.98023224e-08</R20>
													<R21>0.236320943</R21>
													<R22>0.971674979</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX3e1c94f7c55b4af39d254351c778b13f">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.37716483e-06</X>
												<Y>-8.04662704e-07</Y>
												<Z>-3.87446489e-05</Z>
												<R00>0.998979032</R00>
												<R01>4.40735312e-06</R01>
												<R02>0.0451743528</R02>
												<R10>2.09911377e-08</R10>
												<R11>1</R11>
												<R12>-9.80268233e-05</R12>
												<R20>-0.0451743528</R20>
												<R21>9.79276374e-05</R21>
												<R22>0.998979092</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBX0671534dc1ce4b828354d1c05b91a98d">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-5.49200922e-06</X>
									<Y>-0.199894905</Y>
									<Z>-0.00648498535</Z>
									<R00>0.99999994</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>-0.00151900784</R11>
									<R12>0.999998868</R12>
									<R20>0</R20>
									<R21>-0.999998868</R21>
									<R22>-0.00151900784</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBXa1ed12868c914064a78a570fc96076ea">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.333333343</float>
						</Properties>
						<Item class="Pose" referent="RBX3955ee5d7fa94de482a57128519509e8">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX3772f31c3fe94ef9ab56dd777ceb24d4">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX4093a5b16e224e2aa64cbda77bb4cac6">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-9.77516174e-06</X>
											<Y>1.13248825e-06</Y>
											<Z>4.47034836e-08</Z>
											<R00>0.725976229</R00>
											<R01>0.0842039362</R01>
											<R02>-0.682545483</R02>
											<R10>-0.0937268808</R10>
											<R11>0.995329916</R11>
											<R12>0.0231006052</R12>
											<R20>0.681303084</R20>
											<R21>0.0472023636</R21>
											<R22>0.730477929</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX94e4380f04e54634a743cf1a095f098b">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.00714117289</X>
												<Y>0.0393533707</Y>
												<Z>-0.00103725493</Z>
												<R00>0.830212533</R00>
												<R01>0.485728294</R01>
												<R02>-0.273523599</R02>
												<R10>-0.389972627</R10>
												<R11>0.856685877</R11>
												<R12>0.337654352</R12>
												<R20>0.398332059</R20>
												<R21>-0.173658237</R21>
												<R22>0.90065217</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXd09f8d0cb8734aac98144c9769cf3139">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>5.5989949e-06</X>
													<Y>1.16229057e-06</Y>
													<Z>1.93715096e-07</Z>
													<R00>1</R00>
													<R01>-1.49011612e-08</R01>
													<R02>1.11758709e-08</R02>
													<R10>0</R10>
													<R11>0.984807491</R11>
													<R12>-0.173649624</R12>
													<R20>-9.81712489e-09</R20>
													<R21>0.173649639</R21>
													<R22>0.984807491</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX0fb65a2ad3224ad683de861d73610a58">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.162715256</X>
												<Y>0.292856336</Y>
												<Z>-0.0441129506</Z>
												<R00>-0.0736882687</R00>
												<R01>-0.802332819</R01>
												<R02>-0.592310786</R02>
												<R10>-0.994473875</R10>
												<R11>0.103650242</R11>
												<R12>-0.0166819375</R12>
												<R20>0.0747776404</R20>
												<R21>0.58780843</R21>
												<R22>-0.805536747</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX48439dfb8ea94653a45b4702b728fded">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-0.00021351238</X>
													<Y>-3.42428684e-05</Y>
													<Z>1.08890235e-05</Z>
													<R00>1</R00>
													<R01>-3.29596688e-08</R01>
													<R02>-1.88068476e-08</R02>
													<R10>2.30502337e-08</R10>
													<R11>0.971674919</R11>
													<R12>-0.236320943</R12>
													<R20>2.98023224e-08</R20>
													<R21>0.236320943</R21>
													<R22>0.971674979</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXf3fd16bf12d44455a17387f5fbcf0e24">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.000285629183</X>
												<Y>5.48660755e-05</Y>
												<Z>0.00021674484</Z>
												<R00>0.699573278</R00>
												<R01>-0.104776077</R01>
												<R02>0.706837416</R02>
												<R10>0.0917221904</R10>
												<R11>0.994175136</R11>
												<R12>0.0565892532</R12>
												<R20>-0.708649635</R20>
												<R21>0.0252443459</R21>
												<R22>0.705108583</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBXbc2b138b99744f218583b10889d1572e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-5.49200922e-06</X>
									<Y>-0.199894905</Y>
									<Z>-0.00648498535</Z>
									<R00>0.99999994</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>-0.00151900784</R11>
									<R12>0.999998868</R12>
									<R20>0</R20>
									<R21>-0.999998868</R21>
									<R22>-0.00151900784</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX46e932a369fb4d35a5001b10d69ecdf6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">4.9666667</float>
						</Properties>
						<Item class="Pose" referent="RBX4d29870f4f6e41d19aed4479f3817ddc">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX96170da4ae7f41929e88cedf4de6001b">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX3b14e3f97db6460da126e9ec630e0c15">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-3.35350633e-05</X>
											<Y>2.86102295e-06</Y>
											<Z>-9.83476639e-07</Z>
											<R00>0.36057654</R00>
											<R01>0.101404317</R01>
											<R02>-0.927200973</R02>
											<R10>-0.123428114</R10>
											<R11>0.990517974</R11>
											<R12>0.0603294373</R12>
											<R20>0.92452693</R20>
											<R21>0.0926892906</R21>
											<R22>0.369673699</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXb95a6997231e4e10847bd7e7f8de5a77">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0689339042</X>
												<Y>0.121036291</Y>
												<Z>0.12819618</Z>
												<R00>0.948639929</R00>
												<R01>0.315435648</R01>
												<R02>0.024134744</R02>
												<R10>-0.310055703</R10>
												<R11>0.911882043</R11>
												<R12>0.268954545</R12>
												<R20>0.0628298521</R20>
												<R21>-0.262624115</R21>
												<R22>0.962850392</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX943020a1c84c48d9a703d39fb09fc56c">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-7.06834253e-05</X>
													<Y>-7.64429569e-05</Y>
													<Z>6.67646527e-05</Z>
													<R00>0.99999994</R00>
													<R01>3.0485257e-08</R01>
													<R02>1.19036471e-07</R02>
													<R10>1.49011612e-08</R10>
													<R11>0.931698263</R11>
													<R12>-0.363233089</R12>
													<R20>-5.96046448e-08</R20>
													<R21>0.36323303</R21>
													<R22>0.931698203</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX51c3f43023174146937cbea510b4e892">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.161525369</X>
												<Y>0.292881072</Y>
												<Z>-0.0444815755</Z>
												<R00>-0.0736849904</R00>
												<R01>-0.849799991</R01>
												<R02>-0.52192992</R02>
												<R10>-0.994480252</R10>
												<R11>0.101811692</R11>
												<R12>-0.0253695343</R12>
												<R20>0.074697569</R20>
												<R21>0.517179608</R21>
												<R22>-0.852611065</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBX0fae9eb3210747c19cb7febc1196e35e">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.000831738114</X>
												<Y>5.84125519e-05</Y>
												<Z>0.000241272151</Z>
												<R00>0.366499037</R00>
												<R01>-0.131939813</R01>
												<R02>0.921015918</R02>
												<R10>0.119997539</R10>
												<R11>0.988329947</R11>
												<R12>0.0938323364</R12>
												<R20>-0.922647715</R20>
												<R21>0.076130189</R21>
												<R22>0.378054529</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="KeyframeMarker" referent="RBXa7f30ca9edbb4e598f4eafbf5b2990b7">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">DrawEnd</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Value"></string>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX18cf11a87cef47468ab4e37f471d973d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">5</float>
						</Properties>
						<Item class="Pose" referent="RBXbf45f980dbcd46e19b1be883ed8985d6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX101a83db7106431c80906aa1e7ed26a3">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX5f03ad68b53d4535852ca65c27075b21">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-9.77516174e-06</X>
											<Y>1.13248825e-06</Y>
											<Z>4.47034836e-08</Z>
											<R00>0.725976229</R00>
											<R01>0.0842039362</R01>
											<R02>-0.682545483</R02>
											<R10>-0.0937268808</R10>
											<R11>0.995329916</R11>
											<R12>0.0231006052</R12>
											<R20>0.681303084</R20>
											<R21>0.0472023636</R21>
											<R22>0.730477929</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX7ba7c24bef1641d1bd53df9279331a80">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.00714117289</X>
												<Y>0.0393533707</Y>
												<Z>-0.00103725493</Z>
												<R00>0.830212533</R00>
												<R01>0.485728294</R01>
												<R02>-0.273523599</R02>
												<R10>-0.389972627</R10>
												<R11>0.856685877</R11>
												<R12>0.337654352</R12>
												<R20>0.398332059</R20>
												<R21>-0.173658237</R21>
												<R22>0.90065217</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXd977aefcb2724c1880af856616cb86f0">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>5.5989949e-06</X>
													<Y>1.16229057e-06</Y>
													<Z>1.93715096e-07</Z>
													<R00>1</R00>
													<R01>-1.49011612e-08</R01>
													<R02>1.11758709e-08</R02>
													<R10>0</R10>
													<R11>0.984807491</R11>
													<R12>-0.173649624</R12>
													<R20>-9.81712489e-09</R20>
													<R21>0.173649639</R21>
													<R22>0.984807491</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX81d8025c80c947de80217e93ee1ad034">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.162715256</X>
												<Y>0.292856336</Y>
												<Z>-0.0441129506</Z>
												<R00>-0.0736882687</R00>
												<R01>-0.802332819</R01>
												<R02>-0.592310786</R02>
												<R10>-0.994473875</R10>
												<R11>0.103650242</R11>
												<R12>-0.0166819375</R12>
												<R20>0.0747776404</R20>
												<R21>0.58780843</R21>
												<R22>-0.805536747</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX9e57eb9dc587478da3a3e785836e35a7">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-0.00021351238</X>
													<Y>-3.42428684e-05</Y>
													<Z>1.08890235e-05</Z>
													<R00>1</R00>
													<R01>-3.29596688e-08</R01>
													<R02>-1.88068476e-08</R02>
													<R10>2.30502337e-08</R10>
													<R11>0.971674919</R11>
													<R12>-0.236320943</R12>
													<R20>2.98023224e-08</R20>
													<R21>0.236320943</R21>
													<R22>0.971674979</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX3ca7ccb506e34861ad96e4b376594dd8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.000285629183</X>
												<Y>5.48660755e-05</Y>
												<Z>0.00021674484</Z>
												<R00>0.699573278</R00>
												<R01>-0.104776077</R01>
												<R02>0.706837416</R02>
												<R10>0.0917221904</R10>
												<R11>0.994175136</R11>
												<R12>0.0565892532</R12>
												<R20>-0.708649635</R20>
												<R21>0.0252443459</R21>
												<R22>0.705108583</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBXcdf8185f199643d3ab5b73822d117fa8">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-5.49200922e-06</X>
									<Y>-0.199894905</Y>
									<Z>-0.00648498535</Z>
									<R00>0.99999994</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>-0.00151900784</R11>
									<R12>0.999998868</R12>
									<R20>0</R20>
									<R21>-0.999998868</R21>
									<R22>-0.00151900784</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX375b2b413f664ef98e06d190fc2d24de">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">5.5</float>
						</Properties>
						<Item class="Pose" referent="RBXb44fa6b2ae074562b97affc9c4c6a4ac">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXd754937bc02f4588b46f17d3078891b8">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX82bc8a5693a441daa96761fe15cc0980">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-4.0076673e-05</X>
											<Y>1.52587891e-05</Y>
											<Z>-6.40749931e-07</Z>
											<R00>-0.394275695</R00>
											<R01>0.0484214835</R01>
											<R02>0.917715669</R02>
											<R10>-0.0792332515</R10>
											<R11>0.993101478</R11>
											<R12>-0.0864398479</R12>
											<R20>-0.915570259</R20>
											<R21>-0.106794737</R21>
											<R22>-0.387719125</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX67cf4e291ac64fd6989b9bd9feef55db">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.0717333555</X>
												<Y>-0.0984189585</Y>
												<Z>0.0276497491</Z>
												<R00>0.807830572</R00>
												<R01>0.525151014</R01>
												<R02>-0.267630458</R02>
												<R10>-0.364077091</R10>
												<R11>0.801668882</R11>
												<R12>0.47410363</R12>
												<R20>0.463527232</R20>
												<R21>-0.285557389</R21>
												<R22>0.838808417</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBXabd0f7075fd146539492981b2a070385">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.387507498</X>
												<Y>0.301434636</Y>
												<Z>-0.350720733</Z>
												<R00>0.0894315541</R00>
												<R01>0.268907398</R01>
												<R02>-0.959004998</R02>
												<R10>-0.994143724</R10>
												<R11>0.0827402994</R11>
												<R12>-0.0695078075</R12>
												<R20>0.0606571026</R20>
												<R21>0.959605634</R21>
												<R22>0.274732381</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX11aa2b5f91a54eec9baedca762a949c2">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-0.000335579942</X>
													<Y>2.19345093e-05</Y>
													<Z>-0.000360682607</Z>
													<R00>0.999999464</R00>
													<R01>-2.27715997e-08</R01>
													<R02>7.43785549e-08</R02>
													<R10>1.11758709e-07</R10>
													<R11>0.980142117</R11>
													<R12>0.198295698</R12>
													<R20>5.21540642e-08</R20>
													<R21>-0.198295608</R21>
													<R22>0.980142176</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXbe632edb81f7444e9b5b63d6982c082f">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.00107987225</X>
												<Y>0.000357091427</Y>
												<Z>0.00194813684</Z>
												<R00>-0.431957841</R00>
												<R01>-0.0663321689</R01>
												<R02>-0.899451077</R02>
												<R10>0.0476774201</R10>
												<R11>0.994217753</R11>
												<R12>-0.0962178633</R12>
												<R20>0.900632739</R20>
												<R21>-0.0844455585</R21>
												<R22>-0.426297665</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX60a89f108f9f47f283b283bfe467de50">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">true</bool>
						<string name="Name">ShieldEquip</string>
						<token name="Priority">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI5MDk5Ng==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBX0a4da9a4f07548db8daa0af9f0a688d0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBXb95b649e2de947dbad3fe72c593d7004">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX71e08a99eca04e91a339f8634c2d01f8">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX727628c40fae406aaccb1f826f35b95b">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBXe337869a859a4d74a22eb54d8d1c8260">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">0</float>
										</Properties>
										<Item class="Pose" referent="RBX357e76086ead41e0838af046aa157f7c">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-0.430002213</X>
													<Y>-0.249999747</Y>
													<Z>4.29153442e-06</Z>
													<R00>7.54979013e-08</R00>
													<R01>0</R01>
													<R02>-1</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>1</R20>
													<R21>0</R21>
													<R22>7.54979013e-08</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">BodyAttach</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX94b203e0b48f4c0bb4d23bd22a51a446">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">true</bool>
						<string name="Name">ShieldHolster</string>
						<token name="Priority">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI5MTE0Mg==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBX39f2eacf20f942a8b382d4c942c2c04c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBXf1daac693aae4a238ebc41036a174087">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX579a7007a2974f0f87965678b1f2d4fe">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXcde8b448df2e4512919abaa3887c81ae">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBXa9aa5d862ff24eb0a749f2b6dd1b4e59">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.0100026038</X>
												<Y>-0.2099998</Y>
												<Z>0.620000839</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">BodyAttach</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBXe71729cf26a64bbcb92a54c525def043">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">false</bool>
						<string name="Name">Stab</string>
						<token name="Priority">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI4OTY2Nw==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBXdd6f06c585684f12bcaf13bfa4d77c7a">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBX859740aac2a545059c18187c12c303d9">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX538bbcc544414a5bb8df9ef0aa7f140e">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX09aedeea6ef04293b20749cafb5c1169">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX83a66fd970fe441b968cacdf4146e520">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>7.15255737e-07</X>
												<Y>-8.04662704e-07</Y>
												<Z>5.99771738e-06</Z>
												<R00>0.939638019</R00>
												<R01>0.287485272</R01>
												<R02>-0.185560033</R02>
												<R10>-0.282038331</R10>
												<R11>0.95778507</R11>
												<R12>0.0556969605</R12>
												<R20>0.193738684</R20>
												<R21>7.82310963e-08</R21>
												<R22>0.981053114</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXb425e63c0f97464b991e5628a156b8af">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>5.96046448e-07</X>
													<Y>3.93390656e-06</Y>
													<Z>3.46451998e-06</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.961103916</R11>
													<R12>-0.276186764</R12>
													<R20>-6.28172792e-10</R20>
													<R21>0.276186764</R21>
													<R22>0.961103976</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX4b164db27b424418935fc8f59cd3192c">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX93caa0f31373446499ef097b67d3021e">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-7.74860382e-07</X>
												<Y>-6.48200512e-07</Y>
												<Z>3.19629908e-06</Z>
												<R00>0.875682175</R00>
												<R01>-0.479185402</R01>
												<R02>0.0596831962</R02>
												<R10>0.476109266</R10>
												<R11>0.836132944</R11>
												<R12>-0.272400022</R12>
												<R20>0.0806270391</R20>
												<R21>0.266951591</R21>
												<R22>0.960331261</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX2e3df3951d294cf8abade973ec2dc1e1">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>4.95241011e-07</X>
													<Y>2.62260437e-06</Y>
													<Z>4.21702862e-06</Z>
													<R00>0.99999994</R00>
													<R01>7.10808266e-08</R01>
													<R02>1.0457434e-08</R02>
													<R10>-1.10143056e-07</R10>
													<R11>0.956225216</R11>
													<R12>-0.292631745</R12>
													<R20>1.41952583e-09</R20>
													<R21>0.292631775</R21>
													<R22>0.956225157</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX4dfe0ad0be714b8fb6f9cf34061a6d43">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXa10581f0bcc54dd298f73cfe6b6be23e">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBXe39b184e3ef64ef19ee8e0e5b5efe391">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>-0.12994945</Y>
									<Z>0.0641801357</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.0011318482</R11>
									<R12>0.999999344</R12>
									<R20>0</R20>
									<R21>-0.999999344</R21>
									<R22>0.0011318482</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX79e5f22466e3492dbb334d7e9a298b80">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.433333337</float>
						</Properties>
						<Item class="Pose" referent="RBXe33e828416ad4013b7b46b2c921670b5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXd197eeaa3e5d4e5d94e3796350bd3b94">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXa0e4d4ed3db44e01be33871c2c90fad9">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-0.00893095136</X>
											<Y>-0.000801148708</Y>
											<Z>-0.00449754717</Z>
											<R00>0.889417529</R00>
											<R01>-0.0809314996</R01>
											<R02>-0.449873924</R02>
											<R10>0.0805321038</R10>
											<R11>0.996550083</R11>
											<R12>-0.020062577</R12>
											<R20>0.449945569</R20>
											<R21>-0.0183852836</R21>
											<R22>0.892866731</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXeed9aff1fda549cc93f6786b552efe2d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.247894391</X>
												<Y>-0.330430686</Y>
												<Z>0.19818908</Z>
												<R00>0.47710976</R00>
												<R01>0</R01>
												<R02>-0.878843665</R02>
												<R10>-0.753672123</R10>
												<R11>0.51436317</R11>
												<R12>-0.409156173</R12>
												<R20>0.452044845</R20>
												<R21>0.857572436</R21>
												<R22>0.245407701</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX134af617e0574307a3e2921db05f9109">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>-1.49011612e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.880965352</R11>
													<R12>-0.473180741</R12>
													<R20>0</R20>
													<R21>0.473180741</R21>
													<R22>0.880965352</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX53a2694204f44719b97754ba4c4cac3a">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXa2dabd79cbb74322bb01f0d6164fdf8d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-1.1920929e-07</X>
												<Y>0</Y>
												<Z>-1.78813934e-07</Z>
												<R00>0.408019304</R00>
												<R01>-0.594662547</R01>
												<R02>-0.692745686</R02>
												<R10>0.912973285</R10>
												<R11>0.26576218</R11>
												<R12>0.309596807</R12>
												<R20>0</R20>
												<R21>-0.758779764</R21>
												<R22>0.65134716</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX97c49da1a9504f178b1c9606c511540c">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>1.49011612e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.988821268</R11>
													<R12>-0.149105653</R12>
													<R20>0</R20>
													<R21>0.149105653</R21>
													<R22>0.988821268</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX8ff8b872b6ec4aba8c82ff8b3aa88623">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>-5.97443432e-07</X>
														<Y>1.28149986e-06</Y>
														<Z>-2.16066837e-07</Z>
														<R00>0.998675585</R00>
														<R01>-0.051446721</R01>
														<R02>-1.34110451e-07</R02>
														<R10>0.039560657</R10>
														<R11>0.767945111</R11>
														<R12>-0.639292479</R12>
														<R20>0.0328895301</R20>
														<R21>0.638446152</R21>
														<R22>0.768963516</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX6794f36dd3864c1480fb0d96af66ce30">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-4.95091081e-06</X>
												<Y>-5.87105751e-06</Y>
												<Z>3.83518636e-06</Z>
												<R00>0.890269816</R00>
												<R01>0.0984812155</R01>
												<R02>0.444658428</R02>
												<R10>-0.109948881</R10>
												<R11>0.993937194</R11>
												<R12>3.7252903e-08</R12>
												<R20>-0.44196263</R20>
												<R21>-0.0488897339</R21>
												<R22>0.895700276</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX067d868f411e45af9151f2c490e801ce">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">4.9666667</float>
						</Properties>
						<Item class="Pose" referent="RBX4228616d234b40ac8d5baf1bba0ece12">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXd614dd9d4f7148c6b797cf9c93dbedc8">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXb401d723825c4ddfb80915b515228372">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>2.31750309e-05</X>
											<Y>7.21216202e-06</Y>
											<Z>-6.54906034e-06</Z>
											<R00>0.61637485</R00>
											<R01>-0.0758855939</R01>
											<R02>-0.783787847</R02>
											<R10>0.146482229</R10>
											<R11>0.989022255</R11>
											<R12>0.0194381885</R12>
											<R20>0.773708582</R20>
											<R21>-0.126792192</R21>
											<R22>0.62072438</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX9edb04209e3d4bc785c91de2caa6ce80">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.207091928</X>
												<Y>-0.406985283</Y>
												<Z>0.464547992</Z>
												<R00>0.497332156</R00>
												<R01>0.445316076</R01>
												<R02>-0.74454993</R02>
												<R10>-0.786476195</R10>
												<R11>0.593692362</R11>
												<R12>-0.170249313</R12>
												<R20>0.366218776</R20>
												<R21>0.670241177</R21>
												<R22>0.645492733</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX68d0c80b88b446a5b6443f5a30ef67ec">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>-1.49011612e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.880965352</R11>
													<R12>-0.473180741</R12>
													<R20>0</R20>
													<R21>0.473180741</R21>
													<R22>0.880965352</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX62582544731a4d34b3aabdd85ff16cc6">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXbc70314f65f147e798964ab47b25b2c8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-2.08616257e-07</X>
												<Y>8.94069672e-08</Y>
												<Z>-2.68220901e-07</Z>
												<R00>0.408019304</R00>
												<R01>-0.52934587</R01>
												<R02>-0.743850112</R02>
												<R10>0.912973285</R10>
												<R11>0.236571357</R11>
												<R12>0.332436025</R12>
												<R20>0</R20>
												<R21>-0.814755619</R21>
												<R22>0.579804361</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX9eb296ed6ce14a2daebd8f6d99051add">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.943381965</R11>
													<R12>-0.331708372</R12>
													<R20>0</R20>
													<R21>0.331708372</R21>
													<R22>0.943381965</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX9944880531384c85aa23fe9a9ef8e2be">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>-4.47034836e-08</Y>
														<Z>-3.7252903e-08</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>0.746336102</R11>
														<R12>-0.665569305</R12>
														<R20>0</R20>
														<R21>0.665569305</R21>
														<R22>0.746336102</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX715a7831c30f460dbae5c495f6e1fdbb">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-1.90064311e-05</X>
												<Y>-2.05039978e-05</Y>
												<Z>-7.76164234e-06</Z>
												<R00>0.651224911</R00>
												<R01>0.131460696</R01>
												<R02>0.747411489</R02>
												<R10>-0.0589427836</R10>
												<R11>0.990668297</R11>
												<R12>-0.12288937</R12>
												<R20>-0.756592035</R20>
												<R21>0.0359741077</R21>
												<R22>0.652896702</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="KeyframeMarker" referent="RBX7f8018802b4f41549c8e4e4802238e8c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">DrawEnd</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Value"></string>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX2a9e3f9d16da475f848782dd1a2dbf19">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">5</float>
						</Properties>
						<Item class="Pose" referent="RBX39e6f469257740ffb7c4794f88d3857a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXa2a5a3ce69cc42d7abb2b451034c593e">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX5c4197697c8743d9894bc509a6e2398d">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-0.00893095136</X>
											<Y>-0.000801148708</Y>
											<Z>-0.00449754717</Z>
											<R00>0.889417529</R00>
											<R01>-0.0809314996</R01>
											<R02>-0.449873924</R02>
											<R10>0.0805321038</R10>
											<R11>0.996550083</R11>
											<R12>-0.020062577</R12>
											<R20>0.449945569</R20>
											<R21>-0.0183852836</R21>
											<R22>0.892866731</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX666f5f62dfe54c77896a7528e7ac0ce8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.247894391</X>
												<Y>-0.330430686</Y>
												<Z>0.19818908</Z>
												<R00>0.47710976</R00>
												<R01>0</R01>
												<R02>-0.878843665</R02>
												<R10>-0.753672123</R10>
												<R11>0.51436317</R11>
												<R12>-0.409156173</R12>
												<R20>0.452044845</R20>
												<R21>0.857572436</R21>
												<R22>0.245407701</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX1efa9083086c48aba77c6213b30d83d7">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>-1.49011612e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.880965352</R11>
													<R12>-0.473180741</R12>
													<R20>0</R20>
													<R21>0.473180741</R21>
													<R22>0.880965352</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX58b2994f14744cf5b8ba7f9eb9d531d3">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX710d89ee6dfd431685b28b3b4943dc0c">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-1.1920929e-07</X>
												<Y>0</Y>
												<Z>-1.78813934e-07</Z>
												<R00>0.408019304</R00>
												<R01>-0.594662547</R01>
												<R02>-0.692745686</R02>
												<R10>0.912973285</R10>
												<R11>0.26576218</R11>
												<R12>0.309596807</R12>
												<R20>0</R20>
												<R21>-0.758779764</R21>
												<R22>0.65134716</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX0c91588262854f83b824995172392e9e">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>1.49011612e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.988821268</R11>
													<R12>-0.149105653</R12>
													<R20>0</R20>
													<R21>0.149105653</R21>
													<R22>0.988821268</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX2e07bd1210d44610b8f665bdd603f56b">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>-5.97443432e-07</X>
														<Y>1.28149986e-06</Y>
														<Z>-2.16066837e-07</Z>
														<R00>0.998675585</R00>
														<R01>-0.051446721</R01>
														<R02>-1.34110451e-07</R02>
														<R10>0.039560657</R10>
														<R11>0.767945111</R11>
														<R12>-0.639292479</R12>
														<R20>0.0328895301</R20>
														<R21>0.638446152</R21>
														<R22>0.768963516</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXee93e83ff7e64278bd29a988d6523fde">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-4.95091081e-06</X>
												<Y>-5.87105751e-06</Y>
												<Z>3.83518636e-06</Z>
												<R00>0.890269816</R00>
												<R01>0.0984812155</R01>
												<R02>0.444658428</R02>
												<R10>-0.109948881</R10>
												<R11>0.993937194</R11>
												<R12>3.7252903e-08</R12>
												<R20>-0.44196263</R20>
												<R21>-0.0488897339</R21>
												<R22>0.895700276</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBX3cbbeeaa41094380b5d81bd7c21fb319">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>-0.12994945</Y>
									<Z>0.0641801357</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>0.0011318482</R11>
									<R12>0.999999344</R12>
									<R20>0</R20>
									<R21>-0.999999344</R21>
									<R22>0.0011318482</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">3</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX5ea73a33c8ff4e64bb10eae294d2467c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">5.42875004</float>
						</Properties>
						<Item class="Pose" referent="RBXc3d0f3c0667e4e948d61f8772d596b0b">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX0684e994e11f4127be575d0a6ba87d44">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXd5ce588846eb440789914d4ac23a3f49">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>4.79668379e-05</X>
											<Y>4.47034836e-06</Y>
											<Z>-2.69711018e-06</Z>
											<R00>0.443799227</R00>
											<R01>0.165557876</R01>
											<R02>0.880700231</R02>
											<R10>-0.15299499</R10>
											<R11>0.982354939</R11>
											<R12>-0.107570685</R12>
											<R20>-0.88296926</R20>
											<R21>-0.0870029554</R21>
											<R22>0.46129784</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX8276d57aea04407faf312ae1e11e70e0">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>2.38418579e-07</X>
												<Y>-2.38418579e-07</Y>
												<Z>3.27825546e-07</Z>
												<R00>0.983009696</R00>
												<R01>0.0527765155</R01>
												<R02>0.175802454</R02>
												<R10>-0.152485549</R10>
												<R11>0.767953813</R11>
												<R12>0.622089326</R12>
												<R20>-0.10217645</R20>
												<R21>-0.638327301</R21>
												<R22>0.762953699</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX2a6a07081b004e3ab3f6476dae00bf55">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-3.7252903e-08</Y>
													<Z>-1.1920929e-07</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.0628843009</R11>
													<R12>-0.998020828</R12>
													<R20>0</R20>
													<R21>0.998020828</R21>
													<R22>0.0628843009</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXe118a65ad68c4b76888fee25d27cbf4b">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.24210909</X>
												<Y>-0.681206346</Y>
												<Z>0.214385211</Z>
												<R00>-0.184063718</R00>
												<R01>-0.981245518</R01>
												<R02>-0.0572517216</R02>
												<R10>0.972048044</R10>
												<R11>-0.190356866</R11>
												<R12>0.137428924</R12>
												<R20>-0.145749763</R20>
												<R21>-0.0303557366</R21>
												<R22>0.988855839</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXc0134636914a48b08e7c52c5997a2c55">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>1.78813934e-07</Y>
													<Z>3.7252903e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.980703592</R11>
													<R12>-0.195500165</R12>
													<R20>0</R20>
													<R21>0.195500165</R21>
													<R22>0.980703592</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">3</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXa7c5088e7c8b444f81e3b170f050af4c">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>-0.0488059893</X>
														<Y>-0.00783409923</Y>
														<Z>0.274153173</Z>
														<R00>0.995910704</R00>
														<R01>-0.0782932937</R01>
														<R02>0.0450777486</R02>
														<R10>-0.00534074008</R10>
														<R11>0.447068125</R11>
														<R12>0.894484103</R12>
														<R20>-0.0901849121</R20>
														<R21>-0.891066968</R21>
														<R22>0.444821835</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">3</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX428a7daa4c2049c98ee6dae17c419cb6">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>7.85291195e-06</X>
												<Y>-2.86102295e-05</Y>
												<Z>-1.97440386e-06</Z>
												<R00>0.51450485</R00>
												<R01>-0.130105063</R01>
												<R02>-0.84755969</R02>
												<R10>0.186533853</R10>
												<R11>0.981733859</R11>
												<R12>-0.0374675356</R12>
												<R20>0.836952806</R20>
												<R21>-0.138821334</R21>
												<R22>0.529375792</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX5043711aa302487ea4c3f155cfe5d1b7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">5.14291668</float>
						</Properties>
						<Item class="Pose" referent="RBX98e88b0afb41414bab46841d2c7870db">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXb4627389fe074fbda9d38570f6d46127">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXaeac3446d9f9448d9625504b4b5d0981">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-0.00868160278</X>
											<Y>-0.000777065754</Y>
											<Z>-0.00437204167</Z>
											<R00>0.62713939</R00>
											<R01>-0.045586694</R01>
											<R02>-0.777571917</R02>
											<R10>0.0125358067</R10>
											<R11>0.998747289</R11>
											<R12>-0.048442971</R12>
											<R20>0.77880621</R20>
											<R21>0.0206330009</R21>
											<R22>0.62692517</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">3</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXbd7584406f7d4810ac923c29fc432a20">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>2.63378024e-06</X>
												<Y>-8.10623169e-06</Y>
												<Z>-2.58721411e-06</Z>
												<R00>0.707117438</R00>
												<R01>0.0914317966</R01>
												<R02>0.701159775</R02>
												<R10>-0.0976577327</R10>
												<R11>0.994730175</R11>
												<R12>-0.0312260967</R12>
												<R20>-0.700319886</R20>
												<R21>-0.0463931635</R21>
												<R22>0.712320089</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBX26993cd7466a46b89e62e8e36ff6c1ed">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.184777498</X>
												<Y>-0.209989533</Y>
												<Z>0.308261365</Z>
												<R00>0.498437881</R00>
												<R01>0.330766708</R01>
												<R02>-0.801344693</R02>
												<R10>-0.732893109</R10>
												<R11>0.654509485</R11>
												<R12>-0.185702533</R12>
												<R20>0.463063359</R20>
												<R21>0.679861069</R21>
												<R22>0.568648815</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">3</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBXf81c4707f6d44a33ad396724546fb2fe">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">false</bool>
						<string name="Name">StunLeft</string>
						<token name="Priority">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI4OTU0Mg==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBX316a732375fd43e48f60099f7e4f933f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBXbb428b1dbf474f3ba16501dbb21ff6c1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX9653345611204e9680dc737e3d1ba9cf">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-2.38418579e-07</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX7d78b57a70d243a0bd18024e9fb9d805">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-1.1920929e-07</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX797be3e8a7cd4deebd45ec8cc60ad230">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.57627869e-07</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXbde04273b9c24433a5f31ebd439f9a35">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>0.000108718872</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX79e0865acaf84e6e96b4fdba05918c9c">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0.000479340553</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX61b075851e864f5ebd886bc688dd41ae">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.57627869e-07</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX31559cf3bd064c2b9aad737e827b1bb0">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>-0.000108718872</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX8d77ee3073944c15af2e4c8c65dab554">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0.000479340553</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXfba396a4e2314ec69578c4b83aeb93e8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX65d447ef54ae442d88723acc0d3a9517">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.13333334</float>
						</Properties>
						<Item class="Pose" referent="RBX34790788930b43199a88b1c486efea27">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX693d0c2c3f324d498b03786fac332b4c">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-2.38418579e-07</X>
										<Y>-8.94069672e-08</Y>
										<Z>-3.7252903e-09</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0.999690175</R11>
										<R12>0.0248898976</R12>
										<R20>0</R20>
										<R21>-0.0248898976</R21>
										<R22>0.999690175</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBXd86b2d304fef4843a205292440c04235">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBXb215afc2c69448a7913888bdb2592cd9">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.57627869e-07</X>
												<Y>-0.122784108</Y>
												<Z>0.163063318</Z>
												<R00>0.986591399</R00>
												<R01>0.104055874</R01>
												<R02>-0.125736773</R02>
												<R10>-0.152601719</R10>
												<R11>0.861339808</R11>
												<R12>-0.484568506</R12>
												<R20>0.0578798801</R20>
												<R21>0.497258782</R21>
												<R22>0.865669608</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXeb0247b0471447439ac8a9299b71d6a4">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>9.6231699e-05</Y>
													<Z>5.05819917e-05</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.8852911</R11>
													<R12>-0.465037286</R12>
													<R20>0</R20>
													<R21>0.465037286</R21>
													<R22>0.8852911</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX8c12d372c1c047b792a6c28e4a33ee60">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.033344388</X>
												<Y>-0.222299695</Y>
												<Z>0.21465081</Z>
												<R00>0.796988547</R00>
												<R01>-0.518453181</R01>
												<R02>0.309864014</R02>
												<R10>0.507248282</R10>
												<R11>0.853035569</R11>
												<R12>0.1225954</R12>
												<R20>-0.327884942</R20>
												<R21>0.0594709218</R21>
												<R22>0.942843974</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXfee590240fcd4ab582bc9991fc834183">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>-8.72612e-05</Y>
													<Z>-6.47455454e-05</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.803105891</R11>
													<R12>-0.595836222</R12>
													<R20>0</R20>
													<R21>0.595836222</R21>
													<R22>0.803105891</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX789d13d5b33e45c6ab5f20b9673e2c06">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.99768436</R11>
												<R12>0.0680146813</R12>
												<R20>0</R20>
												<R21>-0.0680146813</R21>
												<R22>0.99768436</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX3aae9fa9fd2642e48b386df4941bd6de">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.633333325</float>
						</Properties>
						<Item class="Pose" referent="RBX747298fba63b41449ee9ab068e874c15">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXb656abacc6a340868b2c01481b43e355">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-2.38418579e-07</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX81bb858116dd418b9db634fbb9a53d36">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-1.1920929e-07</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXd5658c262b514e659794a28c38a8595d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.57627869e-07</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXa761b8c4571d4447866587eebf918ca5">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>0.000108718872</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXf10fef0f181c46be8c223b32f48c55c4">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0.000479340553</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX5b9ca6fec078430baf8f518232fd191a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.57627869e-07</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX13a2e006ad7a4988b9539f6e47fc70c5">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>-0.000108718872</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX0fda3ec7aa1445408baf67c3213ac501">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0.000479340553</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXefe436957ebc420fb365c521c14fccc5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX717860c5cec14ff18ae8fadd3180c5f9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.233333334</float>
						</Properties>
						<Item class="Pose" referent="RBXd2ac2b5aeaa64a94a5d8b9d1c5935c3f">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXc7cb5ff28cb245e58508eb8c07502e43">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-2.30967999e-07</X>
										<Y>-1.1920929e-07</Y>
										<Z>5.96046448e-08</Z>
										<R00>0.966806352</R00>
										<R01>0.0840539187</R01>
										<R02>0.241289109</R02>
										<R10>-0.00635962468</R10>
										<R11>0.95196563</R11>
										<R12>-0.306138605</R12>
										<R20>-0.255431116</R20>
										<R21>0.294442266</R21>
										<R22>0.920901</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX935e685ee1a44e7c9694fcc90aeef868">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-7.4505806e-08</X>
											<Y>-3.57627869e-07</Y>
											<Z>1.49011612e-08</Z>
											<R00>0.911375523</R00>
											<R01>-0.264083683</R01>
											<R02>0.31568104</R02>
											<R10>0.211295009</R10>
											<R11>0.958426654</R11>
											<R12>0.191762298</R12>
											<R20>-0.353198379</R20>
											<R21>-0.10806559</R21>
											<R22>0.929286122</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX48d789a4e936446a90100fa9a24af7e6">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.033344388</X>
												<Y>-0.22229974</Y>
												<Z>0.21465081</Z>
												<R00>0.796988547</R00>
												<R01>-0.545119464</R01>
												<R02>0.26010412</R02>
												<R10>0.507248282</R10>
												<R11>0.837862968</R11>
												<R12>0.201705039</R12>
												<R20>-0.327884942</R20>
												<R21>-0.0288192034</R21>
												<R22>0.944278002</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXaded6990cb1d4c689a5ff7fc3aa9013e">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>-6.17951155e-05</Y>
													<Z>-8.9392066e-05</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.568823695</R11>
													<R12>-0.8224594</R12>
													<R20>0</R20>
													<R21>0.8224594</R21>
													<R22>0.568823695</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX6f272ee3fa6f432690ff7a1830becefc">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>5.96046448e-08</Y>
												<Z>-4.65661287e-09</Z>
												<R00>0.900026917</R00>
												<R01>-0.216262296</R01>
												<R02>0.378394336</R02>
												<R10>0.208069161</R10>
												<R11>0.976085901</R11>
												<R12>0.0629574135</R12>
												<R20>-0.382960707</R20>
												<R21>0.0220688283</R21>
												<R22>0.923501074</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX62a5c5c4b38f435f88e47bcdd63a2098">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.333333343</float>
						</Properties>
						<Item class="Pose" referent="RBXa875711db10d44cc813e4efd3741effb">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXe0519204a629415cabc186019c7ba048">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-2.23517418e-07</X>
										<Y>-1.49011612e-07</Y>
										<Z>7.82310963e-08</Z>
										<R00>0.9380126</R00>
										<R01>0.0840539187</R01>
										<R02>0.336254984</R02>
										<R10>0.0241216663</R10>
										<R11>0.95196563</R11>
										<R12>-0.305253088</R12>
										<R20>-0.345760942</R20>
										<R21>0.294442266</R21>
										<R22>0.890928268</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX32b11eb8e3c84ad9a72730e487455b10">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-1.1920929e-07</X>
											<Y>-2.38418579e-07</Y>
											<Z>-1.49011612e-08</Z>
											<R00>0.85846132</R00>
											<R01>-0.329046369</R01>
											<R02>0.393411666</R02>
											<R10>0.180460915</R10>
											<R11>0.911804914</R11>
											<R12>0.368843675</R12>
											<R20>-0.48008132</R20>
											<R21>-0.245642602</R21>
											<R22>0.84212923</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX3948a123053b44a387ea6ee2b0e285ee">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.0333444476</X>
												<Y>-0.22229968</Y>
												<Z>0.21465084</Z>
												<R00>0.796988547</R00>
												<R01>-0.603929043</R01>
												<R02>-0.00889337063</R02>
												<R10>0.507248282</R10>
												<R11>0.661263287</R11>
												<R12>0.552657366</R12>
												<R20>-0.327884942</R20>
												<R21>-0.444972634</R21>
												<R22>0.833361149</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX2751cd18b3ee44fc9f8cea0b55c0434a">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>-6.17951155e-05</Y>
													<Z>-8.9392066e-05</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.568823695</R11>
													<R12>-0.8224594</R12>
													<R20>0</R20>
													<R21>0.8224594</R21>
													<R22>0.568823695</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX3067f94c25654a13be4aa2a928beb7c1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>5.96046448e-08</Y>
												<Z>-4.65661287e-09</Z>
												<R00>0.900026917</R00>
												<R01>-0.216262296</R01>
												<R02>0.378394336</R02>
												<R10>0.208069161</R10>
												<R11>0.976085901</R11>
												<R12>0.0629574135</R12>
												<R20>-0.382960707</R20>
												<R21>0.0220688283</R21>
												<R22>0.923501074</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBXa50c2dbb1ccb416a85fd43cf97bab07d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-2.98023224e-07</X>
												<Y>-0.122784182</Y>
												<Z>0.163063347</Z>
												<R00>0.951014221</R00>
												<R01>0.30305627</R01>
												<R02>-0.0610630736</R02>
												<R10>-0.304529965</R10>
												<R11>0.952364206</R11>
												<R12>-0.0162520707</R12>
												<R20>0.053228993</R20>
												<R21>0.0340514518</R21>
												<R22>0.998001695</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX0f19582f3960474dbfa5c8b1f1402ffa">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.433333337</float>
						</Properties>
						<Item class="Pose" referent="RBX4295b3587ef643fca6ad6596857b93ec">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX06bcba23195f4e878d9173d3b29128ad">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-2.08616257e-07</X>
										<Y>-1.63912773e-07</Y>
										<Z>1.08033419e-07</Z>
										<R00>0.892370939</R00>
										<R01>0.0840539187</R01>
										<R02>0.443406224</R02>
										<R10>0.0595740676</R10>
										<R11>0.95196563</R11>
										<R12>-0.300353467</R12>
										<R20>-0.447353393</R20>
										<R21>0.294442266</R21>
										<R22>0.844499052</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBXf937c02cab554876845e7be3900f27c9">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-2.98023224e-07</X>
											<Y>-2.38418579e-07</Y>
											<Z>-2.98023224e-08</Z>
											<R00>0.909351349</R00>
											<R01>-0.316039175</R01>
											<R02>0.270554155</R02>
											<R10>0.208058044</R10>
											<R11>0.908627927</R11>
											<R12>0.36208728</R12>
											<R20>-0.360266745</R20>
											<R21>-0.272973537</R21>
											<R22>0.89201653</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX427a9c98c46f4d2a9b57584dc9eda8a9">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.033344388</X>
												<Y>-0.222299725</Y>
												<Z>0.21465078</Z>
												<R00>0.796988547</R00>
												<R01>-0.602309823</R01>
												<R02>-0.0450812876</R02>
												<R10>0.507248282</R10>
												<R11>0.626943767</R11>
												<R12>0.591304421</R12>
												<R20>-0.327884942</R20>
												<R21>-0.494130135</R21>
												<R22>0.805187464</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXd949414cf7d7494a876d6b685698857a">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0.000478744507</X>
													<Y>-6.17951155e-05</Y>
													<Z>-8.9392066e-05</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.568823695</R11>
													<R12>-0.8224594</R12>
													<R20>0</R20>
													<R21>0.8224594</R21>
													<R22>0.568823695</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX1e3b7a90f0114a8b83256740c34c617a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-1.49011612e-08</X>
												<Y>1.1920929e-07</Y>
												<Z>7.4505806e-09</Z>
												<R00>0.900026917</R00>
												<R01>-0.277166814</R01>
												<R02>0.336348355</R02>
												<R10>0.208069161</R10>
												<R11>0.951361179</R11>
												<R12>0.227198705</R12>
												<R20>-0.382960707</R20>
												<R21>-0.134501219</R21>
												<R22>0.913920522</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX1e92a79dec4142798bbfd6d41768b678">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">false</bool>
						<string name="Name">StunRight</string>
						<token name="Priority">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI4OTU5Mg==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBX51bf0d07d01846e985120db7eeed7357">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBXe90ffad80e324894a5461af219e1988c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX5cdb17839332413587222627c6f56fd3">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX0699d5fb786b45eba330866efb56f13b">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX7a4aeac9a53747989cf8df544fd39316">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX3d71e51cd7a84aada6e9db62c30ca959">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX8d1165f874fb4c89bf25f0451c9e1b6c">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX1a2005b772294684960274c0e821dada">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBX02cb759102b0477ba09bb6043da1897d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXae30c5dea4ab4e8a80707170222d78e2">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXf8af21dd0a9146589f3cc1f5dab12ebc">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX6c9caf77029e46ceba706b9f861107ef">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.13333334</float>
						</Properties>
						<Item class="Pose" referent="RBX08be9ebb4c4a4324a6fcdbf677a80f20">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX4524ad4e2c404d6aab0e09202230e334">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-8.94069672e-08</Y>
										<Z>-3.7252903e-09</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0.999690175</R11>
										<R12>0.0248898976</R12>
										<R20>0</R20>
										<R21>-0.0248898976</R21>
										<R22>0.999690175</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBXe0e33827e5624ac3b2141450c7903f3f">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBXb2690a38c03e4c67afcd22169ca9c83c">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.03334409</X>
												<Y>-0.222299516</Y>
												<Z>0.214650691</Z>
												<R00>0.796988547</R00>
												<R01>0.518453181</R01>
												<R02>-0.309864014</R02>
												<R10>-0.507248282</R10>
												<R11>0.853035569</R11>
												<R12>0.1225954</R12>
												<R20>0.327884942</R20>
												<R21>0.0594709218</R21>
												<R22>0.942843974</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXea92cdaf288045c8b5f655631e0a41e4">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>5.96046448e-08</Y>
													<Z>2.98023224e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.803105891</R11>
													<R12>-0.595836222</R12>
													<R20>0</R20>
													<R21>0.595836222</R21>
													<R22>0.803105891</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXf857b5ec6c9c4c4584ae2cd0c0c04deb">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.99768436</R11>
												<R12>0.0680146813</R12>
												<R20>0</R20>
												<R21>-0.0680146813</R21>
												<R22>0.99768436</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBXca541eae2ffa496782f8ea63f68ed21d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>-0.122784168</Y>
												<Z>0.163063332</Z>
												<R00>0.986591399</R00>
												<R01>-0.104055874</R01>
												<R02>0.125736773</R02>
												<R10>0.152601719</R10>
												<R11>0.861339808</R11>
												<R12>-0.484568506</R12>
												<R20>-0.0578798801</R20>
												<R21>0.497258782</R21>
												<R22>0.865669608</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXb03b8baee07b4e4380bb1acddead3c53">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-1.49011612e-08</Y>
													<Z>2.23517418e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.8852911</R11>
													<R12>-0.465037286</R12>
													<R20>0</R20>
													<R21>0.465037286</R21>
													<R22>0.8852911</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBXb0b897647ccb48b795c62ea103cb8075">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.233333334</float>
						</Properties>
						<Item class="Pose" referent="RBXb2c8bfe55cd84a3c8b94e21900c3b9d6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXa6e53b0c01964a91b6d0b6c86f5021c9">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-1.1920929e-07</Y>
										<Z>0</Z>
										<R00>0.966806352</R00>
										<R01>-0.0840539187</R01>
										<R02>-0.241289109</R02>
										<R10>0.00635962468</R10>
										<R11>0.95196563</R11>
										<R12>-0.306138605</R12>
										<R20>0.255431116</R20>
										<R21>0.294442266</R21>
										<R22>0.920901</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBXab1ebdcefc0e4784b302535b177ff365">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-4.47034836e-08</X>
											<Y>-3.57627869e-07</Y>
											<Z>-2.98023224e-08</Z>
											<R00>0.911375523</R00>
											<R01>0.264083683</R01>
											<R02>-0.31568104</R02>
											<R10>-0.211295009</R10>
											<R11>0.958426654</R11>
											<R12>0.191762298</R12>
											<R20>0.353198379</R20>
											<R21>-0.10806559</R21>
											<R22>0.929286122</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXee776f923ee14322bdc4a7143a6e0fa9">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.03334409</X>
												<Y>-0.222299561</Y>
												<Z>0.214650691</Z>
												<R00>0.796988547</R00>
												<R01>0.545119464</R01>
												<R02>-0.26010412</R02>
												<R10>-0.507248282</R10>
												<R11>0.837862968</R11>
												<R12>0.201705039</R12>
												<R20>0.327884942</R20>
												<R21>-0.0288192034</R21>
												<R22>0.944278002</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX8f65180c58c64c66a8f0734907be08de">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>4.47034836e-08</Y>
													<Z>2.98023224e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.568823695</R11>
													<R12>-0.8224594</R12>
													<R20>0</R20>
													<R21>0.8224594</R21>
													<R22>0.568823695</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX9a9995b99fce49e49d993e5904a6a4a6">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>5.96046448e-08</Y>
												<Z>-4.65661287e-09</Z>
												<R00>0.900026917</R00>
												<R01>0.216262296</R01>
												<R02>-0.378394336</R02>
												<R10>-0.208069161</R10>
												<R11>0.976085901</R11>
												<R12>0.0629574135</R12>
												<R20>0.382960707</R20>
												<R21>0.0220688283</R21>
												<R22>0.923501074</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX75aa89d7c60d47b1900c51b2002c4f86">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.333333343</float>
						</Properties>
						<Item class="Pose" referent="RBX031ce84583044dd7b4a5c8b466a50e04">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX690226bdeda149f7bf45c14de3587951">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-1.49011612e-07</Y>
										<Z>-3.7252903e-09</Z>
										<R00>0.9380126</R00>
										<R01>-0.0840539187</R01>
										<R02>-0.336254984</R02>
										<R10>-0.0241216663</R10>
										<R11>0.95196563</R11>
										<R12>-0.305253088</R12>
										<R20>0.345760942</R20>
										<R21>0.294442266</R21>
										<R22>0.890928268</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX24bf338881b94a89981b28c531a9f79a">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>-2.38418579e-07</Y>
											<Z>-7.4505806e-08</Z>
											<R00>0.85846132</R00>
											<R01>0.329046369</R01>
											<R02>-0.393411666</R02>
											<R10>-0.180460915</R10>
											<R11>0.911804914</R11>
											<R12>0.368843675</R12>
											<R20>0.48008132</R20>
											<R21>-0.245642602</R21>
											<R22>0.84212923</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXff38505f7f7345f786898dc16f84508d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0333441496</X>
												<Y>-0.222299501</Y>
												<Z>0.21465072</Z>
												<R00>0.796988547</R00>
												<R01>0.603929043</R01>
												<R02>0.00889337063</R02>
												<R10>-0.507248282</R10>
												<R11>0.661263287</R11>
												<R12>0.552657366</R12>
												<R20>0.327884942</R20>
												<R21>-0.444972634</R21>
												<R22>0.833361149</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX6d894e35aac34241a24b5d93f7ce0c19">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>4.47034836e-08</Y>
													<Z>2.98023224e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.568823695</R11>
													<R12>-0.8224594</R12>
													<R20>0</R20>
													<R21>0.8224594</R21>
													<R22>0.568823695</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX04c2a0fc65ec4cb9821df4f66cb600a1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>5.96046448e-08</Y>
												<Z>-4.65661287e-09</Z>
												<R00>0.900026917</R00>
												<R01>0.216262296</R01>
												<R02>-0.378394336</R02>
												<R10>-0.208069161</R10>
												<R11>0.976085901</R11>
												<R12>0.0629574135</R12>
												<R20>0.382960707</R20>
												<R21>0.0220688283</R21>
												<R22>0.923501074</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBX7c316e1a7c944e6590f9fac1e5dfc4dd">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-5.96046448e-08</X>
												<Y>-0.122784302</Y>
												<Z>0.163063362</Z>
												<R00>0.951014221</R00>
												<R01>-0.30305627</R01>
												<R02>0.0610630736</R02>
												<R10>0.304529965</R10>
												<R11>0.952364206</R11>
												<R12>-0.0162520707</R12>
												<R20>-0.053228993</R20>
												<R21>0.0340514518</R21>
												<R22>0.998001695</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX93797342c8f84316b975f8261def615c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.433333337</float>
						</Properties>
						<Item class="Pose" referent="RBX8b5805a9fa3a4222ac7dedc00792a0b3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXd8a7873155b5406b9ac352798bd9fa61">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>-3.7252903e-09</X>
										<Y>-1.63912773e-07</Y>
										<Z>3.7252903e-09</Z>
										<R00>0.892370939</R00>
										<R01>-0.0840539187</R01>
										<R02>-0.443406224</R02>
										<R10>-0.0595740676</R10>
										<R11>0.95196563</R11>
										<R12>-0.300353467</R12>
										<R20>0.447353393</R20>
										<R21>0.294442266</R21>
										<R22>0.844499052</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX0da0a0245ba646c28d07528b9cf191f2">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>1.78813934e-07</X>
											<Y>-2.38418579e-07</Y>
											<Z>-5.96046448e-08</Z>
											<R00>0.909351349</R00>
											<R01>0.316039175</R01>
											<R02>-0.270554155</R02>
											<R10>-0.208058044</R10>
											<R11>0.908627927</R11>
											<R12>0.36208728</R12>
											<R20>0.360266745</R20>
											<R21>-0.272973537</R21>
											<R22>0.89201653</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXf7a982aef6924f6388adc338da018c5f">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.03334409</X>
												<Y>-0.222299546</Y>
												<Z>0.214650661</Z>
												<R00>0.796988547</R00>
												<R01>0.602309823</R01>
												<R02>0.0450812876</R02>
												<R10>-0.507248282</R10>
												<R11>0.626943767</R11>
												<R12>0.591304421</R12>
												<R20>0.327884942</R20>
												<R21>-0.494130135</R21>
												<R22>0.805187464</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX94257f583ffd4bee99ea59086c6eb2ea">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>4.47034836e-08</Y>
													<Z>2.98023224e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.568823695</R11>
													<R12>-0.8224594</R12>
													<R20>0</R20>
													<R21>0.8224594</R21>
													<R22>0.568823695</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX3025abd3e7c647eb9adfe474c112233a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>1.49011612e-08</X>
												<Y>1.1920929e-07</Y>
												<Z>7.4505806e-09</Z>
												<R00>0.900026917</R00>
												<R01>0.277166814</R01>
												<R02>-0.336348355</R02>
												<R10>-0.208069161</R10>
												<R11>0.951361179</R11>
												<R12>0.227198705</R12>
												<R20>0.382960707</R20>
												<R21>-0.134501219</R21>
												<R22>0.913920522</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX06da669693004107b2b23e1d7c396617">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.633333325</float>
						</Properties>
						<Item class="Pose" referent="RBXf1bb5c14047e4d4abfc7adec442b18b4">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXc2cae09ba96c49d4877fd68cfd577017">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX87a4d7f74ec5435e83a57f323292555b">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX2342121d60b54db1b4b0f3c6710493fc">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX6b60cfa123024e53b103cf171c9fc7a1">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXa648352d77fe41f0aac2c1a2cedae502">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX79e08076a09e42f4b76641fd54a2a9a0">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBXf74c260f5698443192d8abfffdd44aca">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXd51595d5a35d45dfb777d7f493513b4c">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX48b7542bd53d4e20838a16d6e725abec">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX20915ef8fe834a53a98a543376fe253a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">false</bool>
						<string name="Name">StunStab</string>
						<token name="Priority">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI4OTQ4OA==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBXed9c69fb8df04add819d2bfc4364ec80">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBX78d5c96cc64d44d6b951370c3d604603">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX2e6f852387e34ca9a79d101273950d54">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0.999750018</R11>
										<R12>-0.0223592408</R12>
										<R20>0</R20>
										<R21>0.0223592408</R21>
										<R22>0.999750018</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX0a387fc07b3a468aa57a05eeaca3f8c2">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX6835864699124ac29d1ccb3d94b57aeb">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0224943757</X>
												<Y>-0.360569805</Y>
												<Z>0.322562069</Z>
												<R00>0.99719882</R00>
												<R01>0.00109319389</R01>
												<R02>-0.0747880638</R02>
												<R10>-0.0634037778</R10>
												<R11>0.542791724</R11>
												<R12>-0.837470651</R12>
												<R20>0.0396788269</R20>
												<R21>0.839866698</R21>
												<R22>0.54134059</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXf2c72f037b744e3683ea52f49ea9ac7b">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>1.04308128e-07</Y>
													<Z>7.4505806e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.803105891</R11>
													<R12>-0.595836222</R12>
													<R20>0</R20>
													<R21>0.595836222</R21>
													<R22>0.803105891</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXb82e6d2d3a5f45a1b967cef360fa9e3d">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXa438558a712b4025a245f246ca99265a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>5.96046448e-08</X>
												<Y>-0.122784764</Y>
												<Z>0.163063258</Z>
												<R00>0.990392268</R00>
												<R01>-0.113755926</R01>
												<R02>-0.0786305368</R02>
												<R10>0.0407954007</R10>
												<R11>0.783643961</R11>
												<R12>-0.61986953</R12>
												<R20>0.132132217</R20>
												<R21>0.61070627</R21>
												<R22>0.78075552</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXcc7cd27e57844f208ff1834d13250cc3">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-1.49011612e-08</Y>
													<Z>2.23517418e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.8852911</R11>
													<R12>-0.465037286</R12>
													<R20>0</R20>
													<R21>0.465037286</R21>
													<R22>0.8852911</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX51bb266cc61444819e994dc38b6c468b">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX0a8c453c5b3c4a949aba1b00fc20280f">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>5.96046448e-08</Y>
												<Z>-3.7252903e-09</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.99768436</R11>
												<R12>0.0680146813</R12>
												<R20>0</R20>
												<R21>-0.0680146813</R21>
												<R22>0.99768436</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX1702bff3d0da423186bffa48b08ed975">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.0833333358</float>
						</Properties>
						<Item class="Pose" referent="RBXf0f5ec07fa1b4f54acf33386f19277ca">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX714d27670016405bb0db3dfe345f7770">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>-1.86264515e-09</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0.995991528</R11>
										<R12>-0.0894471332</R12>
										<R20>0</R20>
										<R21>0.0894471332</R21>
										<R22>0.995991528</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX7787b369142841b1912212f3e19230ca">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.992963076</R11>
											<R12>-0.118424147</R12>
											<R20>0</R20>
											<R21>0.118424147</R21>
											<R22>0.992963076</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX77a489dce8874f0b8f099126492a2ac3">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0224943161</X>
												<Y>-0.360569835</Y>
												<Z>0.322562069</Z>
												<R00>0.977598548</R00>
												<R01>0.196742922</R01>
												<R02>-0.0747880638</R02>
												<R10>-0.168678135</R10>
												<R11>0.519798577</R11>
												<R12>-0.837470651</R12>
												<R20>-0.125891715</R20>
												<R21>0.831325293</R21>
												<R22>0.54134059</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX99dca81160f0466b9cef67838d6ee73a">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>2.98023224e-08</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.733152688</R11>
													<R12>-0.680064023</R12>
													<R20>0</R20>
													<R21>0.680064023</R21>
													<R22>0.733152688</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX9ebf23f67beb4623ae106be27160c142">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-5.96046448e-08</X>
												<Y>-0.122784406</Y>
												<Z>0.163063303</Z>
												<R00>0.859770358</R00>
												<R01>-0.349884212</R01>
												<R02>-0.37198928</R02>
												<R10>0.0623256266</R10>
												<R11>0.794864118</R11>
												<R12>-0.603578329</R12>
												<R20>0.506863475</R20>
												<R21>0.495754331</R21>
												<R22>0.705207288</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX171983afc221419cb86b3d2c51ffce9d">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.958973765</R11>
													<R12>-0.28349483</R12>
													<R20>0</R20>
													<R21>0.28349483</R21>
													<R22>0.958973765</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBXba32e2d6e21340bfb19bd817f26ec88c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.166666672</float>
						</Properties>
						<Item class="Pose" referent="RBX3994fa8b70ec488bab99412657e38cf7">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXa1a1b15c26ad4e4b9ca31fc451a9bb6b">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-1.49011612e-08</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0.990179718</R11>
										<R12>-0.139799967</R12>
										<R20>0</R20>
										<R21>0.139799967</R21>
										<R22>0.990179718</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX6b19981d4e65447098c1614f65277259">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.981294155</R11>
											<R12>-0.192514539</R12>
											<R20>0</R20>
											<R21>0.192514539</R21>
											<R22>0.981294155</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXd70545d8aaed42fd9ea49390d8c8e187">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0224943161</X>
												<Y>-0.360569835</Y>
												<Z>0.322562069</Z>
												<R00>0.977598548</R00>
												<R01>0.196742922</R01>
												<R02>-0.0747880638</R02>
												<R10>-0.168678135</R10>
												<R11>0.519798577</R11>
												<R12>-0.837470651</R12>
												<R20>-0.125891715</R20>
												<R21>0.831325293</R21>
												<R22>0.54134059</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXb3770e6dce684ba4a9314144e1af46ce">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.617303789</R11>
													<R12>-0.786724925</R12>
													<R20>0</R20>
													<R21>0.786724925</R21>
													<R22>0.617303789</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXf0103a4ac06f49e787347b0987216543">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-5.96046448e-08</X>
												<Y>-0.122784406</Y>
												<Z>0.163063303</Z>
												<R00>0.859770358</R00>
												<R01>-0.349884212</R01>
												<R02>-0.37198928</R02>
												<R10>0.0623256266</R10>
												<R11>0.794864118</R11>
												<R12>-0.603578329</R12>
												<R20>0.506863475</R20>
												<R21>0.495754331</R21>
												<R22>0.705207288</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX832724e238264e55a6e7bdb3aa584988">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.958973765</R11>
													<R12>-0.28349483</R12>
													<R20>0</R20>
													<R21>0.28349483</R21>
													<R22>0.958973765</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX1708ebac86e7402088cb229fe358b08a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.977509141</R11>
												<R12>-0.210893065</R12>
												<R20>0</R20>
												<R21>0.210893065</R21>
												<R22>0.977509141</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX6ccc978e67f042b7abe70ecee06e703f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.25</float>
						</Properties>
						<Item class="Pose" referent="RBX821d54dd40c34085a78402395ca4ebae">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX7f43045fadc84e53843181b5b74630d4">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-4.47034836e-08</Y>
										<Z>-1.11758709e-08</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0.980867267</R11>
										<R12>-0.194677383</R12>
										<R20>0</R20>
										<R21>0.194677383</R21>
										<R22>0.980867267</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBXbc3dfd9cff4c4aef90ca7292268c3e16">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.986487448</R11>
											<R12>-0.163836777</R12>
											<R20>0</R20>
											<R21>0.163836777</R21>
											<R22>0.986487448</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX2fc19aa168f14660bd3cc4b8b3c81080">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0224943161</X>
												<Y>-0.360569835</Y>
												<Z>0.322562069</Z>
												<R00>0.977598548</R00>
												<R01>0.196742922</R01>
												<R02>-0.0747880638</R02>
												<R10>-0.168678135</R10>
												<R11>0.519798577</R11>
												<R12>-0.837470651</R12>
												<R20>-0.125891715</R20>
												<R21>0.831325293</R21>
												<R22>0.54134059</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXf05a8726ed42465ab0d78d2c818bfeba">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-2.98023224e-08</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.733181238</R11>
													<R12>-0.680033326</R12>
													<R20>0</R20>
													<R21>0.680033326</R21>
													<R22>0.733181238</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXb7a945b4aa9248da94e5adaf07eded78">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXa87c166b6de04ea8a2965b308ce67c3c">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-5.96046448e-08</X>
												<Y>-0.122784406</Y>
												<Z>0.163063303</Z>
												<R00>0.859770358</R00>
												<R01>-0.349884212</R01>
												<R02>-0.37198928</R02>
												<R10>0.0623256266</R10>
												<R11>0.794864118</R11>
												<R12>-0.603578329</R12>
												<R20>0.506863475</R20>
												<R21>0.495754331</R21>
												<R22>0.705207288</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXb8555c7181614ea88a115c21dbbffd29">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>-7.4505806e-09</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.897928536</R11>
													<R12>-0.44014135</R12>
													<R20>0</R20>
													<R21>0.44014135</R21>
													<R22>0.897928536</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX48b35f71dc86427db0e394409bd5cacf">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX0e104a82654c4b0689b0ccd41bb8b9c1">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>5.96046448e-08</Y>
												<Z>2.98023224e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.906813204</R11>
												<R12>-0.421532869</R12>
												<R20>0</R20>
												<R21>0.421532869</R21>
												<R22>0.906813204</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX8a41b5f244494c2da566c604aa116d70">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">true</bool>
						<string name="Name">WalkAnimation</string>
						<token name="Priority">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI5MDI0NQ==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBXcf4405bb4cba43dbbc7df9888d411619">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBXde71e9a90e514b808795d2723dd5bf87">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX27ec779dab234f4d9c4ae483bc540bcd">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-0.32493782</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBXcdc446dd86ca4405a2ff77e7ef4fc2c7">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBXc52ab494cfde495286e03944f707b035">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>3.87430191e-07</Y>
												<Z>-1.1920929e-07</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.869601667</R11>
												<R12>0.493753999</R12>
												<R20>0</R20>
												<R21>-0.493753999</R21>
												<R22>0.869601667</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX90194ed9691244ebb8eaf7a9dd8d1dfc">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXaece8bd5f3204fd4829e55ea5780ea3c">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">1</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX83f4383d61094142a697fdc85935eb2e">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.00596541166</X>
												<Y>-0.0155205429</Y>
												<Z>0.0229236931</Z>
												<R00>0.976804852</R00>
												<R01>-0.0569125786</R01>
												<R02>0.206429258</R02>
												<R10>0.150664151</R10>
												<R11>0.867700875</R11>
												<R12>-0.4737041</R12>
												<R20>-0.152159154</R20>
												<R21>0.493818015</R21>
												<R22>0.856149077</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX476ab619a6fc4f46ace35f3f8ac3f71f">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>8.7916851e-07</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.80169785</R11>
													<R12>-0.597729743</R12>
													<R20>0</R20>
													<R21>0.597729743</R21>
													<R22>0.80169785</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX9fdcc29796ec496c9fc154f5833a70ef">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>-7.4505806e-07</Y>
											<Z>-2.98023224e-08</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.934543967</R11>
											<R12>0.355847597</R12>
											<R20>0</R20>
											<R21>-0.355847597</R21>
											<R22>0.934543967</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXce061546a55b4d8db6f7823666ecf399">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>1.04308128e-07</Y>
												<Z>-1.49011612e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.679120421</R11>
												<R12>0.734026909</R12>
												<R20>0</R20>
												<R21>-0.734026909</R21>
												<R22>0.679120421</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX568cab311faa40e3b664a42057b46fa4">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>1.10594556e-08</X>
													<Y>-2.98023224e-08</Y>
													<Z>0</Z>
													<R00>0.999914765</R00>
													<R01>0.0106894905</R01>
													<R02>0.00749596674</R02>
													<R10>-0.0123987794</R10>
													<R11>0.957326531</R11>
													<R12>0.288742214</R12>
													<R20>-0.00408957154</R20>
													<R21>-0.288810551</R21>
													<R22>0.957377493</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX780d0a2fd8984e64b3e4fdd07525da6c">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>1.01327896e-06</Y>
											<Z>2.08616257e-07</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.605993748</R11>
											<R12>-0.795469522</R12>
											<R20>0</R20>
											<R21>0.795469522</R21>
											<R22>0.605993748</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">LeftUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX0367f4af1275401e912cd839ebb3c64d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>1.34110451e-07</Y>
												<Z>-2.14204192e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.998808324</R11>
												<R12>0.048806034</R12>
												<R20>0</R20>
												<R21>-0.048806034</R21>
												<R22>0.998808324</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX7f1fdbb9fd654f0b9850242040f872ea">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>2.98023224e-08</Y>
													<Z>5.58793545e-09</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.989812493</R11>
													<R12>-0.142377153</R12>
													<R20>0</R20>
													<R21>0.142377153</R21>
													<R22>0.989812493</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBXd6ec8c37e1d840669a927873a06bad0a">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.150000006</float>
						</Properties>
						<Item class="Pose" referent="RBXd8dd5becb0bd4c7b88a2ea38ff62c428">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX1d03967ff8da493f986467653214ba56">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0.00157737732</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBXf4a65166008746b981b989cd4619f39f">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBXb68ad2f6b8e44acdb9cc56d020b02c49">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>4.17232513e-07</Y>
												<Z>1.49011612e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.999806106</R11>
												<R12>0.0196935236</R12>
												<R20>0</R20>
												<R21>-0.0196935236</R21>
												<R22>0.999806106</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX0b79a30c2f994dc8a63655f6afed1db0">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.992121398</R11>
													<R12>-0.125280306</R12>
													<R20>0</R20>
													<R21>0.125280306</R21>
													<R22>0.992121398</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX0f09668f4917402e955467ca2bc007dd">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>2.04890966e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.998200417</R11>
												<R12>0.0599660277</R12>
												<R20>0</R20>
												<R21>-0.0599660277</R21>
												<R22>0.998200417</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX63c77fa115554c1ab866cbc80732bea0">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-1.49011612e-08</Y>
													<Z>2.60770321e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.996349752</R11>
													<R12>-0.0853647515</R12>
													<R20>0</R20>
													<R21>0.0853647515</R21>
													<R22>0.996349752</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX487d829f6eac425bb9dcc50baafbac91">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>-1.66893005e-06</Y>
											<Z>-1.1920929e-07</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.941961348</R11>
											<R12>-0.335720986</R12>
											<R20>0</R20>
											<R21>0.335720986</R21>
											<R22>0.941961348</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXae93f2c2f94948d7bc96a8b5def04643">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>-4.32133675e-07</Y>
												<Z>-8.94069672e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.784453154</R11>
												<R12>0.620187998</R12>
												<R20>0</R20>
												<R21>-0.620187998</R21>
												<R22>0.784453154</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX7f440f59d9c04733bd256020cf310de8">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>-1.97906047e-09</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.999707878</R11>
													<R12>0.0241705179</R12>
													<R20>0</R20>
													<R21>-0.0241705179</R21>
													<R22>0.999707878</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX835ee09aa0494e98a7d186c7ba361b02">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>1.28764555e-10</X>
											<Y>1.63912773e-06</Y>
											<Z>4.29572538e-08</Z>
											<R00>0.994847715</R00>
											<R01>0</R01>
											<R02>-0.101380698</R02>
											<R10>-0.000290949858</R10>
											<R11>0.999996006</R11>
											<R12>-0.00285508786</R12>
											<R20>0.101380296</R20>
											<R21>0.00286987424</R21>
											<R22>0.994843721</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">LeftUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX0c69b3ba48354b3ebe10eea2488ac9cf">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0.0170770586</Y>
												<Z>-0.00981115177</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.984306037</R11>
												<R12>0.176469773</R12>
												<R20>0</R20>
												<R21>-0.176469773</R21>
												<R22>0.984306037</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXc5304fb7ffb646c98d37dddda37033d3">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>5.21540642e-08</Y>
													<Z>6.98491931e-09</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.991523743</R11>
													<R12>-0.129925802</R12>
													<R20>0</R20>
													<R21>0.129925802</R21>
													<R22>0.991523743</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX0cea782cc7f94e9f90664966dd4a4c71">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.300000012</float>
						</Properties>
						<Item class="Pose" referent="RBXd33251b094c246799944a0c3a24ec152">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXdf435019db804d469acd3bbe40a2cf20">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-0.276288986</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX21a89cd5102e4c41977e8cf7ca2b5a26">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBX0061670b573e43e5b2b2b350a2623eb0">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.0164559782</X>
												<Y>-0.0114927888</Y>
												<Z>-0.0271760225</Z>
												<R00>0.977870822</R00>
												<R01>0.120947957</R01>
												<R02>-0.170704886</R02>
												<R10>-0.17123659</R10>
												<R11>0.931492925</R11>
												<R12>-0.320934415</R12>
												<R20>0.120194033</R20>
												<R21>0.343063414</R21>
												<R22>0.931590438</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX8920fcd924734613a2c857a6d816b844">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>3.27825546e-07</Y>
													<Z>-1.49011612e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.78091979</R11>
													<R12>-0.624631405</R12>
													<R20>0</R20>
													<R21>0.624631405</R21>
													<R22>0.78091979</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBX0b0cbfe4efc949cb9ee2b060e36d73bc">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">1</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX3719eca93d974635af29b0a5eeb958ff">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>4.47034836e-08</X>
												<Y>-1.25169754e-06</Y>
												<Z>-3.87430191e-07</Z>
												<R00>0.999045968</R00>
												<R01>0</R01>
												<R02>-0.0436704159</R02>
												<R10>0.0250785612</R10>
												<R11>0.818666637</R11>
												<R12>0.573720992</R12>
												<R20>0.0357515141</R20>
												<R21>-0.574268878</R21>
												<R22>0.817885578</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXf82a9f604e6a449793ac41ce79262368">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-3.57627869e-07</Y>
													<Z>1.11758709e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.997606397</R11>
													<R12>-0.0691475123</R12>
													<R20>0</R20>
													<R21>0.0691475123</R21>
													<R22>0.997606397</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX5b73a0b4e6fa4858bb41bd7ec3c09fb4">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>6.59780675e-09</X>
											<Y>-4.47034836e-07</Y>
											<Z>3.27825546e-07</Z>
											<R00>0.999661088</R00>
											<R01>0</R01>
											<R02>0.0260326695</R02>
											<R10>0.0194198061</R10>
											<R11>0.665970206</R11>
											<R12>-0.745725453</R12>
											<R20>-0.0173369814</R20>
											<R21>0.745978296</R21>
											<R22>0.665744483</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXd41c88ef4f8c4339bff51864742b9bf2">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>-1.49011612e-07</Y>
												<Z>2.28174031e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.999713778</R11>
												<R12>0.0239212755</R12>
												<R20>0</R20>
												<R21>-0.0239212755</R21>
												<R22>0.999713778</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXdcab763631804939a6d7b253db1ae690">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>2.60770321e-08</Y>
													<Z>9.31322575e-10</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.984784544</R11>
													<R12>-0.173779801</R12>
													<R20>0</R20>
													<R21>0.173779801</R21>
													<R22>0.984784544</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX0b01f0721dbe4b34bcabbd74f4a6cf0d">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>9.23871994e-07</Y>
											<Z>5.21540642e-08</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.972989619</R11>
											<R12>0.230849162</R12>
											<R20>0</R20>
											<R21>-0.230849162</R21>
											<R22>0.972989619</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">LeftUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX1d8c8ce9e4554b719c806f617b6d61a5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>1.04308128e-07</Y>
												<Z>1.49011612e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.604973555</R11>
												<R12>0.796245515</R12>
												<R20>0</R20>
												<R21>-0.796245515</R21>
												<R22>0.604973555</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX670914ff26b4475690edd2b1787423de">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>1.86264515e-08</Y>
													<Z>-1.11758709e-08</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.936755359</R11>
													<R12>0.349985003</R12>
													<R20>0</R20>
													<R21>-0.349985003</R21>
													<R22>0.936755359</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX73fcf7343ee64fea97c1213532ca4a07">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.449999988</float>
						</Properties>
						<Item class="Pose" referent="RBXd6058ccfee2f47f780fdb0092d6baf4c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXae558240894046fd9c868711428737cf">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0.00157737732</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX0eada1faec884c79a0f2e4ccff812077">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBX5f64be078c324dd9bb6137f0b507bdda">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>4.47034836e-07</Y>
												<Z>-3.7252903e-09</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.99105823</R11>
												<R12>0.133430287</R12>
												<R20>0</R20>
												<R21>-0.133430287</R21>
												<R22>0.99105823</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX9d3506bcda0145c2b709f3cac5d32702">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>9.02218744e-10</X>
													<Y>1.49011612e-08</Y>
													<Z>-1.58324838e-08</Z>
													<R00>0.999999702</R00>
													<R01>0</R01>
													<R02>-0.000753343105</R02>
													<R10>-3.1712465e-05</R10>
													<R11>0.999113619</R11>
													<R12>-0.0420957915</R12>
													<R20>0.000752672553</R20>
													<R21>0.0420958027</R21>
													<R22>0.999113321</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX34d7fc028bd9443d82692d311c15ddfa">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>1.72294676e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.999963284</R11>
												<R12>0.00856710225</R12>
												<R20>0</R20>
												<R21>-0.00856710225</R21>
												<R22>0.999963284</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX243e5b4d43a440828d369b6de5f4ed03">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-1.49011612e-08</Y>
													<Z>7.4505806e-09</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.983423173</R11>
													<R12>-0.181325153</R12>
													<R20>0</R20>
													<R21>0.181325153</R21>
													<R22>0.983423173</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBXe858234a2e004de4884ca4fa57955d2f">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>-1.37090683e-06</Y>
											<Z>-7.4505806e-09</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.991974652</R11>
											<R12>0.126436114</R12>
											<R20>0</R20>
											<R21>-0.126436114</R21>
											<R22>0.991974652</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXa96a1a5105ca419a81f04bf56702ab71">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>-4.91738319e-07</Y>
												<Z>-2.04890966e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.995830655</R11>
												<R12>0.0912204757</R12>
												<R20>0</R20>
												<R21>-0.0912204757</R21>
												<R22>0.995830655</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX95beb98202af4fc282ced47a263e85c1">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>-1.00582838e-07</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.984944582</R11>
													<R12>-0.172869936</R12>
													<R20>0</R20>
													<R21>0.172869936</R21>
													<R22>0.984944582</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX8ca08e2f53ed448b8b89405bf45cf03e">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-2.79396772e-08</X>
											<Y>3.06963921e-06</Y>
											<Z>2.23517418e-07</Z>
											<R00>0.994847715</R00>
											<R01>-0.030080853</R01>
											<R02>-0.0968152359</R02>
											<R10>-0.000290949858</R10>
											<R11>0.954116225</R11>
											<R12>-0.299437135</R12>
											<R20>0.101380296</R20>
											<R21>0.297922522</R21>
											<R22>0.94919157</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">LeftUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX20dcaa0497054d878bcd1556c3e72d6c">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>1.49011612e-08</Y>
												<Z>-1.49011612e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.810911953</R11>
												<R12>0.585168183</R12>
												<R20>0</R20>
												<R21>-0.585168183</R21>
												<R22>0.810911953</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX89db5673b10040899a8ea46648bc3b69">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>1.00582838e-07</Y>
													<Z>1.78260962e-09</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.999999523</R11>
													<R12>0.00103092194</R12>
													<R20>0</R20>
													<R21>-0.00103092194</R21>
													<R22>0.999999523</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBXda9b337df6364c7fab4d777a36284253">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0.600000024</float>
						</Properties>
						<Item class="Pose" referent="RBXfde9eaddcdd549a5b7a413a8e48e5090">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX9d48569a71244e50beed626ea6171fc1">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>-0.32493782</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">1</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">1</float>
								</Properties>
								<Item class="Pose" referent="RBX7be03a2980664442b25f5a18ec3a8b9d">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBX781caf4b048240b290364981e8a79459">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>3.87430191e-07</Y>
												<Z>-1.1920929e-07</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.869601667</R11>
												<R12>0.493753999</R12>
												<R20>0</R20>
												<R21>-0.493753999</R21>
												<R22>0.869601667</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXbfd43363f8544969b6ce743b3a1864e9">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
											<Item class="Pose" referent="RBXb9739c83d07941ec8c761bdb88e306e6">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">1</token>
													<token name="EasingStyle">0</token>
													<string name="Name">LeftHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">1</float>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX19fca5ba9db64318b90ab5aacb6ccd33">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0.00596541166</X>
												<Y>-0.0155205429</Y>
												<Z>0.0229236931</Z>
												<R00>0.976804852</R00>
												<R01>-0.0569125786</R01>
												<R02>0.206429258</R02>
												<R10>0.150664151</R10>
												<R11>0.867700875</R11>
												<R12>-0.4737041</R12>
												<R20>-0.152159154</R20>
												<R21>0.493818015</R21>
												<R22>0.856149077</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX363e71e4b2a9439493b01f1e0fdff655">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>8.7916851e-07</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.80169785</R11>
													<R12>-0.597729743</R12>
													<R20>0</R20>
													<R21>0.597729743</R21>
													<R22>0.80169785</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX21d8048cf7a54d7a847cc96b2fa0ea8a">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>-7.4505806e-07</Y>
											<Z>-2.98023224e-08</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.934543967</R11>
											<R12>0.355847597</R12>
											<R20>0</R20>
											<R21>-0.355847597</R21>
											<R22>0.934543967</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">RightUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX716987cb5e114837a9ecdd35b219608b">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>1.04308128e-07</Y>
												<Z>-1.49011612e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.679120421</R11>
												<R12>0.734026909</R12>
												<R20>0</R20>
												<R21>-0.734026909</R21>
												<R22>0.679120421</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX34193a26c4ba43cd9084400e3f0115b5">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>1.10594556e-08</X>
													<Y>-2.98023224e-08</Y>
													<Z>0</Z>
													<R00>0.999914765</R00>
													<R01>0.0106894905</R01>
													<R02>0.00749596674</R02>
													<R10>-0.0123987794</R10>
													<R11>0.957326531</R11>
													<R12>0.288742214</R12>
													<R20>-0.00408957154</R20>
													<R21>-0.288810551</R21>
													<R22>0.957377493</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Pose" referent="RBX469e7fddd85c41f08375a7da92c201eb">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>1.01327896e-06</Y>
											<Z>2.08616257e-07</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>0.605993748</R11>
											<R12>-0.795469522</R12>
											<R20>0</R20>
											<R21>0.795469522</R21>
											<R22>0.605993748</R22>
										</CoordinateFrame>
										<token name="EasingDirection">1</token>
										<token name="EasingStyle">0</token>
										<string name="Name">LeftUpperLeg</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX62b7f69c949a487284ddd7da4ab524c8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>1.34110451e-07</Y>
												<Z>-2.14204192e-08</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>0.998808324</R11>
												<R12>0.048806034</R12>
												<R20>0</R20>
												<R21>-0.048806034</R21>
												<R22>0.998808324</R22>
											</CoordinateFrame>
											<token name="EasingDirection">1</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftLowerLeg</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX758d1e4ff8374e8d954560081bfc9eab">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>2.98023224e-08</Y>
													<Z>5.58793545e-09</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>0.989812493</R11>
													<R12>-0.142377153</R12>
													<R20>0</R20>
													<R21>0.142377153</R21>
													<R22>0.989812493</R22>
												</CoordinateFrame>
												<token name="EasingDirection">1</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftFoot</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX510c759c6b1a47cc8b63fc0dbfc59f0f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">true</bool>
						<string name="Name">Block</string>
						<token name="Priority">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI4OTc5Mw==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBXde439b411a35484fa13a6305c2fa0f04">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBX0277047a63a74e8cb680c476834eb20c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXd02a3c2c9fe14fa7adacd1060e988f4d">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX6d342813e1834103836bd6316944263a">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-1.41561031e-07</X>
											<Y>1.78813934e-06</Y>
											<Z>-1.13993883e-06</Z>
											<R00>0.765460372</R00>
											<R01>-0.0664707273</R01>
											<R02>-0.640040696</R02>
											<R10>0.129954562</R10>
											<R11>0.990124226</R11>
											<R12>0.0525916256</R12>
											<R20>0.63022393</R20>
											<R21>-0.123433009</R21>
											<R22>0.766539037</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXb0969270a3c64d3f9c37edbe6adbbdbc">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.200621754</X>
												<Y>0.0567629486</Y>
												<Z>-0.123743773</Z>
												<R00>0.644674599</R00>
												<R01>0.197985888</R01>
												<R02>-0.738374114</R02>
												<R10>-0.293576777</R10>
												<R11>0.955935538</R11>
												<R12>4.11178917e-07</R12>
												<R20>0.705837965</R20>
												<R21>0.216769204</R21>
												<R22>0.674391508</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBX99d7883bb2444082a2efcc35611e1a18">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>3.80354177e-05</X>
													<Y>1.65402889e-06</Y>
													<Z>1.64955854e-05</Z>
													<R00>0.999999881</R00>
													<R01>2.98021963e-08</R01>
													<R02>-8.67500377e-11</R02>
													<R10>-2.46796761e-09</R10>
													<R11>0.518238187</R11>
													<R12>-0.855236292</R12>
													<R20>0</R20>
													<R21>0.855236232</R21>
													<R22>0.518238127</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX93648aedd15a4e63bca7db5b3cd16097">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-5.22136688e-05</X>
												<Y>-1.07884407e-05</Y>
												<Z>8.33719969e-06</Z>
												<R00>0.968461156</R00>
												<R01>-0.231399983</R01>
												<R02>0.0923955813</R02>
												<R10>0.230197743</R10>
												<R11>0.972857416</R11>
												<R12>0.0236111395</R12>
												<R20>-0.0953515023</R20>
												<R21>-0.00159716606</R21>
												<R22>0.99544239</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXa65610909f2f45658e7a5602f7233ee6">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-1.30937565e-06</X>
													<Y>7.33137131e-06</Y>
													<Z>2.08616257e-06</Z>
													<R00>0.99999994</R00>
													<R01>7.45050821e-09</R01>
													<R02>3.28909157e-11</R02>
													<R10>1.49011612e-08</R10>
													<R11>0.940530956</R11>
													<R12>-0.339708239</R12>
													<R20>-2.98023224e-08</R20>
													<R21>0.339708179</R21>
													<R22>0.940530896</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXb93012adc0ef41539b727c6b30265ee8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.85940075e-05</X>
												<Y>2.56896019e-05</Y>
												<Z>1.15036964e-05</Z>
												<R00>0.711087525</R00>
												<R01>0.125507131</R01>
												<R02>0.691811144</R02>
												<R10>-0.0513793938</R10>
												<R11>0.990584135</R11>
												<R12>-0.126899019</R12>
												<R20>-0.70122385</R20>
												<R21>0.0546914898</R21>
												<R22>0.710840523</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBX35d1b68ac5ce4018bc332edd2a18c1bf">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-0.430002213</X>
									<Y>-0.249999762</Y>
									<Z>4.29153442e-06</Z>
									<R00>7.54979013e-08</R00>
									<R01>0</R01>
									<R02>-1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>7.54979013e-08</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX5739c04a09414eefabd58d547158996d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">1</float>
						</Properties>
						<Item class="Pose" referent="RBX283e046fd956444487327b0e1f30c21a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXf27f02a2641e4c028791fb6638922ba5">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBXb8e2ee6592694c00ad6ef35fd365f38f">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-1.06170774e-07</X>
											<Y>2.56299973e-06</Y>
											<Z>-7.37607479e-07</Z>
											<R00>0.767797589</R00>
											<R01>-0.028899949</R01>
											<R02>-0.640040338</R02>
											<R10>0.0813038275</R10>
											<R11>0.995300889</R11>
											<R12>0.0525915921</R12>
											<R20>0.635512829</R20>
											<R21>-0.0924174339</R21>
											<R22>0.766539276</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBXa9eeaf6abad7481890c79d131da6e83d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.200621188</X>
												<Y>0.0567626357</Y>
												<Z>-0.123740196</Z>
												<R00>0.65217042</R00>
												<R01>0.171691775</R01>
												<R02>-0.738373697</R02>
												<R10>-0.254587263</R10>
												<R11>0.967049837</R11>
												<R12>3.00817192e-07</R12>
												<R20>0.714044213</R20>
												<R21>0.187980324</R21>
												<R22>0.674391806</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBXf51f42fec4664646bb01b25be50eee2d">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-5.16176224e-05</X>
												<Y>-1.35153532e-05</Y>
												<Z>1.60373747e-05</Z>
												<R00>0.942227066</R00>
												<R01>-0.321980387</R01>
												<R02>0.0923949778</R02>
												<R10>0.321199536</R10>
												<R11>0.946717143</R11>
												<R12>0.0236108676</R12>
												<R20>-0.0950741842</R20>
												<R21>0.00743045844</R21>
												<R22>0.995442569</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
									<Item class="Pose" referent="RBX4a131bdcb6a140af94bdad5c5d3aeb43">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-4.00580466e-05</X>
												<Y>3.45408916e-05</Y>
												<Z>1.79223716e-05</Z>
												<R00>0.714195132</R00>
												<R01>0.0909703076</R01>
												<R02>0.6940099</R02>
												<R10>-0.0248322822</R10>
												<R11>0.994187236</R11>
												<R12>-0.104762785</R12>
												<R20>-0.699506223</R20>
												<R21>0.0575872138</R21>
												<R22>0.712302566</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Keyframe" referent="RBX71c103da862d48839e8d3f25a4d58367">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">2</float>
						</Properties>
						<Item class="Pose" referent="RBX768d86a0d48a4c77b1ed581f0d8d23e6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBXaff217b3a8cd42c59e195feab4c52277">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX5e794d9cbc9e4fb5bb9dfcbbe5bf5f7a">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-1.41561031e-07</X>
											<Y>1.78813934e-06</Y>
											<Z>-1.13993883e-06</Z>
											<R00>0.765460372</R00>
											<R01>-0.0664707273</R01>
											<R02>-0.640040696</R02>
											<R10>0.129954562</R10>
											<R11>0.990124226</R11>
											<R12>0.0525916256</R12>
											<R20>0.63022393</R20>
											<R21>-0.123433009</R21>
											<R22>0.766539037</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
									<Item class="Pose" referent="RBX2247a4b15d404d1ba8bb95b5b2e49691">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-0.200621754</X>
												<Y>0.0567629486</Y>
												<Z>-0.123743773</Z>
												<R00>0.644674599</R00>
												<R01>0.197985888</R01>
												<R02>-0.738374114</R02>
												<R10>-0.293576777</R10>
												<R11>0.955935538</R11>
												<R12>4.11178917e-07</R12>
												<R20>0.705837965</R20>
												<R21>0.216769204</R21>
												<R22>0.674391508</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">LeftUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXbe22a710153d40fc82b308b8480562ee">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>3.80354177e-05</X>
													<Y>1.65402889e-06</Y>
													<Z>1.64955854e-05</Z>
													<R00>0.999999881</R00>
													<R01>2.98021963e-08</R01>
													<R02>-8.67500377e-11</R02>
													<R10>-2.46796761e-09</R10>
													<R11>0.518238187</R11>
													<R12>-0.855236292</R12>
													<R20>0</R20>
													<R21>0.855236232</R21>
													<R22>0.518238127</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">LeftLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBXb066b615f3314aecbfa3912e418924a5">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-5.22136688e-05</X>
												<Y>-1.07884407e-05</Y>
												<Z>8.33719969e-06</Z>
												<R00>0.968461156</R00>
												<R01>-0.231399983</R01>
												<R02>0.0923955813</R02>
												<R10>0.230197743</R10>
												<R11>0.972857416</R11>
												<R12>0.0236111395</R12>
												<R20>-0.0953515023</R20>
												<R21>-0.00159716606</R21>
												<R22>0.99544239</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
										<Item class="Pose" referent="RBXc8ac4876fba841af9e55c018c075dead">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>-1.30937565e-06</X>
													<Y>7.33137131e-06</Y>
													<Z>2.08616257e-06</Z>
													<R00>0.99999994</R00>
													<R01>7.45050821e-09</R01>
													<R02>3.28909157e-11</R02>
													<R10>1.49011612e-08</R10>
													<R11>0.940530956</R11>
													<R12>-0.339708239</R12>
													<R20>-2.98023224e-08</R20>
													<R21>0.339708179</R21>
													<R22>0.940530896</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">1</float>
											</Properties>
										</Item>
									</Item>
									<Item class="Pose" referent="RBX2c028d5c83e84628983a95e9b4a4bb4c">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>-3.85940075e-05</X>
												<Y>2.56896019e-05</Y>
												<Z>1.15036964e-05</Z>
												<R00>0.711087525</R00>
												<R01>0.125507131</R01>
												<R02>0.691811144</R02>
												<R10>-0.0513793938</R10>
												<R11>0.990584135</R11>
												<R12>-0.126899019</R12>
												<R20>-0.70122385</R20>
												<R21>0.0546914898</R21>
												<R22>0.710840523</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">Head</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">1</float>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Pose" referent="RBX8fd4bb61d0614603abf12f8e81fcb492">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>-0.430002213</X>
									<Y>-0.249999762</Y>
									<Z>4.29153442e-06</Z>
									<R00>7.54979013e-08</R00>
									<R01>0</R01>
									<R02>-1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>7.54979013e-08</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">BodyAttach</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">1</float>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBXb9c0a79921744634a8f888bb3a4e60c4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">false</bool>
						<string name="Name">WeaponEquip</string>
						<token name="Priority">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI5MTQ3OQ==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBX19f03f1fd7fc49d7a97fab9d52083704">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBX514f0341c2a8460baad946b96445edcf">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX79acb6c83d214636a8bc0778eba3b041">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX304632175e1046b8a7223dd94b6da570">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
											<R00>1</R00>
											<R01>0</R01>
											<R02>0</R02>
											<R10>0</R10>
											<R11>1</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">UpperTorso</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">0</float>
									</Properties>
									<Item class="Pose" referent="RBXf90b8137b5784349bee5dc6bdf10d5b8">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<CoordinateFrame name="CFrame">
												<X>0</X>
												<Y>0</Y>
												<Z>0</Z>
												<R00>1</R00>
												<R01>0</R01>
												<R02>0</R02>
												<R10>0</R10>
												<R11>1</R11>
												<R12>0</R12>
												<R20>0</R20>
												<R21>0</R21>
												<R22>1</R22>
											</CoordinateFrame>
											<token name="EasingDirection">0</token>
											<token name="EasingStyle">0</token>
											<string name="Name">RightUpperArm</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Weight">0</float>
										</Properties>
										<Item class="Pose" referent="RBX3b26b97fadd844328571dd6a144216b7">
											<Properties>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<CoordinateFrame name="CFrame">
													<X>0</X>
													<Y>0</Y>
													<Z>0</Z>
													<R00>1</R00>
													<R01>0</R01>
													<R02>0</R02>
													<R10>0</R10>
													<R11>1</R11>
													<R12>0</R12>
													<R20>0</R20>
													<R21>0</R21>
													<R22>1</R22>
												</CoordinateFrame>
												<token name="EasingDirection">0</token>
												<token name="EasingStyle">0</token>
												<string name="Name">RightLowerArm</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Weight">0</float>
											</Properties>
											<Item class="Pose" referent="RBX7abd92ad9c6448b69337faf8afd676f8">
												<Properties>
													<BinaryString name="AttributesSerialize"></BinaryString>
													<CoordinateFrame name="CFrame">
														<X>0</X>
														<Y>0</Y>
														<Z>0</Z>
														<R00>1</R00>
														<R01>0</R01>
														<R02>0</R02>
														<R10>0</R10>
														<R11>1</R11>
														<R12>0</R12>
														<R20>0</R20>
														<R21>0</R21>
														<R22>1</R22>
													</CoordinateFrame>
													<token name="EasingDirection">0</token>
													<token name="EasingStyle">0</token>
													<string name="Name">RightHand</string>
													<int64 name="SourceAssetId">-1</int64>
													<BinaryString name="Tags"></BinaryString>
													<float name="Weight">0</float>
												</Properties>
												<Item class="Pose" referent="RBXba209ce1e75942e3908cd9244072bd4d">
													<Properties>
														<BinaryString name="AttributesSerialize"></BinaryString>
														<CoordinateFrame name="CFrame">
															<X>0.0342273563</X>
															<Y>-0.176809177</Y>
															<Z>0.0228152592</Z>
															<R00>0.999490261</R00>
															<R01>-0.0238915868</R01>
															<R02>0.0211728755</R02>
															<R10>-0.0213475153</R10>
															<R11>-0.00707840174</R11>
															<R12>0.999747038</R12>
															<R20>-0.0237356741</R20>
															<R21>-0.99968946</R21>
															<R22>-0.00758482004</R22>
														</CoordinateFrame>
														<token name="EasingDirection">0</token>
														<token name="EasingStyle">0</token>
														<string name="Name">BodyAttach</string>
														<int64 name="SourceAssetId">-1</int64>
														<BinaryString name="Tags"></BinaryString>
														<float name="Weight">1</float>
													</Properties>
												</Item>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="KeyframeSequence" referent="RBX26f5a40844014167ba652a42a56f27da">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="AuthoredHipHeight">2</float>
						<bool name="Loop">true</bool>
						<string name="Name">WeaponHolster</string>
						<token name="Priority">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags">MTYzMzI5MTUzNg==</BinaryString>
					</Properties>
					<Item class="Keyframe" referent="RBX3e0e3f0ae0644677bed9672fc9de502b">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Keyframe</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Time">0</float>
						</Properties>
						<Item class="Pose" referent="RBX4a1e2f83ace74f919bb10e28d63d60b8">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<token name="EasingDirection">0</token>
								<token name="EasingStyle">0</token>
								<string name="Name">HumanoidRootPart</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Weight">0</float>
							</Properties>
							<Item class="Pose" referent="RBX7d0aa22b5ccd4580ac949e1334c1547b">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<CoordinateFrame name="CFrame">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<token name="EasingDirection">0</token>
									<token name="EasingStyle">0</token>
									<string name="Name">LowerTorso</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Weight">0</float>
								</Properties>
								<Item class="Pose" referent="RBX01d0b4f5cc224012878f1e27bb484960">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>-1.03046954</X>
											<Y>0.567202568</Y>
											<Z>-0.834990144</Z>
											<R00>-1</R00>
											<R01>7.29985986e-05</R01>
											<R02>0.000175946014</R02>
											<R10>7.28370724e-05</R10>
											<R11>-0.706937015</R11>
											<R12>0.707276523</R12>
											<R20>0.000176012953</R20>
											<R21>0.707276523</R21>
											<R22>0.706937075</R22>
										</CoordinateFrame>
										<token name="EasingDirection">0</token>
										<token name="EasingStyle">0</token>
										<string name="Name">BodyAttach</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Weight">1</float>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Script" referent="RBX74a6076ca8de4e1b965e60b58f44676b">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Team Only Gear</string>
				<string name="ScriptGuid">{a6cb798c-e31a-4751-b2e3-7467ef04ae40}</string>
				<ProtectedString name="Source"><![CDATA[--Just put weapons in the team.
function teamFromColor(color) 
for _,t in pairs(game:GetService("Teams"):GetChildren()) do 
if t.TeamColor==color then return t end 
end 
return nil 
end 

function onSpawned(plr) 
local tools = teamFromColor(plr.TeamColor):GetChildren() 
for _,c in pairs(tools) do 
c:Clone().Parent = plr.Backpack 
end 
end 

function onChanged(prop,plr) 
if prop=="Character" then 
onSpawned(plr) 
end 
end 

function onAdded(plr) 
plr.Changed:connect(function(prop) 
onChanged(prop,plr) 
end) 
end 

game.Players.PlayerAdded:connect(onAdded)]]></ProtectedString>
				<int64 name="SourceAssetId">114365458</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX1b963cede4ab4729b619c13598c8108e">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SlowJump</string>
				<string name="ScriptGuid">{55323149-46fb-453e-b141-1a8e9363fa79}</string>
				<ProtectedString name="Source"><![CDATA[local dajump=script.JumpSlower
local dajumpclone=dajump:clone()
dajump:Destroy()

function add(char)
	local sweg=dajumpclone:clone()
	sweg.Parent=char
	wait(.2)
	sweg.Disabled=false	
end

game.Players.PlayerAdded:connect(function(plr)
	plr.CharacterAdded:connect(function(char)
		wait()
			add(char)
	end
	)
end
)
			]]></ProtectedString>
				<int64 name="SourceAssetId">134419988</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="LocalScript" referent="RBXf7acc18daf3242589c161ad94ae7c4bc">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">JumpSlower</string>
					<string name="ScriptGuid">{13b9fba8-ee9f-4618-b7e9-9dad2ebc460e}</string>
					<ProtectedString name="Source"><![CDATA[local h = script.Parent:WaitForChild("Humanoid")
local ajump=true
function counter()
	ajump=false
	wait(0.5)
	ajump=true
end

h.Changed:connect(function()
	if ajump==false and h.Jump==true then
		h.Jump=false
	elseif ajump==true and h.Jump==true then
		h.Jump=true
		Spawn(counter)
	end
end)]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="Model" referent="RBX36cb1ca53c31416c9bb7bfff26b948b0">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<string name="Name">Model</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
			</Properties>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBX5abb9c937a1142ce8320dc8312ea7af3">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBXd5a392d24bca4cd8a61feda142372f5a">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX014932fe81f943b19298b404927fba93">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX7f54d3dcc867431890af801bb58ba183">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">false</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBXa96d35d028c846e3b47f95dce3be7a2a">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Players" referent="RBXfb38331748db420db7523f9c87a756c3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
			<float name="RespawnTime">5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX1d96994de07246ab85171a60fc78b8b0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX88036c92f6704f91a54913a5e73f7081">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PermissionsService" referent="RBXac84434c16304e1cb409ebe55bf40947">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBXc8aaa01afce5434388cd40f0afe3cd86">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CustomPoliciesEnabled">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBX45e7a46e5f864be2bb96790c2fc3823a">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int64 name="CommitInflightAuthorId">0</int64>
			<string name="CommitInflightGuid"></string>
			<int name="CommitInflightPlaceVersion">0</int>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<bool name="EnableTeamCreateStreamingOnLoad">false</bool>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<int64 name="SrcPlaceId">7714167789</int64>
			<int64 name="SrcUniverseId">2993657922</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBXa055b5595b1543018b7cdd54b6441aaa">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">14</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX2954f51770f74012ae5c0aeca2191b25">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXa0b91c7939ce443ab74297deb0a8b997">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">PlayerModule</string>
					<string name="ScriptGuid">{f0ead8b2-8403-4c73-909a-16f28879062d}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
--[[
	PlayerModule - This module requires and instantiates the camera and control modules,
	and provides getters for developers to access methods on these singletons without
	having to modify Roblox-supplied scripts.

	2018 PlayerScripts Update - AllYourBlox
--]]

local PlayerModule = {}
PlayerModule.__index = PlayerModule

function PlayerModule.new()
	local self = setmetatable({},PlayerModule)
	self.cameras = require(script:WaitForChild("CameraModule"))
	self.controls = require(script:WaitForChild("ControlModule"))
	return self
end

function PlayerModule:GetCameras()
	return self.cameras
end

function PlayerModule:GetControls()
	return self.controls
end

function PlayerModule:GetClickToMoveController()
	return self.controls:GetClickToMoveController()
end

return PlayerModule.new()
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBXb8d501f1c50640e9985420d921b8d286">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ControlModule</string>
						<string name="ScriptGuid">{3fc5903c-2ce6-4a3d-9b83-1772bf1f4ec3}</string>
						<ProtectedString name="Source"><![CDATA[--[[
	ControlModule - This ModuleScript implements a singleton class to manage the
	selection, activation, and deactivation of the current character movement controller.
	This script binds to RenderStepped at Input priority and calls the Update() methods
	on the active controller instances.

	The character controller ModuleScripts implement classes which are instantiated and
	activated as-needed, they are no longer all instantiated up front as they were in
	the previous generation of PlayerScripts.

	2018 PlayerScripts Update - AllYourBlox
--]]
local ControlModule = {}
ControlModule.__index = ControlModule

--[[ Roblox Services ]]--
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local UserGameSettings = UserSettings():GetService("UserGameSettings")

-- Roblox User Input Control Modules - each returns a new() constructor function used to create controllers as needed
local Keyboard = require(script:WaitForChild("Keyboard"))
local Gamepad = require(script:WaitForChild("Gamepad"))
local DynamicThumbstick = require(script:WaitForChild("DynamicThumbstick"))

local FFlagUserMakeThumbstickDynamic do
	local success, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserMakeThumbstickDynamic")
	end)
	FFlagUserMakeThumbstickDynamic = success and value
end

local TouchThumbstick = FFlagUserMakeThumbstickDynamic and DynamicThumbstick or require(script:WaitForChild("TouchThumbstick"))

-- These controllers handle only walk/run movement, jumping is handled by the
-- TouchJump controller if any of these are active
local ClickToMove = require(script:WaitForChild("ClickToMoveController"))
local TouchJump = require(script:WaitForChild("TouchJump"))

local VehicleController = require(script:WaitForChild("VehicleController"))

local CONTROL_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

-- Mapping from movement mode and lastInputType enum values to control modules to avoid huge if elseif switching
local movementEnumToModuleMap = {
	[Enum.TouchMovementMode.DPad] = DynamicThumbstick,
	[Enum.DevTouchMovementMode.DPad] = DynamicThumbstick,
	[Enum.TouchMovementMode.Thumbpad] = DynamicThumbstick,
	[Enum.DevTouchMovementMode.Thumbpad] = DynamicThumbstick,
	[Enum.TouchMovementMode.Thumbstick] = TouchThumbstick,
	[Enum.DevTouchMovementMode.Thumbstick] = TouchThumbstick,
	[Enum.TouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
	[Enum.DevTouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
	[Enum.TouchMovementMode.ClickToMove] = ClickToMove,
	[Enum.DevTouchMovementMode.ClickToMove] = ClickToMove,

	-- Current default
	[Enum.TouchMovementMode.Default] = DynamicThumbstick,

	[Enum.ComputerMovementMode.Default] = Keyboard,
	[Enum.ComputerMovementMode.KeyboardMouse] = Keyboard,
	[Enum.DevComputerMovementMode.KeyboardMouse] = Keyboard,
	[Enum.DevComputerMovementMode.Scriptable] = nil,
	[Enum.ComputerMovementMode.ClickToMove] = ClickToMove,
	[Enum.DevComputerMovementMode.ClickToMove] = ClickToMove,
}

-- Keyboard controller is really keyboard and mouse controller
local computerInputTypeToModuleMap = {
	[Enum.UserInputType.Keyboard] = Keyboard,
	[Enum.UserInputType.MouseButton1] = Keyboard,
	[Enum.UserInputType.MouseButton2] = Keyboard,
	[Enum.UserInputType.MouseButton3] = Keyboard,
	[Enum.UserInputType.MouseWheel] = Keyboard,
	[Enum.UserInputType.MouseMovement] = Keyboard,
	[Enum.UserInputType.Gamepad1] = Gamepad,
	[Enum.UserInputType.Gamepad2] = Gamepad,
	[Enum.UserInputType.Gamepad3] = Gamepad,
	[Enum.UserInputType.Gamepad4] = Gamepad,
}

local lastInputType

function ControlModule.new()
	local self = setmetatable({},ControlModule)

	-- The Modules above are used to construct controller instances as-needed, and this
	-- table is a map from Module to the instance created from it
	self.controllers = {}

	self.activeControlModule = nil	-- Used to prevent unnecessarily expensive checks on each input event
	self.activeController = nil
	self.touchJumpController = nil
	self.moveFunction = Players.LocalPlayer.Move
	self.humanoid = nil
	self.lastInputType = Enum.UserInputType.None

	-- For Roblox self.vehicleController
	self.humanoidSeatedConn = nil
	self.vehicleController = nil

	self.touchControlFrame = nil

	self.vehicleController = VehicleController.new(CONTROL_ACTION_PRIORITY)

	Players.LocalPlayer.CharacterAdded:Connect(function(char) self:OnCharacterAdded(char) end)
	Players.LocalPlayer.CharacterRemoving:Connect(function(char) self:OnCharacterRemoving(char) end)
	if Players.LocalPlayer.Character then
		self:OnCharacterAdded(Players.LocalPlayer.Character)
	end

	RunService:BindToRenderStep("ControlScriptRenderstep", Enum.RenderPriority.Input.Value, function(dt)
		self:OnRenderStepped(dt)
	end)

	UserInputService.LastInputTypeChanged:Connect(function(newLastInputType)
		self:OnLastInputTypeChanged(newLastInputType)
	end)


	UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
		self:OnTouchMovementModeChange()
	end)
	Players.LocalPlayer:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
		self:OnTouchMovementModeChange()
	end)

	UserGameSettings:GetPropertyChangedSignal("ComputerMovementMode"):Connect(function()
		self:OnComputerMovementModeChange()
	end)
	Players.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
		self:OnComputerMovementModeChange()
	end)

	--[[ Touch Device UI ]]--
	self.playerGui = nil
	self.touchGui = nil
	self.playerGuiAddedConn = nil

	UserInputService:GetPropertyChangedSignal("ModalEnabled"):Connect(function()
		self:UpdateTouchGuiVisibility()
	end)

	if UserInputService.TouchEnabled then
		self.playerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
		if self.playerGui then
			self:CreateTouchGuiContainer()
			self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
		else
			self.playerGuiAddedConn = Players.LocalPlayer.ChildAdded:Connect(function(child)
				if child:IsA("PlayerGui") then
					self.playerGui = child
					self:CreateTouchGuiContainer()
					self.playerGuiAddedConn:Disconnect()
					self.playerGuiAddedConn = nil
					self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
				end
			end)
		end
	else
		self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
	end

	return self
end

-- Convenience function so that calling code does not have to first get the activeController
-- and then call GetMoveVector on it. When there is no active controller, this function returns the 
-- zero vector
function ControlModule:GetMoveVector(): Vector3
	if self.activeController then
		return self.activeController:GetMoveVector()
	end
	return Vector3.new(0,0,0)
end

function ControlModule:GetActiveController()
	return self.activeController
end

function ControlModule:EnableActiveControlModule()
	if self.activeControlModule == ClickToMove then
		-- For ClickToMove, when it is the player's choice, we also enable the full keyboard controls.
		-- When the developer is forcing click to move, the most keyboard controls (WASD) are not available, only jump.
		self.activeController:Enable(
			true,
			Players.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.UserChoice,
			self.touchJumpController
		)
	elseif self.touchControlFrame then
		self.activeController:Enable(true, self.touchControlFrame)
	else
		self.activeController:Enable(true)
	end
end

function ControlModule:Enable(enable: boolean?)
	if not self.activeController then
		return
	end

	if enable == nil then
		enable = true
	end
	if enable then
		self:EnableActiveControlModule()
	else
		self:Disable()
	end
end

-- For those who prefer distinct functions
function ControlModule:Disable()
	if self.activeController then
		self.activeController:Enable(false)

		if self.moveFunction then
			self.moveFunction(Players.LocalPlayer, Vector3.new(0,0,0), true)
		end
	end
end


-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
function ControlModule:SelectComputerMovementModule(): ({}?, boolean)
	if not (UserInputService.KeyboardEnabled or UserInputService.GamepadEnabled) then
		return nil, false
	end

	local computerModule
	local DevMovementMode = Players.LocalPlayer.DevComputerMovementMode

	if DevMovementMode == Enum.DevComputerMovementMode.UserChoice then
		computerModule = computerInputTypeToModuleMap[lastInputType]
		if UserGameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove and computerModule == Keyboard then
			-- User has ClickToMove set in Settings, prefer ClickToMove controller for keyboard and mouse lastInputTypes
			computerModule = ClickToMove
		end
	else
		-- Developer has selected a mode that must be used.
		computerModule = movementEnumToModuleMap[DevMovementMode]

		-- computerModule is expected to be nil here only when developer has selected Scriptable
		if (not computerModule) and DevMovementMode ~= Enum.DevComputerMovementMode.Scriptable then
			warn("No character control module is associated with DevComputerMovementMode ", DevMovementMode)
		end
	end

	if computerModule then
		return computerModule, true
	elseif DevMovementMode == Enum.DevComputerMovementMode.Scriptable then
		-- Special case where nil is returned and we actually want to set self.activeController to nil for Scriptable
		return nil, true
	else
		-- This case is for when computerModule is nil because of an error and no suitable control module could
		-- be found.
		return nil, false
	end
end

-- Choose current Touch control module based on settings (user, dev)
-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
function ControlModule:SelectTouchModule(): ({}?, boolean)
	if not UserInputService.TouchEnabled then
		return nil, false
	end
	local touchModule
	local DevMovementMode = Players.LocalPlayer.DevTouchMovementMode
	if DevMovementMode == Enum.DevTouchMovementMode.UserChoice then
		touchModule = movementEnumToModuleMap[UserGameSettings.TouchMovementMode]
	elseif DevMovementMode == Enum.DevTouchMovementMode.Scriptable then
		return nil, true
	else
		touchModule = movementEnumToModuleMap[DevMovementMode]
	end
	return touchModule, true
end

local function calculateRawMoveVector(humanoid: Humanoid, cameraRelativeMoveVector: Vector3): Vector3
	local camera = Workspace.CurrentCamera
	if not camera then
		return cameraRelativeMoveVector
	end

	if humanoid:GetState() == Enum.HumanoidStateType.Swimming then
		return camera.CFrame:VectorToWorldSpace(cameraRelativeMoveVector)
	end

	local c, s
	local _, _, _, R00, R01, R02, _, _, R12, _, _, R22 = camera.CFrame:GetComponents()
	if R12 < 1 and R12 > -1 then
		-- X and Z components from back vector.
		c = R22
		s = R02
	else
		-- In this case the camera is looking straight up or straight down.
		-- Use X components from right and up vectors.
		c = R00
		s = -R01*math.sign(R12)
	end
	local norm = math.sqrt(c*c + s*s)
	return Vector3.new(
		(c*cameraRelativeMoveVector.x + s*cameraRelativeMoveVector.z)/norm,
		0,
		(c*cameraRelativeMoveVector.z - s*cameraRelativeMoveVector.x)/norm
	)
end

function ControlModule:OnRenderStepped(dt)
	if self.activeController and self.activeController.enabled and self.humanoid then
		-- Give the controller a chance to adjust its state
		self.activeController:OnRenderStepped(dt)

		-- Now retrieve info from the controller
		local moveVector = self.activeController:GetMoveVector()
		local cameraRelative = self.activeController:IsMoveVectorCameraRelative()

		local clickToMoveController = self:GetClickToMoveController()
		if self.activeController ~= clickToMoveController then
			if moveVector.magnitude > 0 then
				-- Clean up any developer started MoveTo path
				clickToMoveController:CleanupPath()
			else
				-- Get move vector for developer started MoveTo
				clickToMoveController:OnRenderStepped(dt)
				moveVector = clickToMoveController:GetMoveVector()
				cameraRelative = clickToMoveController:IsMoveVectorCameraRelative()
			end
		end

		-- Are we driving a vehicle ?
		local vehicleConsumedInput = false
		if self.vehicleController then
			moveVector, vehicleConsumedInput = self.vehicleController:Update(moveVector, cameraRelative, self.activeControlModule==Gamepad)
		end

		-- If not, move the player
		-- Verification of vehicleConsumedInput is commented out to preserve legacy behavior,
		-- in case some game relies on Humanoid.MoveDirection still being set while in a VehicleSeat
		--if not vehicleConsumedInput then
			if cameraRelative then
				moveVector = calculateRawMoveVector(self.humanoid, moveVector)
			end
			self.moveFunction(Players.LocalPlayer, moveVector, false)
		--end

		-- And make them jump if needed
		self.humanoid.Jump = self.activeController:GetIsJumping() or (self.touchJumpController and self.touchJumpController:GetIsJumping())
	end
end

function ControlModule:OnHumanoidSeated(active: boolean, currentSeatPart: BasePart)
	if active then
		if currentSeatPart and currentSeatPart:IsA("VehicleSeat") then
			if not self.vehicleController then
				self.vehicleController = self.vehicleController.new(CONTROL_ACTION_PRIORITY)
			end
			self.vehicleController:Enable(true, currentSeatPart)
		end
	else
		if self.vehicleController then
			self.vehicleController:Enable(false, currentSeatPart)
		end
	end
end

function ControlModule:OnCharacterAdded(char)
	self.humanoid = char:FindFirstChildOfClass("Humanoid")
	while not self.humanoid do
		char.ChildAdded:wait()
		self.humanoid = char:FindFirstChildOfClass("Humanoid")
	end

	self:UpdateTouchGuiVisibility()

	if self.humanoidSeatedConn then
		self.humanoidSeatedConn:Disconnect()
		self.humanoidSeatedConn = nil
	end
	self.humanoidSeatedConn = self.humanoid.Seated:Connect(function(active, currentSeatPart)
		self:OnHumanoidSeated(active, currentSeatPart)
	end)
end

function ControlModule:OnCharacterRemoving(char)
	self.humanoid = nil

	self:UpdateTouchGuiVisibility()
end

function ControlModule:UpdateTouchGuiVisibility()
	if self.touchGui then
		local doShow = self.humanoid and not UserInputService.ModalEnabled
		self.touchGui.Enabled = not not doShow -- convert to bool
	end
end

-- Helper function to lazily instantiate a controller if it does not yet exist,
-- disable the active controller if it is different from the on being switched to,
-- and then enable the requested controller. The argument to this function must be
-- a reference to one of the control modules, i.e. Keyboard, Gamepad, etc.
function ControlModule:SwitchToController(controlModule)
	if not controlModule then
		if self.activeController then
			self.activeController:Enable(false)
		end
		self.activeController = nil
		self.activeControlModule = nil
	else
		if not self.controllers[controlModule] then
			self.controllers[controlModule] = controlModule.new(CONTROL_ACTION_PRIORITY)
		end

		if self.activeController ~= self.controllers[controlModule] then
			if self.activeController then
				self.activeController:Enable(false)
			end
			self.activeController = self.controllers[controlModule]
			self.activeControlModule = controlModule -- Only used to check if controller switch is necessary

			if self.touchControlFrame and (self.activeControlModule == ClickToMove
						or self.activeControlModule == TouchThumbstick
						or self.activeControlModule == DynamicThumbstick) then
				if not self.controllers[TouchJump] then
					self.controllers[TouchJump] = TouchJump.new()
				end
				self.touchJumpController = self.controllers[TouchJump]
				self.touchJumpController:Enable(true, self.touchControlFrame)
			else
				if self.touchJumpController then
					self.touchJumpController:Enable(false)
				end
			end

			self:EnableActiveControlModule()
		end
	end
end

function ControlModule:OnLastInputTypeChanged(newLastInputType)
	if lastInputType == newLastInputType then
		warn("LastInputType Change listener called with current type.")
	end
	lastInputType = newLastInputType

	if lastInputType == Enum.UserInputType.Touch then
		-- TODO: Check if touch module already active
		local touchModule, success = self:SelectTouchModule()
		if success then
			while not self.touchControlFrame do
				wait()
			end
			self:SwitchToController(touchModule)
		end
	elseif computerInputTypeToModuleMap[lastInputType] ~= nil then
		local computerModule = self:SelectComputerMovementModule()
		if computerModule then
			self:SwitchToController(computerModule)
		end
	end

	self:UpdateTouchGuiVisibility()
end

-- Called when any relevant values of GameSettings or LocalPlayer change, forcing re-evalulation of
-- current control scheme
function ControlModule:OnComputerMovementModeChange()
	local controlModule, success =  self:SelectComputerMovementModule()
	if success then
		self:SwitchToController(controlModule)
	end
end

function ControlModule:OnTouchMovementModeChange()
	local touchModule, success = self:SelectTouchModule()
	if success then
		while not self.touchControlFrame do
			wait()
		end
		self:SwitchToController(touchModule)
	end
end

function ControlModule:CreateTouchGuiContainer()
	if self.touchGui then self.touchGui:Destroy() end

	-- Container for all touch device guis
	self.touchGui = Instance.new("ScreenGui")
	self.touchGui.Name = "TouchGui"
	self.touchGui.ResetOnSpawn = false
	self.touchGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	self:UpdateTouchGuiVisibility()

	self.touchControlFrame = Instance.new("Frame")
	self.touchControlFrame.Name = "TouchControlFrame"
	self.touchControlFrame.Size = UDim2.new(1, 0, 1, 0)
	self.touchControlFrame.BackgroundTransparency = 1
	self.touchControlFrame.Parent = self.touchGui

	self.touchGui.Parent = self.playerGui
end

function ControlModule:GetClickToMoveController()
	if not self.controllers[ClickToMove] then
		self.controllers[ClickToMove] = ClickToMove.new(CONTROL_ACTION_PRIORITY)
	end
	return self.controllers[ClickToMove]
end

return ControlModule.new()]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX9dfcef307fcc4b0482f9cc794d7d5988">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Gamepad</string>
							<string name="ScriptGuid">{9161bd46-bc78-4833-befe-3bee8ecc05f6}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Gamepad Character Control - This module handles controlling your avatar using a game console-style controller

	2018 PlayerScripts Update - AllYourBlox
--]]

local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local NONE = Enum.UserInputType.None
local thumbstickDeadzone = 0.2

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local Gamepad = setmetatable({}, BaseCharacterController)
Gamepad.__index = Gamepad

function Gamepad.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(BaseCharacterController.new(), Gamepad)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0

	self.activeGamepad = NONE	-- Enum.UserInputType.Gamepad1, 2, 3...
	self.gamepadConnectedConn = nil
	self.gamepadDisconnectedConn = nil
	return self
end

function Gamepad:Enable(enable: boolean): boolean
	if not UserInputService.GamepadEnabled then
		return false
	end

	if enable == self.enabled then
		-- Module is already in the state being requested. True is returned here since the module will be in the state
		-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
		-- no action was necessary. False indicates failure to be in requested/expected state.
		return true
	end

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false

	if enable then
		self.activeGamepad = self:GetHighestPriorityGamepad()
		if self.activeGamepad ~= NONE then
			self:BindContextActions()
			self:ConnectGamepadConnectionListeners()
		else
			-- No connected gamepads, failure to enable
			return false
		end
	else
		self:UnbindContextActions()
		self:DisconnectGamepadConnectionListeners()
		self.activeGamepad = NONE
	end

	self.enabled = enable
	return true
end

-- This function selects the lowest number gamepad from the currently-connected gamepad
-- and sets it as the active gamepad
function Gamepad:GetHighestPriorityGamepad()
	local connectedGamepads = UserInputService:GetConnectedGamepads()
	local bestGamepad = NONE -- Note that this value is higher than all valid gamepad values
	for _, gamepad in pairs(connectedGamepads) do
		if gamepad.Value < bestGamepad.Value then
			bestGamepad = gamepad
		end
	end
	return bestGamepad
end

function Gamepad:BindContextActions()

	if self.activeGamepad == NONE then
		-- There must be an active gamepad to set up bindings
		return false
	end

	local handleJumpAction = function(actionName, inputState, inputObject)
		self.isJumping = (inputState == Enum.UserInputState.Begin)
		return Enum.ContextActionResult.Sink
	end

	local handleThumbstickInput = function(actionName, inputState, inputObject)

		if inputState == Enum.UserInputState.Cancel then
			self.moveVector = ZERO_VECTOR3
			return Enum.ContextActionResult.Sink
		end

		if self.activeGamepad ~= inputObject.UserInputType then
			return Enum.ContextActionResult.Pass
		end
		if inputObject.KeyCode ~= Enum.KeyCode.Thumbstick1 then return end

		if inputObject.Position.magnitude > thumbstickDeadzone then
			self.moveVector  =  Vector3.new(inputObject.Position.X, 0, -inputObject.Position.Y)
		else
			self.moveVector = ZERO_VECTOR3
		end
		return Enum.ContextActionResult.Sink
	end

	ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
		self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA)
	ContextActionService:BindActionAtPriority("moveThumbstick", handleThumbstickInput, false,
		self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1)

	return true
end

function Gamepad:UnbindContextActions()
	if self.activeGamepad ~= NONE then
		ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	end
	ContextActionService:UnbindAction("moveThumbstick")
	ContextActionService:UnbindAction("jumpAction")
end

function Gamepad:OnNewGamepadConnected()
	-- A new gamepad has been connected.
	local bestGamepad: Enum.UserInputType = self:GetHighestPriorityGamepad()

	if bestGamepad == self.activeGamepad then
		-- A new gamepad was connected, but our active gamepad is not changing
		return
	end

	if bestGamepad == NONE then
		-- There should be an active gamepad when GamepadConnected fires, so this should not
		-- normally be hit. If there is no active gamepad, unbind actions but leave
		-- the module enabled and continue to listen for a new gamepad connection.
		warn("Gamepad:OnNewGamepadConnected found no connected gamepads")
		self:UnbindContextActions()
		return
	end

	if self.activeGamepad ~= NONE then
		-- Switching from one active gamepad to another
		self:UnbindContextActions()
	end

	self.activeGamepad = bestGamepad
	self:BindContextActions()
end

function Gamepad:OnCurrentGamepadDisconnected()
	if self.activeGamepad ~= NONE then
		ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	end

	local bestGamepad = self:GetHighestPriorityGamepad()

	if self.activeGamepad ~= NONE and bestGamepad == self.activeGamepad then
		warn("Gamepad:OnCurrentGamepadDisconnected found the supposedly disconnected gamepad in connectedGamepads.")
		self:UnbindContextActions()
		self.activeGamepad = NONE
		return
	end

	if bestGamepad == NONE then
		-- No active gamepad, unbinding actions but leaving gamepad connection listener active
		self:UnbindContextActions()
		self.activeGamepad = NONE
	else
		-- Set new gamepad as active and bind to tool activation
		self.activeGamepad = bestGamepad
		ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
	end
end

function Gamepad:ConnectGamepadConnectionListeners()
	self.gamepadConnectedConn = UserInputService.GamepadConnected:Connect(function(gamepadEnum)
		self:OnNewGamepadConnected()
	end)

	self.gamepadDisconnectedConn = UserInputService.GamepadDisconnected:Connect(function(gamepadEnum)
		if self.activeGamepad == gamepadEnum then
			self:OnCurrentGamepadDisconnected()
		end
	end)

end

function Gamepad:DisconnectGamepadConnectionListeners()
	if self.gamepadConnectedConn then
		self.gamepadConnectedConn:Disconnect()
		self.gamepadConnectedConn = nil
	end

	if self.gamepadDisconnectedConn then
		self.gamepadDisconnectedConn:Disconnect()
		self.gamepadDisconnectedConn = nil
	end
end

return Gamepad
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXb5869d1d75284302bbd526b238136561">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">DynamicThumbstick</string>
							<string name="ScriptGuid">{e45d2a5b-983b-4d4c-a72c-28d2f416f7a6}</string>
							<ProtectedString name="Source"><![CDATA[--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local TOUCH_CONTROLS_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"

local DYNAMIC_THUMBSTICK_ACTION_NAME = "DynamicThumbstickAction"
local DYNAMIC_THUMBSTICK_ACTION_PRIORITY = Enum.ContextActionPriority.High.Value

local MIDDLE_TRANSPARENCIES = {
	1 - 0.89,
	1 - 0.70,
	1 - 0.60,
	1 - 0.50,
	1 - 0.40,
	1 - 0.30,
	1 - 0.25
}
local NUM_MIDDLE_IMAGES = #MIDDLE_TRANSPARENCIES

local FADE_IN_OUT_BACKGROUND = true
local FADE_IN_OUT_MAX_ALPHA = 0.35

local FADE_IN_OUT_HALF_DURATION_DEFAULT = 0.3
local FADE_IN_OUT_BALANCE_DEFAULT = 0.5
local ThumbstickFadeTweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
	Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
	LocalPlayer = Players.LocalPlayer
end

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local DynamicThumbstick = setmetatable({}, BaseCharacterController)
DynamicThumbstick.__index = DynamicThumbstick

function DynamicThumbstick.new()
	local self = setmetatable(BaseCharacterController.new(), DynamicThumbstick)

	self.moveTouchObject = nil
	self.moveTouchLockedIn = false
	self.moveTouchFirstChanged = false
	self.moveTouchStartPosition = nil

	self.startImage = nil
	self.endImage = nil
	self.middleImages = {}

	self.startImageFadeTween = nil
	self.endImageFadeTween = nil
	self.middleImageFadeTweens = {}

	self.isFirstTouch = true

	self.thumbstickFrame = nil

	self.onRenderSteppedConn = nil

	self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
	self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
	self.hasFadedBackgroundInPortrait = false
	self.hasFadedBackgroundInLandscape = false

	self.tweenInAlphaStart = nil
	self.tweenOutAlphaStart = nil

	return self
end

-- Note: Overrides base class GetIsJumping with get-and-clear behavior to do a single jump
-- rather than sustained jumping. This is only to preserve the current behavior through the refactor.
function DynamicThumbstick:GetIsJumping()
	local wasJumping = self.isJumping
	self.isJumping = false
	return wasJumping
end

function DynamicThumbstick:Enable(enable: boolean?, uiParentFrame): boolean
	if enable == nil then return false end			-- If nil, return false (invalid argument)
	enable = enable and true or false				-- Force anything non-nil to boolean before comparison
	if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state

	if enable then
		-- Enable
		if not self.thumbstickFrame then
			self:Create(uiParentFrame)
		end

		self:BindContextActions()
	else
		ContextActionService:UnbindAction(DYNAMIC_THUMBSTICK_ACTION_NAME)
		-- Disable
		self:OnInputEnded() -- Cleanup
	end

	self.enabled = enable
	self.thumbstickFrame.Visible = enable
end

-- Was called OnMoveTouchEnded in previous version
function DynamicThumbstick:OnInputEnded()
	self.moveTouchObject = nil
	self.moveVector = ZERO_VECTOR3
	self:FadeThumbstick(false)
end

function DynamicThumbstick:FadeThumbstick(visible: boolean?)
	if not visible and self.moveTouchObject then
		return
	end
	if self.isFirstTouch then return end

	if self.startImageFadeTween then
		self.startImageFadeTween:Cancel()
	end
	if self.endImageFadeTween then
		self.endImageFadeTween:Cancel()
	end
	for i = 1, #self.middleImages do
		if self.middleImageFadeTweens[i] then
			self.middleImageFadeTweens[i]:Cancel()
		end
	end

	if visible then
		self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0 })
		self.startImageFadeTween:Play()

		self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0.2 })
		self.endImageFadeTween:Play()

		for i = 1, #self.middleImages do
			self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = MIDDLE_TRANSPARENCIES[i] })
			self.middleImageFadeTweens[i]:Play()
		end
	else
		self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
		self.startImageFadeTween:Play()

		self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
		self.endImageFadeTween:Play()

		for i = 1, #self.middleImages do
			self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
			self.middleImageFadeTweens[i]:Play()
		end
	end
end

function DynamicThumbstick:FadeThumbstickFrame(fadeDuration: number, fadeRatio: number)
	self.fadeInAndOutHalfDuration = fadeDuration * 0.5
	self.fadeInAndOutBalance = fadeRatio
	self.tweenInAlphaStart = tick()
end

function DynamicThumbstick:InputInFrame(inputObject: InputObject)
	local frameCornerTopLeft: Vector2 = self.thumbstickFrame.AbsolutePosition
	local frameCornerBottomRight = frameCornerTopLeft + self.thumbstickFrame.AbsoluteSize
	local inputPosition = inputObject.Position
	if inputPosition.X >= frameCornerTopLeft.X and inputPosition.Y >= frameCornerTopLeft.Y then
		if inputPosition.X <= frameCornerBottomRight.X and inputPosition.Y <= frameCornerBottomRight.Y then
			return true
		end
	end
	return false
end

function DynamicThumbstick:DoFadeInBackground()
	local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
	local hasFadedBackgroundInOrientation = false

	-- only fade in/out the background once per orientation
	if playerGui then
		if playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
			playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight then
				hasFadedBackgroundInOrientation = self.hasFadedBackgroundInLandscape
				self.hasFadedBackgroundInLandscape = true
		elseif playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait then
				hasFadedBackgroundInOrientation = self.hasFadedBackgroundInPortrait
				self.hasFadedBackgroundInPortrait = true
		end
	end

	if not hasFadedBackgroundInOrientation then
		self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
		self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
		self.tweenInAlphaStart = tick()
	end
end

function DynamicThumbstick:DoMove(direction: Vector3)
	local currentMoveVector: Vector3 = direction

	-- Scaled Radial Dead Zone
	local inputAxisMagnitude: number = currentMoveVector.magnitude
	if inputAxisMagnitude < self.radiusOfDeadZone then
		currentMoveVector = ZERO_VECTOR3
	else
		currentMoveVector = currentMoveVector.unit*(
			1 - math.max(0, (self.radiusOfMaxSpeed - currentMoveVector.magnitude)/self.radiusOfMaxSpeed)
		)
		currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
	end

	self.moveVector = currentMoveVector
end


function DynamicThumbstick:LayoutMiddleImages(startPos: Vector3, endPos: Vector3)
	local startDist = (self.thumbstickSize / 2) + self.middleSize
	local vector = endPos - startPos
	local distAvailable = vector.magnitude - (self.thumbstickRingSize / 2) - self.middleSize
	local direction = vector.unit

	local distNeeded = self.middleSpacing * NUM_MIDDLE_IMAGES
	local spacing = self.middleSpacing

	if distNeeded < distAvailable then
		spacing = distAvailable / NUM_MIDDLE_IMAGES
	end

	for i = 1, NUM_MIDDLE_IMAGES do
		local image = self.middleImages[i]
		local distWithout = startDist + (spacing * (i - 2))
		local currentDist = startDist + (spacing * (i - 1))

		if distWithout < distAvailable then
			local pos = endPos - direction * currentDist
			local exposedFraction = math.clamp(1 - ((currentDist - distAvailable) / spacing), 0, 1)

			image.Visible = true
			image.Position = UDim2.new(0, pos.X, 0, pos.Y)
			image.Size = UDim2.new(0, self.middleSize * exposedFraction, 0, self.middleSize * exposedFraction)
		else
			image.Visible = false
		end
	end
end

function DynamicThumbstick:MoveStick(pos)
	local vector2StartPosition = Vector2.new(self.moveTouchStartPosition.X, self.moveTouchStartPosition.Y)
	local startPos = vector2StartPosition - self.thumbstickFrame.AbsolutePosition
	local endPos = Vector2.new(pos.X, pos.Y) - self.thumbstickFrame.AbsolutePosition
	self.endImage.Position = UDim2.new(0, endPos.X, 0, endPos.Y)
	self:LayoutMiddleImages(startPos, endPos)
end

function DynamicThumbstick:BindContextActions()
	local function inputBegan(inputObject)
		if self.moveTouchObject then
			return Enum.ContextActionResult.Pass
		end

		if not self:InputInFrame(inputObject) then
			return Enum.ContextActionResult.Pass
		end

		if self.isFirstTouch then
			self.isFirstTouch = false
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0,false,0)
			TweenService:Create(self.startImage, tweenInfo, {Size = UDim2.new(0, 0, 0, 0)}):Play()
			TweenService:Create(
				self.endImage,
				tweenInfo,
				{Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize), ImageColor3 = Color3.new(0,0,0)}
			):Play()
		end

		self.moveTouchLockedIn = false
		self.moveTouchObject = inputObject
		self.moveTouchStartPosition = inputObject.Position
		self.moveTouchFirstChanged = true

		if FADE_IN_OUT_BACKGROUND then
			self:DoFadeInBackground()
		end

		return Enum.ContextActionResult.Pass
	end

	local function inputChanged(inputObject: InputObject)
		if inputObject == self.moveTouchObject then
			if self.moveTouchFirstChanged then
				self.moveTouchFirstChanged = false

				local startPosVec2 = Vector2.new(
					inputObject.Position.X - self.thumbstickFrame.AbsolutePosition.X,
					inputObject.Position.Y - self.thumbstickFrame.AbsolutePosition.Y
				)
				self.startImage.Visible = true
				self.startImage.Position = UDim2.new(0, startPosVec2.X, 0, startPosVec2.Y)
				self.endImage.Visible = true
				self.endImage.Position = self.startImage.Position

				self:FadeThumbstick(true)
				self:MoveStick(inputObject.Position)
			end

			self.moveTouchLockedIn = true

			local direction = Vector2.new(
				inputObject.Position.x - self.moveTouchStartPosition.x,
				inputObject.Position.y - self.moveTouchStartPosition.y
			)
			if math.abs(direction.x) > 0 or math.abs(direction.y) > 0 then
				self:DoMove(direction)
				self:MoveStick(inputObject.Position)
			end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end

	local function inputEnded(inputObject)
		if inputObject == self.moveTouchObject then
			self:OnInputEnded()
			if self.moveTouchLockedIn then
				return Enum.ContextActionResult.Sink
			end
		end
		return Enum.ContextActionResult.Pass
	end

	local function handleInput(actionName, inputState, inputObject)
		if inputState == Enum.UserInputState.Begin then
			return inputBegan(inputObject)
		elseif inputState == Enum.UserInputState.Change then
			return inputChanged(inputObject)
		elseif inputState == Enum.UserInputState.End then
			return inputEnded(inputObject)
		elseif inputState == Enum.UserInputState.Cancel then
			self:OnInputEnded()
		end
	end

	ContextActionService:BindActionAtPriority(
		DYNAMIC_THUMBSTICK_ACTION_NAME,
		handleInput,
		false,
		DYNAMIC_THUMBSTICK_ACTION_PRIORITY,
		Enum.UserInputType.Touch)
end

function DynamicThumbstick:Create(parentFrame: GuiBase2d)
	if self.thumbstickFrame then
		self.thumbstickFrame:Destroy()
		self.thumbstickFrame = nil
		if self.onRenderSteppedConn then
			self.onRenderSteppedConn:Disconnect()
			self.onRenderSteppedConn = nil
		end
	end

	self.thumbstickSize = 45
	self.thumbstickRingSize = 20
	self.middleSize = 10
	self.middleSpacing = self.middleSize + 4
	self.radiusOfDeadZone = 2
	self.radiusOfMaxSpeed = 20

	local screenSize = parentFrame.AbsoluteSize
	local isBigScreen = math.min(screenSize.x, screenSize.y) > 500
	if isBigScreen then
		self.thumbstickSize = self.thumbstickSize * 2
		self.thumbstickRingSize = self.thumbstickRingSize * 2
		self.middleSize = self.middleSize * 2
		self.middleSpacing = self.middleSpacing * 2
		self.radiusOfDeadZone = self.radiusOfDeadZone * 2
		self.radiusOfMaxSpeed = self.radiusOfMaxSpeed * 2
	end

	local function layoutThumbstickFrame(portraitMode)
		if portraitMode then
			self.thumbstickFrame.Size = UDim2.new(1, 0, 0.4, 0)
			self.thumbstickFrame.Position = UDim2.new(0, 0, 0.6, 0)
		else
			self.thumbstickFrame.Size = UDim2.new(0.4, 0, 2/3, 0)
			self.thumbstickFrame.Position = UDim2.new(0, 0, 1/3, 0)
		end
	end

	self.thumbstickFrame = Instance.new("Frame")
	self.thumbstickFrame.BorderSizePixel = 0
	self.thumbstickFrame.Name = "DynamicThumbstickFrame"
	self.thumbstickFrame.Visible = false
	self.thumbstickFrame.BackgroundTransparency = 1.0
	self.thumbstickFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	self.thumbstickFrame.Active = false
	layoutThumbstickFrame(false)

	self.startImage = Instance.new("ImageLabel")
	self.startImage.Name = "ThumbstickStart"
	self.startImage.Visible = true
	self.startImage.BackgroundTransparency = 1
	self.startImage.Image = TOUCH_CONTROLS_SHEET
	self.startImage.ImageRectOffset = Vector2.new(1,1)
	self.startImage.ImageRectSize = Vector2.new(144, 144)
	self.startImage.ImageColor3 = Color3.new(0, 0, 0)
	self.startImage.AnchorPoint = Vector2.new(0.5, 0.5)
	self.startImage.Position = UDim2.new(0, self.thumbstickRingSize * 3.3, 1, -self.thumbstickRingSize  * 2.8)
	self.startImage.Size = UDim2.new(0, self.thumbstickRingSize  * 3.7, 0, self.thumbstickRingSize  * 3.7)
	self.startImage.ZIndex = 10
	self.startImage.Parent = self.thumbstickFrame

	self.endImage = Instance.new("ImageLabel")
	self.endImage.Name = "ThumbstickEnd"
	self.endImage.Visible = true
	self.endImage.BackgroundTransparency = 1
	self.endImage.Image = TOUCH_CONTROLS_SHEET
	self.endImage.ImageRectOffset = Vector2.new(1,1)
	self.endImage.ImageRectSize =  Vector2.new(144, 144)
	self.endImage.AnchorPoint = Vector2.new(0.5, 0.5)
	self.endImage.Position = self.startImage.Position
	self.endImage.Size = UDim2.new(0, self.thumbstickSize * 0.8, 0, self.thumbstickSize * 0.8)
	self.endImage.ZIndex = 10
	self.endImage.Parent = self.thumbstickFrame

	for i = 1, NUM_MIDDLE_IMAGES do
		self.middleImages[i] = Instance.new("ImageLabel")
		self.middleImages[i].Name = "ThumbstickMiddle"
		self.middleImages[i].Visible = false
		self.middleImages[i].BackgroundTransparency = 1
		self.middleImages[i].Image = TOUCH_CONTROLS_SHEET
		self.middleImages[i].ImageRectOffset = Vector2.new(1,1)
		self.middleImages[i].ImageRectSize = Vector2.new(144, 144)
		self.middleImages[i].ImageTransparency = MIDDLE_TRANSPARENCIES[i]
		self.middleImages[i].AnchorPoint = Vector2.new(0.5, 0.5)
		self.middleImages[i].ZIndex = 9
		self.middleImages[i].Parent = self.thumbstickFrame
	end

	local CameraChangedConn: RBXScriptConnection? = nil
	local function onCurrentCameraChanged()
		if CameraChangedConn then
			CameraChangedConn:Disconnect()
			CameraChangedConn = nil
		end
		local newCamera = workspace.CurrentCamera
		if newCamera then
			local function onViewportSizeChanged()
				local size = newCamera.ViewportSize
				local portraitMode = size.X < size.Y
				layoutThumbstickFrame(portraitMode)
			end
			CameraChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(onViewportSizeChanged)
			onViewportSizeChanged()
		end
	end
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(onCurrentCameraChanged)
	if workspace.CurrentCamera then
		onCurrentCameraChanged()
	end

	self.moveTouchStartPosition = nil

	self.startImageFadeTween = nil
	self.endImageFadeTween = nil
	self.middleImageFadeTweens = {}

	self.onRenderSteppedConn = RunService.RenderStepped:Connect(function()
		if self.tweenInAlphaStart ~= nil then
			local delta = tick() - self.tweenInAlphaStart
			local fadeInTime = (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
			self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeInTime, 1)
			if delta > fadeInTime then
				self.tweenOutAlphaStart = tick()
				self.tweenInAlphaStart = nil
			end
		elseif self.tweenOutAlphaStart ~= nil then
			local delta = tick() - self.tweenOutAlphaStart
			local fadeOutTime = (self.fadeInAndOutHalfDuration * 2) - (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
			self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA + FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeOutTime, 1)
			if delta > fadeOutTime  then
				self.tweenOutAlphaStart = nil
			end
		end
	end)

	self.onTouchEndedConn = UserInputService.TouchEnded:connect(function(inputObject: InputObject)
		if inputObject == self.moveTouchObject then
			self:OnInputEnded()
		end
	end)

	GuiService.MenuOpened:connect(function()
		if self.moveTouchObject then
			self:OnInputEnded()
		end
	end)

	local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
	while not playerGui do
		LocalPlayer.ChildAdded:wait()
		playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
	end

	local playerGuiChangedConn = nil
	local originalScreenOrientationWasLandscape =	playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
													playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight

	local function longShowBackground()
		self.fadeInAndOutHalfDuration = 2.5
		self.fadeInAndOutBalance = 0.05
		self.tweenInAlphaStart = tick()
	end

	playerGuiChangedConn = playerGui:GetPropertyChangedSignal("CurrentScreenOrientation"):Connect(function()
		if (originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait) or
			(not originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation ~= Enum.ScreenOrientation.Portrait) then

			playerGuiChangedConn:disconnect()
			longShowBackground()

			if originalScreenOrientationWasLandscape then
				self.hasFadedBackgroundInPortrait = true
			else
				self.hasFadedBackgroundInLandscape = true
			end
		end
	end)

	self.thumbstickFrame.Parent = parentFrame

	if game:IsLoaded() then
		longShowBackground()
	else
		coroutine.wrap(function()
			game.Loaded:Wait()
			longShowBackground()
		end)()
	end
end

return DynamicThumbstick
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX221c2d44b30c465b8ac082ed0f51f9ee">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Keyboard</string>
							<string name="ScriptGuid">{4182b783-3488-44d6-8767-9f10eae57bcd}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Keyboard Character Control - This module handles controlling your avatar from a keyboard

	2018 PlayerScripts Update - AllYourBlox
--]]

--[[ Roblox Services ]]--
local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local Keyboard = setmetatable({}, BaseCharacterController)
Keyboard.__index = Keyboard

function Keyboard.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(BaseCharacterController.new(), Keyboard)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.textFocusReleasedConn = nil
	self.textFocusGainedConn = nil
	self.windowFocusReleasedConn = nil

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0

	self.jumpEnabled = true

	return self
end

function Keyboard:Enable(enable: boolean)
	if not UserInputService.KeyboardEnabled then
		return false
	end

	if enable == self.enabled then
		-- Module is already in the state being requested. True is returned here since the module will be in the state
		-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
		-- no action was necessary. False indicates failure to be in requested/expected state.
		return true
	end

	self.forwardValue  = 0
	self.backwardValue = 0
	self.leftValue = 0
	self.rightValue = 0
	self.moveVector = ZERO_VECTOR3
	self.jumpRequested = false
	self:UpdateJump()

	if enable then
		self:BindContextActions()
		self:ConnectFocusEventListeners()
	else
		self:UnbindContextActions()
		self:DisconnectFocusEventListeners()
	end

	self.enabled = enable
	return true
end

function Keyboard:UpdateMovement(inputState)
	if inputState == Enum.UserInputState.Cancel then
		self.moveVector = ZERO_VECTOR3
	else
		self.moveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
	end
end

function Keyboard:UpdateJump()
	self.isJumping = self.jumpRequested
end

function Keyboard:BindContextActions()

	-- Note: In the previous version of this code, the movement values were not zeroed-out on UserInputState. Cancel, now they are,
	-- which fixes them from getting stuck on.
	-- We return ContextActionResult.Pass here for legacy reasons.
	-- Many games rely on gameProcessedEvent being false on UserInputService.InputBegan for these control actions.
	local handleMoveForward = function(actionName, inputState, inputObject)
		self.forwardValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleMoveBackward = function(actionName, inputState, inputObject)
		self.backwardValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleMoveLeft = function(actionName, inputState, inputObject)
		self.leftValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleMoveRight = function(actionName, inputState, inputObject)
		self.rightValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
		self:UpdateMovement(inputState)
		return Enum.ContextActionResult.Pass
	end

	local handleJumpAction = function(actionName, inputState, inputObject)
		self.jumpRequested = self.jumpEnabled and (inputState == Enum.UserInputState.Begin)
		self:UpdateJump()
		return Enum.ContextActionResult.Pass
	end

	-- TODO: Revert to KeyCode bindings so that in the future the abstraction layer from actual keys to
	-- movement direction is done in Lua
	ContextActionService:BindActionAtPriority("moveForwardAction", handleMoveForward, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterForward)
	ContextActionService:BindActionAtPriority("moveBackwardAction", handleMoveBackward, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterBackward)
	ContextActionService:BindActionAtPriority("moveLeftAction", handleMoveLeft, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterLeft)
	ContextActionService:BindActionAtPriority("moveRightAction", handleMoveRight, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterRight)
	ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
		self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterJump)
end

function Keyboard:UnbindContextActions()
	ContextActionService:UnbindAction("moveForwardAction")
	ContextActionService:UnbindAction("moveBackwardAction")
	ContextActionService:UnbindAction("moveLeftAction")
	ContextActionService:UnbindAction("moveRightAction")
	ContextActionService:UnbindAction("jumpAction")
end

function Keyboard:ConnectFocusEventListeners()
	local function onFocusReleased()
		self.moveVector = ZERO_VECTOR3
		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0
		self.jumpRequested = false
		self:UpdateJump()
	end

	local function onTextFocusGained(textboxFocused)
		self.jumpRequested = false
		self:UpdateJump()
	end

	self.textFocusReleasedConn = UserInputService.TextBoxFocusReleased:Connect(onFocusReleased)
	self.textFocusGainedConn = UserInputService.TextBoxFocused:Connect(onTextFocusGained)
	self.windowFocusReleasedConn = UserInputService.WindowFocused:Connect(onFocusReleased)
end

function Keyboard:DisconnectFocusEventListeners()
	if self.textFocusReleasedConn then
		self.textFocusReleasedConn:Disconnect()
		self.textFocusReleasedConn = nil
	end
	if self.textFocusGainedConn then
		self.textFocusGainedConn:Disconnect()
		self.textFocusGainedConn = nil
	end
	if self.windowFocusReleasedConn then
		self.windowFocusReleasedConn:Disconnect()
		self.windowFocusReleasedConn = nil
	end
end

return Keyboard
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXf46403e158f74d6e94800f5c806fb5ea">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ClickToMoveController</string>
							<string name="ScriptGuid">{c1fda444-30dc-47ab-821d-8fd227dd0d22}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	-- Original By Kip Turner, Copyright Roblox 2014
	-- Updated by Garnold to utilize the new PathfindingService API, 2017
	-- 2018 PlayerScripts Update - AllYourBlox
--]]

--[[ Flags ]]
local FFlagUserExcludeNonCollidableForPathfindingSuccess, FFlagUserExcludeNonCollidableForPathfindingResult =
    pcall(function() return UserSettings():IsUserFeatureEnabled("UserExcludeNonCollidableForPathfinding") end)
local FFlagUserExcludeNonCollidableForPathfinding = FFlagUserExcludeNonCollidableForPathfindingSuccess and FFlagUserExcludeNonCollidableForPathfindingResult

--[[ Roblox Services ]]--
local UserInputService = game:GetService("UserInputService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local DebrisService = game:GetService('Debris')
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local GuiService = game:GetService("GuiService")

--[[ Configuration ]]
local ShowPath = true
local PlayFailureAnimation = true
local UseDirectPath = false
local UseDirectPathForVehicle = true
local AgentSizeIncreaseFactor = 1.0
local UnreachableWaypointTimeout = 8

--[[ Constants ]]--
local movementKeys = {
	[Enum.KeyCode.W] = true;
	[Enum.KeyCode.A] = true;
	[Enum.KeyCode.S] = true;
	[Enum.KeyCode.D] = true;
	[Enum.KeyCode.Up] = true;
	[Enum.KeyCode.Down] = true;
}

local Player = Players.LocalPlayer

local ClickToMoveDisplay = require(script.Parent:WaitForChild("ClickToMoveDisplay"))

local ZERO_VECTOR3 = Vector3.new(0,0,0)
local ALMOST_ZERO = 0.000001


--------------------------UTIL LIBRARY-------------------------------
local Utility = {}
do
	local function FindCharacterAncestor(part)
		if part then
			local humanoid = part:FindFirstChildOfClass("Humanoid")
			if humanoid then
				return part, humanoid
			else
				return FindCharacterAncestor(part.Parent)
			end
		end
	end
	Utility.FindCharacterAncestor = FindCharacterAncestor

	local function Raycast(ray, ignoreNonCollidable: boolean, ignoreList: {Model})
		ignoreList = ignoreList or {}
		local hitPart, hitPos, hitNorm, hitMat = Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
		if hitPart then
			if ignoreNonCollidable and hitPart.CanCollide == false then
				-- We always include character parts so a user can click on another character
				-- to walk to them.
				local _, humanoid = FindCharacterAncestor(hitPart)
				if humanoid == nil then
					table.insert(ignoreList, hitPart)
					return Raycast(ray, ignoreNonCollidable, ignoreList)
				end
			end
			return hitPart, hitPos, hitNorm, hitMat
		end
		return nil, nil
	end
	Utility.Raycast = Raycast
end

local humanoidCache = {}
local function findPlayerHumanoid(player: Player)
	local character = player and player.Character
	if character then
		local resultHumanoid = humanoidCache[player]
		if resultHumanoid and resultHumanoid.Parent == character then
			return resultHumanoid
		else
			humanoidCache[player] = nil -- Bust Old Cache
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				humanoidCache[player] = humanoid
			end
			return humanoid
		end
	end
end

--------------------------CHARACTER CONTROL-------------------------------
local CurrentIgnoreList: {Model}
local CurrentIgnoreTag = nil

local TaggedInstanceAddedConnection: RBXScriptConnection? = nil
local TaggedInstanceRemovedConnection: RBXScriptConnection? = nil

local function GetCharacter(): Model
	return Player and Player.Character
end

local function UpdateIgnoreTag(newIgnoreTag)
	if newIgnoreTag == CurrentIgnoreTag then
		return
	end
	if TaggedInstanceAddedConnection then
		TaggedInstanceAddedConnection:Disconnect()
		TaggedInstanceAddedConnection = nil
	end
	if TaggedInstanceRemovedConnection then
		TaggedInstanceRemovedConnection:Disconnect()
		TaggedInstanceRemovedConnection = nil
	end
	CurrentIgnoreTag = newIgnoreTag
	CurrentIgnoreList = {GetCharacter()}
	if CurrentIgnoreTag ~= nil then
		local ignoreParts = CollectionService:GetTagged(CurrentIgnoreTag)
		for _, ignorePart in ipairs(ignoreParts) do
			table.insert(CurrentIgnoreList, ignorePart)
		end
		TaggedInstanceAddedConnection = CollectionService:GetInstanceAddedSignal(
			CurrentIgnoreTag):Connect(function(ignorePart)
			table.insert(CurrentIgnoreList, ignorePart)
		end)
		TaggedInstanceRemovedConnection = CollectionService:GetInstanceRemovedSignal(
			CurrentIgnoreTag):Connect(function(ignorePart)
			for i = 1, #CurrentIgnoreList do
				if CurrentIgnoreList[i] == ignorePart then
					CurrentIgnoreList[i] = CurrentIgnoreList[#CurrentIgnoreList]
					table.remove(CurrentIgnoreList)
					break
				end
			end
		end)
	end
end

local function getIgnoreList(): {Model}
	if CurrentIgnoreList then
		return CurrentIgnoreList
	end
	CurrentIgnoreList = {}
	table.insert(CurrentIgnoreList, GetCharacter())
	return CurrentIgnoreList
end

local function minV(a: Vector3, b: Vector3)
	return Vector3.new(math.min(a.X, b.X), math.min(a.Y, b.Y), math.min(a.Z, b.Z))
end
local function maxV(a, b)
	return Vector3.new(math.max(a.X, b.X), math.max(a.Y, b.Y), math.max(a.Z, b.Z))
end
local function getCollidableExtentsSize(character: Model?)
	if character == nil or character.PrimaryPart == nil then return end
	local toLocalCFrame = character.PrimaryPart.CFrame:inverse()
	local min = Vector3.new(math.huge, math.huge, math.huge)
	local max = Vector3.new(-math.huge, -math.huge, -math.huge)
	for _,descendant in pairs(character:GetDescendants()) do
		if descendant:IsA('BasePart') and descendant.CanCollide then
			local localCFrame = toLocalCFrame * descendant.CFrame
			local size = Vector3.new(descendant.Size.X / 2, descendant.Size.Y / 2, descendant.Size.Z / 2)
			local vertices = {
				Vector3.new( size.X,  size.Y,  size.Z),
				Vector3.new( size.X,  size.Y, -size.Z),
				Vector3.new( size.X, -size.Y,  size.Z),
				Vector3.new( size.X, -size.Y, -size.Z),
				Vector3.new(-size.X,  size.Y,  size.Z),
				Vector3.new(-size.X,  size.Y, -size.Z),
				Vector3.new(-size.X, -size.Y,  size.Z),
				Vector3.new(-size.X, -size.Y, -size.Z)
			}
			for _,vertex in ipairs(vertices) do
				local v = localCFrame * vertex
				min = minV(min, v)
				max = maxV(max, v)
			end
		end
	end
	local r = max - min
	if r.X < 0 or r.Y < 0 or r.Z < 0 then return nil end
	return r
end

-----------------------------------PATHER--------------------------------------

local function Pather(endPoint, surfaceNormal, overrideUseDirectPath: boolean?)
	local this = {}

	local directPathForHumanoid
	local directPathForVehicle
	if overrideUseDirectPath ~= nil then
		directPathForHumanoid = overrideUseDirectPath
		directPathForVehicle = overrideUseDirectPath
	else
		directPathForHumanoid = UseDirectPath
		directPathForVehicle = UseDirectPathForVehicle
	end

	this.Cancelled = false
	this.Started = false

	this.Finished = Instance.new("BindableEvent")
	this.PathFailed = Instance.new("BindableEvent")

	this.PathComputing = false
	this.PathComputed = false

	this.OriginalTargetPoint = endPoint
	this.TargetPoint = endPoint
	this.TargetSurfaceNormal = surfaceNormal

	this.DiedConn = nil
	this.SeatedConn = nil
	this.BlockedConn = nil
	this.TeleportedConn = nil

	this.CurrentPoint = 0

	this.HumanoidOffsetFromPath = ZERO_VECTOR3

	this.CurrentWaypointPosition = nil 
	this.CurrentWaypointPlaneNormal = ZERO_VECTOR3
	this.CurrentWaypointPlaneDistance = 0
	this.CurrentWaypointNeedsJump = false;

	this.CurrentHumanoidPosition = ZERO_VECTOR3
	this.CurrentHumanoidVelocity = 0 :: Vector3 | number

	this.NextActionMoveDirection = ZERO_VECTOR3
	this.NextActionJump = false

	this.Timeout = 0

	this.Humanoid = findPlayerHumanoid(Player)
	this.OriginPoint = nil
	this.AgentCanFollowPath = false
	this.DirectPath = false
	this.DirectPathRiseFirst = false

	local rootPart: BasePart = this.Humanoid and this.Humanoid.RootPart
	if rootPart then
		-- Setup origin
		this.OriginPoint = rootPart.CFrame.p

		-- Setup agent
		local agentRadius = 2
		local agentHeight = 5
		local agentCanJump = true

		local seat = this.Humanoid.SeatPart
		if seat and seat:IsA("VehicleSeat") then
			-- Humanoid is seated on a vehicle
			local vehicle = seat:FindFirstAncestorOfClass("Model")
			if vehicle then
				-- Make sure the PrimaryPart is set to the vehicle seat while we compute the extends.
				local tempPrimaryPart = vehicle.PrimaryPart
				vehicle.PrimaryPart = seat

				-- For now, only direct path
				if directPathForVehicle then
					local extents: Vector3 = vehicle:GetExtentsSize()
					agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
					agentHeight = AgentSizeIncreaseFactor * extents.Y
					agentCanJump = false
					this.AgentCanFollowPath = true
					this.DirectPath = directPathForVehicle
				end

				-- Reset PrimaryPart
				vehicle.PrimaryPart = tempPrimaryPart
			end
		else
			local extents: Vector3?
			if FFlagUserExcludeNonCollidableForPathfinding then
				local character: Model? = GetCharacter()
				if character ~= nil then
					extents = getCollidableExtentsSize(character)
				end
			end
			if extents == nil then
				extents = GetCharacter():GetExtentsSize()
			end
			agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
			agentHeight = AgentSizeIncreaseFactor * extents.Y
			agentCanJump = (this.Humanoid.JumpPower > 0)
			this.AgentCanFollowPath = true
			this.DirectPath = directPathForHumanoid :: boolean
			this.DirectPathRiseFirst = this.Humanoid.Sit
		end

		-- Build path object
		this.pathResult = PathfindingService:CreatePath({AgentRadius = agentRadius, AgentHeight = agentHeight, AgentCanJump = agentCanJump})
	end

	function this:Cleanup()
		if this.stopTraverseFunc then
			this.stopTraverseFunc()
			this.stopTraverseFunc = nil
		end

		if this.MoveToConn then
			this.MoveToConn:Disconnect()
			this.MoveToConn = nil
		end

		if this.BlockedConn then
			this.BlockedConn:Disconnect()
			this.BlockedConn = nil
		end

		if this.DiedConn then
			this.DiedConn:Disconnect()
			this.DiedConn = nil
		end

		if this.SeatedConn then
			this.SeatedConn:Disconnect()
			this.SeatedConn = nil
		end

		if this.TeleportedConn then
			this.TeleportedConn:Disconnect()
			this.TeleportedConn = nil
		end

		this.Started = false
	end

	function this:Cancel()
		this.Cancelled = true
		this:Cleanup()
	end

	function this:IsActive()
		return this.AgentCanFollowPath and this.Started and not this.Cancelled
	end

	function this:OnPathInterrupted()
		-- Stop moving
		this.Cancelled = true
		this:OnPointReached(false)
	end

	function this:ComputePath()
		if this.OriginPoint then
			if this.PathComputed or this.PathComputing then return end
			this.PathComputing = true
			if this.AgentCanFollowPath then
				if this.DirectPath then
					this.pointList = {
						PathWaypoint.new(this.OriginPoint, Enum.PathWaypointAction.Walk),
						PathWaypoint.new(this.TargetPoint, this.DirectPathRiseFirst and Enum.PathWaypointAction.Jump or Enum.PathWaypointAction.Walk)
					}
					this.PathComputed = true
				else
					this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
					this.pointList = this.pathResult:GetWaypoints()
					this.BlockedConn = this.pathResult.Blocked:Connect(function(blockedIdx) this:OnPathBlocked(blockedIdx) end)
					this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success
				end
			end
			this.PathComputing = false
		end
	end

	function this:IsValidPath()
		this:ComputePath()
		return this.PathComputed and this.AgentCanFollowPath
	end

	this.Recomputing = false
	function this:OnPathBlocked(blockedWaypointIdx)
		local pathBlocked = blockedWaypointIdx >= this.CurrentPoint
		if not pathBlocked or this.Recomputing then
			return
		end

		this.Recomputing = true

		if this.stopTraverseFunc then
			this.stopTraverseFunc()
			this.stopTraverseFunc = nil
		end

		this.OriginPoint = this.Humanoid.RootPart.CFrame.p

		this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
		this.pointList = this.pathResult:GetWaypoints()
		if #this.pointList > 0 then
			this.HumanoidOffsetFromPath = this.pointList[1].Position - this.OriginPoint
		end
		this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success

		if ShowPath then
			this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList)
		end
		if this.PathComputed then
			this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
			this:OnPointReached(true) -- Move to first point
		else
			this.PathFailed:Fire()
			this:Cleanup()
		end

		this.Recomputing = false
	end

	function this:OnRenderStepped(dt: number)
		if this.Started and not this.Cancelled then
			-- Check for Timeout (if a waypoint is not reached within the delay, we fail)
			this.Timeout = this.Timeout + dt
			if this.Timeout > UnreachableWaypointTimeout then
				this:OnPointReached(false)
				return
			end

			-- Get Humanoid position and velocity
			this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
			this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity

			-- Check if it has reached some waypoints
			while this.Started and this:IsCurrentWaypointReached() do
				this:OnPointReached(true)
			end

			-- If still started, update actions
			if this.Started then
				-- Move action
				this.NextActionMoveDirection = this.CurrentWaypointPosition - this.CurrentHumanoidPosition
				if this.NextActionMoveDirection.Magnitude > ALMOST_ZERO then
					this.NextActionMoveDirection = this.NextActionMoveDirection.Unit
				else
					this.NextActionMoveDirection = ZERO_VECTOR3
				end
				-- Jump action
				if this.CurrentWaypointNeedsJump then
					this.NextActionJump = true
					this.CurrentWaypointNeedsJump = false	-- Request jump only once
				else
					this.NextActionJump = false
				end
			end
		end
	end

	function this:IsCurrentWaypointReached()
		local reached = false

		-- Check we do have a plane, if not, we consider the waypoint reached
		if this.CurrentWaypointPlaneNormal ~= ZERO_VECTOR3 then
			-- Compute distance of Humanoid from destination plane
			local dist = this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidPosition) - this.CurrentWaypointPlaneDistance
			-- Compute the component of the Humanoid velocity that is towards the plane
			local velocity = -this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidVelocity)
			-- Compute the threshold from the destination plane based on Humanoid velocity
			local threshold = math.max(1.0, 0.0625 * velocity)
			-- If we are less then threshold in front of the plane (between 0 and threshold) or if we are behing the plane (less then 0), we consider we reached it
			reached = dist < threshold
		else
			reached = true
		end

		if reached then
			this.CurrentWaypointPosition = nil
			this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
			this.CurrentWaypointPlaneDistance = 0
		end

		return reached
	end

	function this:OnPointReached(reached)

		if reached and not this.Cancelled then
			-- First, destroyed the current displayed waypoint
			if this.setPointFunc then
				this.setPointFunc(this.CurrentPoint)
			end

			local nextWaypointIdx = this.CurrentPoint + 1

			if nextWaypointIdx > #this.pointList then
				-- End of path reached
				if this.stopTraverseFunc then
					this.stopTraverseFunc()
				end
				this.Finished:Fire()
				this:Cleanup()
			else
				local currentWaypoint = this.pointList[this.CurrentPoint]
				local nextWaypoint = this.pointList[nextWaypointIdx]

				-- If airborne, only allow to keep moving
				-- if nextWaypoint.Action ~= Jump, or path mantains a direction
				-- Otherwise, wait until the humanoid gets to the ground
				local currentState = this.Humanoid:GetState()
				local isInAir = currentState == Enum.HumanoidStateType.FallingDown
					or currentState == Enum.HumanoidStateType.Freefall
					or currentState == Enum.HumanoidStateType.Jumping

				if isInAir then
					local shouldWaitForGround = nextWaypoint.Action == Enum.PathWaypointAction.Jump
					if not shouldWaitForGround and this.CurrentPoint > 1 then
						local prevWaypoint = this.pointList[this.CurrentPoint - 1]

						local prevDir = currentWaypoint.Position - prevWaypoint.Position
						local currDir = nextWaypoint.Position - currentWaypoint.Position

						local prevDirXZ = Vector2.new(prevDir.x, prevDir.z).Unit
						local currDirXZ = Vector2.new(currDir.x, currDir.z).Unit

						local THRESHOLD_COS = 0.996 -- ~cos(5 degrees)
						shouldWaitForGround = prevDirXZ:Dot(currDirXZ) < THRESHOLD_COS
					end

					if shouldWaitForGround then
						this.Humanoid.FreeFalling:Wait()

						-- Give time to the humanoid's state to change
						-- Otherwise, the jump flag in Humanoid
						-- will be reset by the state change
						wait(0.1)
					end
				end

				-- Move to the next point
				this:MoveToNextWayPoint(currentWaypoint, nextWaypoint, nextWaypointIdx)
			end
		else
			this.PathFailed:Fire()
			this:Cleanup()
		end
	end

	function this:MoveToNextWayPoint(currentWaypoint: PathWaypoint, nextWaypoint: PathWaypoint, nextWaypointIdx: number)
		-- Build next destination plane
		-- (plane normal is perpendicular to the y plane and is from next waypoint towards current one (provided the two waypoints are not at the same location))
		-- (plane location is at next waypoint)
		this.CurrentWaypointPlaneNormal = currentWaypoint.Position - nextWaypoint.Position
		this.CurrentWaypointPlaneNormal = Vector3.new(this.CurrentWaypointPlaneNormal.X, 0, this.CurrentWaypointPlaneNormal.Z)
		if this.CurrentWaypointPlaneNormal.Magnitude > ALMOST_ZERO then
			this.CurrentWaypointPlaneNormal	= this.CurrentWaypointPlaneNormal.Unit
			this.CurrentWaypointPlaneDistance = this.CurrentWaypointPlaneNormal:Dot(nextWaypoint.Position)
		else
			-- Next waypoint is the same as current waypoint so no plane
			this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
			this.CurrentWaypointPlaneDistance = 0
		end

		-- Should we jump
		this.CurrentWaypointNeedsJump = nextWaypoint.Action == Enum.PathWaypointAction.Jump;

		-- Remember next waypoint position
		this.CurrentWaypointPosition = nextWaypoint.Position

		-- Move to next point
		this.CurrentPoint = nextWaypointIdx

		-- Finally reset Timeout
		this.Timeout = 0
	end

	function this:Start(overrideShowPath)
		if not this.AgentCanFollowPath then
			this.PathFailed:Fire()
			return
		end

		if this.Started then return end
		this.Started = true

		ClickToMoveDisplay.CancelFailureAnimation()

		if ShowPath then
			if overrideShowPath == nil or overrideShowPath then
				this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList, this.OriginalTargetPoint)
			end
		end

		if #this.pointList > 0 then
			-- Determine the humanoid offset from the path's first point
			-- Offset of the first waypoint from the path's origin point
			this.HumanoidOffsetFromPath = Vector3.new(0, this.pointList[1].Position.Y - this.OriginPoint.Y, 0)

			-- As well as its current position and velocity
			this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
			this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity

			-- Connect to events
			this.SeatedConn = this.Humanoid.Seated:Connect(function(isSeated, seat) this:OnPathInterrupted() end)
			this.DiedConn = this.Humanoid.Died:Connect(function() this:OnPathInterrupted() end)
			this.TeleportedConn = this.Humanoid.RootPart:GetPropertyChangedSignal("CFrame"):Connect(function() this:OnPathInterrupted() end)

			-- Actually start
			this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
			this:OnPointReached(true) -- Move to first point
		else
			this.PathFailed:Fire()
			if this.stopTraverseFunc then
				this.stopTraverseFunc()
			end
		end
	end

	--We always raycast to the ground in the case that the user clicked a wall.
	local offsetPoint = this.TargetPoint + this.TargetSurfaceNormal*1.5
	local ray = Ray.new(offsetPoint, Vector3.new(0,-1,0)*50)
	local newHitPart, newHitPos = Workspace:FindPartOnRayWithIgnoreList(ray, getIgnoreList())
	if newHitPart then
		this.TargetPoint = newHitPos
	end
	this:ComputePath()

	return this
end

-------------------------------------------------------------------------

local function CheckAlive()
	local humanoid = findPlayerHumanoid(Player)
	return humanoid ~= nil and humanoid.Health > 0
end

local function GetEquippedTool(character: Model?)
	if character ~= nil then
		for _, child in pairs(character:GetChildren()) do
			if child:IsA('Tool') then
				return child
			end
		end
	end
end

local ExistingPather = nil
local ExistingIndicator = nil
local PathCompleteListener = nil
local PathFailedListener = nil

local function CleanupPath()
	if ExistingPather then
		ExistingPather:Cancel()
		ExistingPather = nil
	end
	if PathCompleteListener then
		PathCompleteListener:Disconnect()
		PathCompleteListener = nil
	end
	if PathFailedListener then
		PathFailedListener:Disconnect()
		PathFailedListener = nil
	end
	if ExistingIndicator then
		ExistingIndicator:Destroy()
	end
end

local function HandleMoveTo(thisPather, hitPt, hitChar, character, overrideShowPath)
	if ExistingPather then
		CleanupPath()
	end
	ExistingPather = thisPather
	thisPather:Start(overrideShowPath)

	PathCompleteListener = thisPather.Finished.Event:Connect(function()
		CleanupPath()
		if hitChar then
			local currentWeapon = GetEquippedTool(character)
			if currentWeapon then
				currentWeapon:Activate()
			end
		end
	end)
	PathFailedListener = thisPather.PathFailed.Event:Connect(function()
		CleanupPath()
		if overrideShowPath == nil or overrideShowPath then
			local shouldPlayFailureAnim = PlayFailureAnimation and not (ExistingPather and ExistingPather:IsActive())
			if shouldPlayFailureAnim then
				ClickToMoveDisplay.PlayFailureAnimation()
			end
			ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
		end
	end)
end

local function ShowPathFailedFeedback(hitPt)
	if ExistingPather and ExistingPather:IsActive() then
		ExistingPather:Cancel()
	end
	if PlayFailureAnimation then
		ClickToMoveDisplay.PlayFailureAnimation()
	end
	ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
end

function OnTap(tapPositions: {Vector3}, goToPoint: Vector3?, wasTouchTap: boolean?)
	-- Good to remember if this is the latest tap event
	local camera = Workspace.CurrentCamera
	local character = Player.Character

	if not CheckAlive() then return end

	-- This is a path tap position
	if #tapPositions == 1 or goToPoint then
		if camera then
			local unitRay = camera:ScreenPointToRay(tapPositions[1].x, tapPositions[1].y)
			local ray = Ray.new(unitRay.Origin, unitRay.Direction*1000)

			local myHumanoid = findPlayerHumanoid(Player)
			local hitPart, hitPt, hitNormal = Utility.Raycast(ray, true, getIgnoreList())

			local hitChar, hitHumanoid = Utility.FindCharacterAncestor(hitPart)
			if wasTouchTap and hitHumanoid and StarterGui:GetCore("AvatarContextMenuEnabled") then
				local clickedPlayer = Players:GetPlayerFromCharacter(hitHumanoid.Parent)
				if clickedPlayer then
					CleanupPath()
					return
				end
			end
			if goToPoint then
				hitPt = goToPoint
				hitChar = nil
			end
			if hitPt and character then
				-- Clean up current path
				CleanupPath()
				local thisPather = Pather(hitPt, hitNormal)
				if thisPather:IsValidPath() then
					HandleMoveTo(thisPather, hitPt, hitChar, character)
				else
					-- Clean up
					thisPather:Cleanup()
					-- Feedback here for when we don't have a good path
					ShowPathFailedFeedback(hitPt)
				end
			end
		end
	elseif #tapPositions >= 2 then
		if camera then
			-- Do shoot
			local currentWeapon = GetEquippedTool(character)
			if currentWeapon then
				currentWeapon:Activate()
			end
		end
	end
end

local function DisconnectEvent(event)
	if event then
		event:Disconnect()
	end
end

--[[ The ClickToMove Controller Class ]]--
local KeyboardController = require(script.Parent:WaitForChild("Keyboard"))
local ClickToMove = setmetatable({}, KeyboardController)
ClickToMove.__index = ClickToMove

function ClickToMove.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(KeyboardController.new(CONTROL_ACTION_PRIORITY), ClickToMove)

	self.fingerTouches = {}
	self.numUnsunkTouches = 0
	-- PC simulation
	self.mouse1Down = tick()
	self.mouse1DownPos = Vector2.new()
	self.mouse2DownTime = tick()
	self.mouse2DownPos = Vector2.new()
	self.mouse2UpTime = tick()

	self.keyboardMoveVector = ZERO_VECTOR3

	self.tapConn = nil
	self.inputBeganConn = nil
	self.inputChangedConn = nil
	self.inputEndedConn = nil
	self.humanoidDiedConn = nil
	self.characterChildAddedConn = nil
	self.onCharacterAddedConn = nil
	self.characterChildRemovedConn = nil
	self.renderSteppedConn = nil
	self.menuOpenedConnection = nil

	self.running = false

	self.wasdEnabled = false

	return self
end

function ClickToMove:DisconnectEvents()
	DisconnectEvent(self.tapConn)
	DisconnectEvent(self.inputBeganConn)
	DisconnectEvent(self.inputChangedConn)
	DisconnectEvent(self.inputEndedConn)
	DisconnectEvent(self.humanoidDiedConn)
	DisconnectEvent(self.characterChildAddedConn)
	DisconnectEvent(self.onCharacterAddedConn)
	DisconnectEvent(self.renderSteppedConn)
	DisconnectEvent(self.characterChildRemovedConn)
	DisconnectEvent(self.menuOpenedConnection)
end

function ClickToMove:OnTouchBegan(input, processed)
	if self.fingerTouches[input] == nil and not processed then
		self.numUnsunkTouches = self.numUnsunkTouches + 1
	end
	self.fingerTouches[input] = processed
end

function ClickToMove:OnTouchChanged(input, processed)
	if self.fingerTouches[input] == nil then
		self.fingerTouches[input] = processed
		if not processed then
			self.numUnsunkTouches = self.numUnsunkTouches + 1
		end
	end
end

function ClickToMove:OnTouchEnded(input, processed)
	if self.fingerTouches[input] ~= nil and self.fingerTouches[input] == false then
		self.numUnsunkTouches = self.numUnsunkTouches - 1
	end
	self.fingerTouches[input] = nil
end


function ClickToMove:OnCharacterAdded(character)
	self:DisconnectEvents()

	self.inputBeganConn = UserInputService.InputBegan:Connect(function(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchBegan(input, processed)
		end

		-- Cancel path when you use the keyboard controls if wasd is enabled.
		if self.wasdEnabled and processed == false and input.UserInputType == Enum.UserInputType.Keyboard
			and movementKeys[input.KeyCode] then
			CleanupPath()
			ClickToMoveDisplay.CancelFailureAnimation()
		end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			self.mouse1DownTime = tick()
			self.mouse1DownPos = input.Position
		end
		if input.UserInputType == Enum.UserInputType.MouseButton2 then
			self.mouse2DownTime = tick()
			self.mouse2DownPos = input.Position
		end
	end)

	self.inputChangedConn = UserInputService.InputChanged:Connect(function(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchChanged(input, processed)
		end
	end)

	self.inputEndedConn = UserInputService.InputEnded:Connect(function(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchEnded(input, processed)
		end

		if input.UserInputType == Enum.UserInputType.MouseButton2 then
			self.mouse2UpTime = tick()
			local currPos: Vector3 = input.Position
			-- We allow click to move during path following or if there is no keyboard movement
			local allowed = ExistingPather or self.keyboardMoveVector.Magnitude <= 0
			if self.mouse2UpTime - self.mouse2DownTime < 0.25 and (currPos - self.mouse2DownPos).magnitude < 5 and allowed then
				local positions = {currPos}
				OnTap(positions)
			end
		end
	end)

	self.tapConn = UserInputService.TouchTap:Connect(function(touchPositions, processed)
		if not processed then
			OnTap(touchPositions, nil, true)
		end
	end)

	self.menuOpenedConnection = GuiService.MenuOpened:Connect(function()
		CleanupPath()
	end)

	local function OnCharacterChildAdded(child)
		if UserInputService.TouchEnabled then
			if child:IsA('Tool') then
				child.ManualActivationOnly = true
			end
		end
		if child:IsA('Humanoid') then
			DisconnectEvent(self.humanoidDiedConn)
			self.humanoidDiedConn = child.Died:Connect(function()
				if ExistingIndicator then
					DebrisService:AddItem(ExistingIndicator.Model, 1)
				end
			end)
		end
	end

	self.characterChildAddedConn = character.ChildAdded:Connect(function(child)
		OnCharacterChildAdded(child)
	end)
	self.characterChildRemovedConn = character.ChildRemoved:Connect(function(child)
		if UserInputService.TouchEnabled then
			if child:IsA('Tool') then
				child.ManualActivationOnly = false
			end
		end
	end)
	for _, child in pairs(character:GetChildren()) do
		OnCharacterChildAdded(child)
	end
end

function ClickToMove:Start()
	self:Enable(true)
end

function ClickToMove:Stop()
	self:Enable(false)
end

function ClickToMove:CleanupPath()
	CleanupPath()
end

function ClickToMove:Enable(enable: boolean, enableWASD: boolean, touchJumpController)
	if enable then
		if not self.running then
			if Player.Character then -- retro-listen
				self:OnCharacterAdded(Player.Character)
			end
			self.onCharacterAddedConn = Player.CharacterAdded:Connect(function(char)
				self:OnCharacterAdded(char)
			end)
			self.running = true
		end
		self.touchJumpController = touchJumpController
		if self.touchJumpController then
			self.touchJumpController:Enable(self.jumpEnabled)
		end
	else
		if self.running then
			self:DisconnectEvents()
			CleanupPath()
			-- Restore tool activation on shutdown
			if UserInputService.TouchEnabled then
				local character = Player.Character
				if character then
					for _, child in pairs(character:GetChildren()) do
						if child:IsA('Tool') then
							child.ManualActivationOnly = false
						end
					end
				end
			end
			self.running = false
		end
		if self.touchJumpController and not self.jumpEnabled then
			self.touchJumpController:Enable(true)
		end
		self.touchJumpController = nil
	end

	-- Extension for initializing Keyboard input as this class now derives from Keyboard
	if UserInputService.KeyboardEnabled and enable ~= self.enabled then

		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0

		self.moveVector = ZERO_VECTOR3

		if enable then
			self:BindContextActions()
			self:ConnectFocusEventListeners()
		else
			self:UnbindContextActions()
			self:DisconnectFocusEventListeners()
		end
	end

	self.wasdEnabled = enable and enableWASD or false
	self.enabled = enable
end

function ClickToMove:OnRenderStepped(dt)
	-- Reset jump
	self.isJumping = false

	-- Handle Pather
	if ExistingPather then
		-- Let the Pather update
		ExistingPather:OnRenderStepped(dt)

		-- If we still have a Pather, set the resulting actions
		if ExistingPather then
			-- Setup move (NOT relative to camera)
			self.moveVector = ExistingPather.NextActionMoveDirection
			self.moveVectorIsCameraRelative = false

			-- Setup jump (but do NOT prevent the base Keayboard class from requesting jumps as well)
			if ExistingPather.NextActionJump then
				self.isJumping = true
			end
		else
			self.moveVector = self.keyboardMoveVector
			self.moveVectorIsCameraRelative = true
		end
	else
		self.moveVector = self.keyboardMoveVector
		self.moveVectorIsCameraRelative = true
	end

	-- Handle Keyboard's jump
	if self.jumpRequested then
		self.isJumping = true
	end
end

-- Overrides Keyboard:UpdateMovement(inputState) to conditionally consider self.wasdEnabled and let OnRenderStepped handle the movement
function ClickToMove:UpdateMovement(inputState)
	if inputState == Enum.UserInputState.Cancel then
		self.keyboardMoveVector = ZERO_VECTOR3
	elseif self.wasdEnabled then
		self.keyboardMoveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
	end
end

-- Overrides Keyboard:UpdateJump() because jump is handled in OnRenderStepped
function ClickToMove:UpdateJump()
	-- Nothing to do (handled in OnRenderStepped)
end

--Public developer facing functions
function ClickToMove:SetShowPath(value)
	ShowPath = value
end

function ClickToMove:GetShowPath()
	return ShowPath
end

function ClickToMove:SetWaypointTexture(texture)
	ClickToMoveDisplay.SetWaypointTexture(texture)
end

function ClickToMove:GetWaypointTexture()
	return ClickToMoveDisplay.GetWaypointTexture()
end

function ClickToMove:SetWaypointRadius(radius)
	ClickToMoveDisplay.SetWaypointRadius(radius)
end

function ClickToMove:GetWaypointRadius()
	return ClickToMoveDisplay.GetWaypointRadius()
end

function ClickToMove:SetEndWaypointTexture(texture)
	ClickToMoveDisplay.SetEndWaypointTexture(texture)
end

function ClickToMove:GetEndWaypointTexture()
	return ClickToMoveDisplay.GetEndWaypointTexture()
end

function ClickToMove:SetWaypointsAlwaysOnTop(alwaysOnTop)
	ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
end

function ClickToMove:GetWaypointsAlwaysOnTop()
	return ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
end

function ClickToMove:SetFailureAnimationEnabled(enabled)
	PlayFailureAnimation = enabled
end

function ClickToMove:GetFailureAnimationEnabled()
	return PlayFailureAnimation
end

function ClickToMove:SetIgnoredPartsTag(tag)
	UpdateIgnoreTag(tag)
end

function ClickToMove:GetIgnoredPartsTag()
	return CurrentIgnoreTag
end

function ClickToMove:SetUseDirectPath(directPath)
	UseDirectPath = directPath
end

function ClickToMove:GetUseDirectPath()
	return UseDirectPath
end

function ClickToMove:SetAgentSizeIncreaseFactor(increaseFactorPercent: number)
	AgentSizeIncreaseFactor = 1.0 + (increaseFactorPercent / 100.0)
end

function ClickToMove:GetAgentSizeIncreaseFactor()
	return (AgentSizeIncreaseFactor - 1.0) * 100.0
end

function ClickToMove:SetUnreachableWaypointTimeout(timeoutInSec)
	UnreachableWaypointTimeout = timeoutInSec
end

function ClickToMove:GetUnreachableWaypointTimeout()
	return UnreachableWaypointTimeout
end

function ClickToMove:SetUserJumpEnabled(jumpEnabled)
	self.jumpEnabled = jumpEnabled
	if self.touchJumpController then
		self.touchJumpController:Enable(jumpEnabled)
	end
end

function ClickToMove:GetUserJumpEnabled()
	return self.jumpEnabled
end

function ClickToMove:MoveTo(position, showPath, useDirectPath)
	local character = Player.Character
	if character == nil then
		return false
	end
	local thisPather = Pather(position, Vector3.new(0, 1, 0), useDirectPath)
	if thisPather and thisPather:IsValidPath() then
		HandleMoveTo(thisPather, position, nil, character, showPath)
		return true
	end
	return false
end

return ClickToMove
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX784822ec7baf47b28fda4675563345b1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseCharacterController</string>
							<string name="ScriptGuid">{86cfeb22-6c1a-4369-bc76-13140a9983ed}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
--[[
	BaseCharacterController - Abstract base class for character controllers, not intended to be
	directly instantiated.

	2018 PlayerScripts Update - AllYourBlox
--]]

local ZERO_VECTOR3: Vector3 = Vector3.new(0,0,0)

--[[ The Module ]]--
local BaseCharacterController = {}
BaseCharacterController.__index = BaseCharacterController

function BaseCharacterController.new()
	local self = setmetatable({}, BaseCharacterController)
	self.enabled = false
	self.moveVector = ZERO_VECTOR3
	self.moveVectorIsCameraRelative = true
	self.isJumping = false
	return self
end

function BaseCharacterController:OnRenderStepped(dt: number)
	-- By default, nothing to do
end

function BaseCharacterController:GetMoveVector(): Vector3
	return self.moveVector
end

function BaseCharacterController:IsMoveVectorCameraRelative(): boolean
	return self.moveVectorIsCameraRelative
end

function BaseCharacterController:GetIsJumping(): boolean
	return self.isJumping
end

-- Override in derived classes to set self.enabled and return boolean indicating
-- whether Enable/Disable was successful. Return true if controller is already in the requested state.
function BaseCharacterController:Enable(enable: boolean): boolean
	error("BaseCharacterController:Enable must be overridden in derived classes and should not be called.")
	return false
end

return BaseCharacterController]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX22d84721207f470bb7011d63c6cd084d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TouchThumbstick</string>
							<string name="ScriptGuid">{d7bbe774-24d2-4a2e-be9f-2c743268db0b}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	
	TouchThumbstick
	
--]]
local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local UserInputService = game:GetService("UserInputService")
--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/TouchControlsSheet.png"
--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local TouchThumbstick = setmetatable({}, BaseCharacterController)
TouchThumbstick.__index = TouchThumbstick
function TouchThumbstick.new()
	local self = setmetatable(BaseCharacterController.new(), TouchThumbstick)
	
	self.isFollowStick = false
	
	self.thumbstickFrame = nil
	self.moveTouchObject = nil
	self.onTouchMovedConn = nil
	self.onTouchEndedConn = nil
	self.screenPos = nil
	self.stickImage = nil
	self.thumbstickSize = nil -- Float
	
	return self
end
function TouchThumbstick:Enable(enable: boolean?, uiParentFrame)
	if enable == nil then return false end			-- If nil, return false (invalid argument)
	enable = enable and true or false				-- Force anything non-nil to boolean before comparison
	if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state
	
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false
	
	if enable then
		-- Enable
		if not self.thumbstickFrame then
			self:Create(uiParentFrame)
		end
		self.thumbstickFrame.Visible = true
	else 
		-- Disable
		self.thumbstickFrame.Visible = false
		self:OnInputEnded()
	end
	self.enabled = enable
end
function TouchThumbstick:OnInputEnded()
	self.thumbstickFrame.Position = self.screenPos
	self.stickImage.Position = UDim2.new(0, self.thumbstickFrame.Size.X.Offset/2 - self.thumbstickSize/4, 0, self.thumbstickFrame.Size.Y.Offset/2 - self.thumbstickSize/4)
	
	self.moveVector = ZERO_VECTOR3
	self.isJumping = false
	self.thumbstickFrame.Position = self.screenPos
	self.moveTouchObject = nil
end
function TouchThumbstick:Create(parentFrame)
	
	if self.thumbstickFrame then
		self.thumbstickFrame:Destroy()
		self.thumbstickFrame = nil
		if self.onTouchMovedConn then
			self.onTouchMovedConn:Disconnect()
			self.onTouchMovedConn = nil
		end
		if self.onTouchEndedConn then
			self.onTouchEndedConn:Disconnect()
			self.onTouchEndedConn = nil
		end
	end
	
	local minAxis = math.min(parentFrame.AbsoluteSize.x, parentFrame.AbsoluteSize.y)
	local isSmallScreen = minAxis <= 500
	self.thumbstickSize = isSmallScreen and 70 or 120
	self.screenPos = isSmallScreen and UDim2.new(0, (self.thumbstickSize/2) - 10, 1, -self.thumbstickSize - 20) or
		UDim2.new(0, self.thumbstickSize/2, 1, -self.thumbstickSize * 1.75)
		
	self.thumbstickFrame = Instance.new("Frame")
	self.thumbstickFrame.Name = "ThumbstickFrame"
	self.thumbstickFrame.Active = true
	self.thumbstickFrame.Visible = false
	self.thumbstickFrame.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
	self.thumbstickFrame.Position = self.screenPos
	self.thumbstickFrame.BackgroundTransparency = 1
	
	local outerImage = Instance.new("ImageLabel")
	outerImage.Name = "OuterImage"
	outerImage.Image = TOUCH_CONTROL_SHEET
	outerImage.ImageRectOffset = Vector2.new()
	outerImage.ImageRectSize = Vector2.new(220, 220)
	outerImage.BackgroundTransparency = 1
	outerImage.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
	outerImage.Position = UDim2.new(0, 0, 0, 0)
	outerImage.Parent = self.thumbstickFrame
	
	self.stickImage = Instance.new("ImageLabel")
	self.stickImage.Name = "StickImage"
	self.stickImage.Image = TOUCH_CONTROL_SHEET
	self.stickImage.ImageRectOffset = Vector2.new(220, 0)
	self.stickImage.ImageRectSize = Vector2.new(111, 111)
	self.stickImage.BackgroundTransparency = 1
	self.stickImage.Size = UDim2.new(0, self.thumbstickSize/2, 0, self.thumbstickSize/2)
	self.stickImage.Position = UDim2.new(0, self.thumbstickSize/2 - self.thumbstickSize/4, 0, self.thumbstickSize/2 - self.thumbstickSize/4)
	self.stickImage.ZIndex = 2
	self.stickImage.Parent = self.thumbstickFrame
	
	local centerPosition = nil
	local deadZone = 0.05
	
	local function DoMove(direction: Vector2)
		
		local currentMoveVector = direction / (self.thumbstickSize/2)
		
		-- Scaled Radial Dead Zone
		local inputAxisMagnitude = currentMoveVector.magnitude
		if inputAxisMagnitude < deadZone then
			currentMoveVector = Vector3.new()
		else
			currentMoveVector = currentMoveVector.unit * ((inputAxisMagnitude - deadZone) / (1 - deadZone))
			-- NOTE: Making currentMoveVector a unit vector will cause the player to instantly go max speed
			-- must check for zero length vector is using unit
			currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
		end
		
		self.moveVector = currentMoveVector
	end
	
	local function MoveStick(pos: Vector3)
		local relativePosition = Vector2.new(pos.x - centerPosition.x, pos.y - centerPosition.y)
		local length = relativePosition.magnitude
		local maxLength = self.thumbstickFrame.AbsoluteSize.x/2
		if self.isFollowStick and length > maxLength then
			local offset = relativePosition.unit * maxLength
			self.thumbstickFrame.Position = UDim2.new(
				0, pos.x - self.thumbstickFrame.AbsoluteSize.x/2 - offset.x,
				0, pos.y - self.thumbstickFrame.AbsoluteSize.y/2 - offset.y)
		else
			length = math.min(length, maxLength)
			relativePosition = relativePosition.unit * length
		end
		self.stickImage.Position = UDim2.new(0, relativePosition.x + self.stickImage.AbsoluteSize.x/2, 0, relativePosition.y + self.stickImage.AbsoluteSize.y/2)
	end
	
	-- input connections
	self.thumbstickFrame.InputBegan:Connect(function(inputObject: InputObject)
		--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
		--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
		if self.moveTouchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
			or inputObject.UserInputState ~= Enum.UserInputState.Begin then
			return
		end
		
		self.moveTouchObject = inputObject
		self.thumbstickFrame.Position = UDim2.new(0, inputObject.Position.x - self.thumbstickFrame.Size.X.Offset/2, 0, inputObject.Position.y - self.thumbstickFrame.Size.Y.Offset/2)
		centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
			self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
		local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
	end)
	
	self.onTouchMovedConn = UserInputService.TouchMoved:Connect(function(inputObject: InputObject, isProcessed: boolean)
		if inputObject == self.moveTouchObject then
			centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
				self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
			local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
			DoMove(direction)
			MoveStick(inputObject.Position)
		end
	end)
	
	self.onTouchEndedConn = UserInputService.TouchEnded:Connect(function(inputObject, isProcessed)
		if inputObject == self.moveTouchObject then
			self:OnInputEnded()
		end
	end)
	
	GuiService.MenuOpened:Connect(function()
		if self.moveTouchObject then
			self:OnInputEnded()
		end
	end)	
	
	self.thumbstickFrame.Parent = parentFrame
end
return TouchThumbstick]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXfa05f658487445f5a5bdfd70250ee201">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">VehicleController</string>
							<string name="ScriptGuid">{7bc9ed9d-029a-415f-8ffe-13b0d23b4816}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	// FileName: VehicleControl
	// Version 1.0
	// Written by: jmargh
	// Description: Implements in-game vehicle controls for all input devices

	// NOTE: This works for basic vehicles (single vehicle seat). If you use custom VehicleSeat code,
	// multiple VehicleSeats or your own implementation of a VehicleSeat this will not work.
--]]
local ContextActionService = game:GetService("ContextActionService")

--[[ Constants ]]--
-- Set this to true if you want to instead use the triggers for the throttle
local useTriggersForThrottle = true
-- Also set this to true if you want the thumbstick to not affect throttle, only triggers when a gamepad is conected
local onlyTriggersForThrottle = false
local ZERO_VECTOR3 = Vector3.new(0,0,0)

local AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE = 35


-- Note that VehicleController does not derive from BaseCharacterController, it is a special case
local VehicleController = {}
VehicleController.__index = VehicleController

function VehicleController.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable({}, VehicleController)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.enabled = false
	self.vehicleSeat = nil
	self.throttle = 0
	self.steer = 0

	self.acceleration = 0
	self.decceleration = 0
	self.turningRight = 0
	self.turningLeft = 0

	self.vehicleMoveVector = ZERO_VECTOR3

	self.autoPilot = {}
	self.autoPilot.MaxSpeed = 0
	self.autoPilot.MaxSteeringAngle = 0

	return self
end

function VehicleController:BindContextActions()
	if useTriggersForThrottle then
		ContextActionService:BindActionAtPriority("throttleAccel", (function(actionName, inputState, inputObject)
			self:OnThrottleAccel(actionName, inputState, inputObject)
			return Enum.ContextActionResult.Pass
		end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonR2)
		ContextActionService:BindActionAtPriority("throttleDeccel", (function(actionName, inputState, inputObject)
			self:OnThrottleDeccel(actionName, inputState, inputObject)
			return Enum.ContextActionResult.Pass
		end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonL2)
	end
	ContextActionService:BindActionAtPriority("arrowSteerRight", (function(actionName, inputState, inputObject)
		self:OnSteerRight(actionName, inputState, inputObject)
		return Enum.ContextActionResult.Pass
	end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Right)
	ContextActionService:BindActionAtPriority("arrowSteerLeft", (function(actionName, inputState, inputObject)
		self:OnSteerLeft(actionName, inputState, inputObject)
		return Enum.ContextActionResult.Pass
	end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Left)
end

function VehicleController:Enable(enable: boolean, vehicleSeat: VehicleSeat)
	if enable == self.enabled and vehicleSeat == self.vehicleSeat then
		return
	end

	self.enabled = enable
	self.vehicleMoveVector = ZERO_VECTOR3

	if enable then
		if vehicleSeat then
			self.vehicleSeat = vehicleSeat

			self:SetupAutoPilot()
			self:BindContextActions()
		end
	else
		if useTriggersForThrottle then
			ContextActionService:UnbindAction("throttleAccel")
			ContextActionService:UnbindAction("throttleDeccel")
		end
		ContextActionService:UnbindAction("arrowSteerRight")
		ContextActionService:UnbindAction("arrowSteerLeft")
		self.vehicleSeat = nil
	end
end

function VehicleController:OnThrottleAccel(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
		self.acceleration = 0
	else
		self.acceleration = -1
	end
	self.throttle = self.acceleration + self.decceleration
end

function VehicleController:OnThrottleDeccel(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
		self.decceleration = 0
	else
		self.decceleration = 1
	end
	self.throttle = self.acceleration + self.decceleration
end

function VehicleController:OnSteerRight(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
		self.turningRight = 0
	else
		self.turningRight = 1
	end
	self.steer = self.turningRight + self.turningLeft
end

function VehicleController:OnSteerLeft(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
		self.turningLeft = 0
	else
		self.turningLeft = -1
	end
	self.steer = self.turningRight + self.turningLeft
end

-- Call this from a function bound to Renderstep with Input Priority
function VehicleController:Update(moveVector: Vector3, cameraRelative: boolean, usingGamepad: boolean)
	if self.vehicleSeat then
		if cameraRelative then
			-- This is the default steering mode
			moveVector = moveVector + Vector3.new(self.steer, 0, self.throttle)
			if usingGamepad and onlyTriggersForThrottle and useTriggersForThrottle then
				self.vehicleSeat.ThrottleFloat = -self.throttle
			else
				self.vehicleSeat.ThrottleFloat = -moveVector.Z
			end
			self.vehicleSeat.SteerFloat = moveVector.X

			return moveVector, true
		else
			-- This is the path following mode
			local localMoveVector = self.vehicleSeat.Occupant.RootPart.CFrame:VectorToObjectSpace(moveVector)

			self.vehicleSeat.ThrottleFloat = self:ComputeThrottle(localMoveVector)
			self.vehicleSeat.SteerFloat = self:ComputeSteer(localMoveVector)

			return ZERO_VECTOR3, true
		end
	end
	return moveVector, false
end

function VehicleController:ComputeThrottle(localMoveVector)
	if localMoveVector ~= ZERO_VECTOR3 then
		local throttle = -localMoveVector.Z
		return throttle
	else
		return 0.0
	end
end

function VehicleController:ComputeSteer(localMoveVector)
	if localMoveVector ~= ZERO_VECTOR3 then
		local steerAngle = -math.atan2(-localMoveVector.x, -localMoveVector.z) * (180 / math.pi)
		return steerAngle / self.autoPilot.MaxSteeringAngle
	else
		return 0.0
	end
end

function VehicleController:SetupAutoPilot()
	-- Setup default
	self.autoPilot.MaxSpeed = self.vehicleSeat.MaxSpeed
	self.autoPilot.MaxSteeringAngle = AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE

	-- VehicleSeat should have a MaxSteeringAngle as well.
	-- Or we could look for a child "AutoPilotConfigModule" to find these values
	-- Or allow developer to set them through the API as like the CLickToMove customization API
end

return VehicleController
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXd8421cf971b14c7c84f8634780d9edfc">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ClickToMoveDisplay</string>
							<string name="ScriptGuid">{80a7cc93-84e0-4f61-a548-1c0982ca3d23}</string>
							<ProtectedString name="Source"><![CDATA[local ClickToMoveDisplay = {}

local FAILURE_ANIMATION_ID = "rbxassetid://2874840706"

local TrailDotIcon = "rbxasset://textures/ui/traildot.png"
local EndWaypointIcon = "rbxasset://textures/ui/waypoint.png"

local WaypointsAlwaysOnTop = false

local WAYPOINT_INCLUDE_FACTOR = 2
local LAST_DOT_DISTANCE = 3

local WAYPOINT_BILLBOARD_SIZE = UDim2.new(0, 1.68 * 25, 0, 2 * 25)

local ENDWAYPOINT_SIZE_OFFSET_MIN = Vector2.new(0, 0.5)
local ENDWAYPOINT_SIZE_OFFSET_MAX = Vector2.new(0, 1)

local FAIL_WAYPOINT_SIZE_OFFSET_CENTER = Vector2.new(0, 0.5)
local FAIL_WAYPOINT_SIZE_OFFSET_LEFT = Vector2.new(0.1, 0.5)
local FAIL_WAYPOINT_SIZE_OFFSET_RIGHT = Vector2.new(-0.1, 0.5)

local FAILURE_TWEEN_LENGTH = 0.125
local FAILURE_TWEEN_COUNT = 4

local TWEEN_WAYPOINT_THRESHOLD = 5

local TRAIL_DOT_PARENT_NAME = "ClickToMoveDisplay"

local TrailDotSize = Vector2.new(1.5, 1.5)

local TRAIL_DOT_MIN_SCALE = 1
local TRAIL_DOT_MIN_DISTANCE = 10
local TRAIL_DOT_MAX_SCALE = 2.5
local TRAIL_DOT_MAX_DISTANCE = 100

local PlayersService = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = PlayersService.LocalPlayer

local function CreateWaypointTemplates()
	local TrailDotTemplate = Instance.new("Part")
	TrailDotTemplate.Size = Vector3.new(1, 1, 1)
	TrailDotTemplate.Anchored = true
	TrailDotTemplate.CanCollide = false
	TrailDotTemplate.Name = "TrailDot"
	TrailDotTemplate.Transparency = 1
	local TrailDotImage = Instance.new("ImageHandleAdornment")
	TrailDotImage.Name = "TrailDotImage"
	TrailDotImage.Size = TrailDotSize
	TrailDotImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
	TrailDotImage.AlwaysOnTop = WaypointsAlwaysOnTop
	TrailDotImage.Image = TrailDotIcon
	TrailDotImage.Adornee = TrailDotTemplate
	TrailDotImage.Parent = TrailDotTemplate

	local EndWaypointTemplate = Instance.new("Part")
	EndWaypointTemplate.Size = Vector3.new(2, 2, 2)
	EndWaypointTemplate.Anchored = true
	EndWaypointTemplate.CanCollide = false
	EndWaypointTemplate.Name = "EndWaypoint"
	EndWaypointTemplate.Transparency = 1
	local EndWaypointImage = Instance.new("ImageHandleAdornment")
	EndWaypointImage.Name = "TrailDotImage"
	EndWaypointImage.Size = TrailDotSize
	EndWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
	EndWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
	EndWaypointImage.Image = TrailDotIcon
	EndWaypointImage.Adornee = EndWaypointTemplate
	EndWaypointImage.Parent = EndWaypointTemplate
	local EndWaypointBillboard = Instance.new("BillboardGui")
	EndWaypointBillboard.Name = "EndWaypointBillboard"
	EndWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
	EndWaypointBillboard.LightInfluence = 0
	EndWaypointBillboard.SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MIN
	EndWaypointBillboard.AlwaysOnTop = true
	EndWaypointBillboard.Adornee = EndWaypointTemplate
	EndWaypointBillboard.Parent = EndWaypointTemplate
	local EndWaypointImageLabel = Instance.new("ImageLabel")
	EndWaypointImageLabel.Image = EndWaypointIcon
	EndWaypointImageLabel.BackgroundTransparency = 1
	EndWaypointImageLabel.Size = UDim2.new(1, 0, 1, 0)
	EndWaypointImageLabel.Parent = EndWaypointBillboard


	local FailureWaypointTemplate = Instance.new("Part")
	FailureWaypointTemplate.Size = Vector3.new(2, 2, 2)
	FailureWaypointTemplate.Anchored = true
	FailureWaypointTemplate.CanCollide = false
	FailureWaypointTemplate.Name = "FailureWaypoint"
	FailureWaypointTemplate.Transparency = 1
	local FailureWaypointImage = Instance.new("ImageHandleAdornment")
	FailureWaypointImage.Name = "TrailDotImage"
	FailureWaypointImage.Size = TrailDotSize
	FailureWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
	FailureWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
	FailureWaypointImage.Image = TrailDotIcon
	FailureWaypointImage.Adornee = FailureWaypointTemplate
	FailureWaypointImage.Parent = FailureWaypointTemplate
	local FailureWaypointBillboard = Instance.new("BillboardGui")
	FailureWaypointBillboard.Name = "FailureWaypointBillboard"
	FailureWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
	FailureWaypointBillboard.LightInfluence = 0
	FailureWaypointBillboard.SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER
	FailureWaypointBillboard.AlwaysOnTop = true
	FailureWaypointBillboard.Adornee = FailureWaypointTemplate
	FailureWaypointBillboard.Parent = FailureWaypointTemplate
	local FailureWaypointFrame = Instance.new("Frame")
	FailureWaypointFrame.BackgroundTransparency = 1
	FailureWaypointFrame.Size = UDim2.new(0, 0, 0, 0)
	FailureWaypointFrame.Position = UDim2.new(0.5, 0, 1, 0)
	FailureWaypointFrame.Parent = FailureWaypointBillboard
	local FailureWaypointImageLabel = Instance.new("ImageLabel")
	FailureWaypointImageLabel.Image = EndWaypointIcon
	FailureWaypointImageLabel.BackgroundTransparency = 1
	FailureWaypointImageLabel.Position = UDim2.new(
		0, -WAYPOINT_BILLBOARD_SIZE.X.Offset/2, 0, -WAYPOINT_BILLBOARD_SIZE.Y.Offset
	)
	FailureWaypointImageLabel.Size = WAYPOINT_BILLBOARD_SIZE
	FailureWaypointImageLabel.Parent = FailureWaypointFrame

	return TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate
end

local TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()

local function getTrailDotParent()
	local camera = Workspace.CurrentCamera
	local trailParent = camera:FindFirstChild(TRAIL_DOT_PARENT_NAME)
	if not trailParent then
		trailParent = Instance.new("Model")
		trailParent.Name = TRAIL_DOT_PARENT_NAME
		trailParent.Parent = camera
	end
	return trailParent
end

local function placePathWaypoint(waypointModel, position: Vector3)
	local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
	local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
		ray,
		{ Workspace.CurrentCamera, LocalPlayer.Character }
	)
	if hitPart then
		waypointModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
		waypointModel.Parent = getTrailDotParent()
	end
end

local TrailDot = {}
TrailDot.__index = TrailDot

function TrailDot:Destroy()
	self.DisplayModel:Destroy()
end

function TrailDot:NewDisplayModel(position)
	local newDisplayModel: Part = TrailDotTemplate:Clone()
	placePathWaypoint(newDisplayModel, position)
	return newDisplayModel
end

function TrailDot.new(position, closestWaypoint)
	local self = setmetatable({}, TrailDot)

	self.DisplayModel = self:NewDisplayModel(position)
	self.ClosestWayPoint = closestWaypoint

	return self
end

local EndWaypoint = {}
EndWaypoint.__index = EndWaypoint

function EndWaypoint:Destroy()
	self.Destroyed = true
	self.Tween:Cancel()
	self.DisplayModel:Destroy()
end

function EndWaypoint:NewDisplayModel(position)
	local newDisplayModel: Part = EndWaypointTemplate:Clone()
	placePathWaypoint(newDisplayModel, position)
	return newDisplayModel
end

function EndWaypoint:CreateTween()
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, -1, true)
	local tween = TweenService:Create(
		self.DisplayModel.EndWaypointBillboard,
		tweenInfo,
		{ SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MAX }
	)
	tween:Play()
	return tween
end

function EndWaypoint:TweenInFrom(originalPosition: Vector3)
	local currentPositon: Vector3 = self.DisplayModel.Position
	local studsOffset = originalPosition - currentPositon
	self.DisplayModel.EndWaypointBillboard.StudsOffset = Vector3.new(0, studsOffset.Y, 0)
	local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	local tween = TweenService:Create(
		self.DisplayModel.EndWaypointBillboard,
		tweenInfo,
		{ StudsOffset = Vector3.new(0, 0, 0) }
	)
	tween:Play()
	return tween
end

function EndWaypoint.new(position: Vector3, closestWaypoint: number?, originalPosition: Vector3?)
	local self = setmetatable({}, EndWaypoint)

	self.DisplayModel = self:NewDisplayModel(position)
	self.Destroyed = false
	if originalPosition and (originalPosition - position).magnitude > TWEEN_WAYPOINT_THRESHOLD then
		self.Tween = self:TweenInFrom(originalPosition)
		coroutine.wrap(function()
			self.Tween.Completed:Wait()
			if not self.Destroyed then
				self.Tween = self:CreateTween()
			end
		end)()
	else
		self.Tween = self:CreateTween()
	end
	self.ClosestWayPoint = closestWaypoint

	return self
end

local FailureWaypoint = {}
FailureWaypoint.__index = FailureWaypoint

function FailureWaypoint:Hide()
	self.DisplayModel.Parent = nil
end

function FailureWaypoint:Destroy()
	self.DisplayModel:Destroy()
end

function FailureWaypoint:NewDisplayModel(position)
	local newDisplayModel: Part = FailureWaypointTemplate:Clone()
	placePathWaypoint(newDisplayModel, position)
	local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
	local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
		ray, { Workspace.CurrentCamera, LocalPlayer.Character }
	)
	if hitPart then
		newDisplayModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
		newDisplayModel.Parent = getTrailDotParent()
	end
	return newDisplayModel
end

function FailureWaypoint:RunFailureTween()
	wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore starting tweening
	-- Tween out from center
	local tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	local tweenLeft = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
		{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_LEFT })
	tweenLeft:Play()

	local tweenLeftRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
		{ Rotation = 10 })
	tweenLeftRoation:Play()

	tweenLeft.Completed:wait()

	-- Tween back and forth
	tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
		FAILURE_TWEEN_COUNT - 1, true)
	local tweenSideToSide = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
		{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_RIGHT})
	tweenSideToSide:Play()

	-- Tween flash dark and roate left and right
	tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
		FAILURE_TWEEN_COUNT - 1, true)
	local tweenFlash = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame.ImageLabel, tweenInfo,
		{ ImageColor3 = Color3.new(0.75, 0.75, 0.75)})
	tweenFlash:Play()

	local tweenRotate = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
		{ Rotation = -10 })
	tweenRotate:Play()

	tweenSideToSide.Completed:wait()

	-- Tween back to center
	tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
	local tweenCenter = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
		{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER })
	tweenCenter:Play()

	local tweenRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
		{ Rotation = 0 })
	tweenRoation:Play()

	tweenCenter.Completed:wait()

	wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore removing
end

function FailureWaypoint.new(position)
	local self = setmetatable({}, FailureWaypoint)

	self.DisplayModel = self:NewDisplayModel(position)

	return self
end

local failureAnimation = Instance.new("Animation")
failureAnimation.AnimationId = FAILURE_ANIMATION_ID

local lastHumanoid = nil
local lastFailureAnimationTrack: AnimationTrack? = nil

local function getFailureAnimationTrack(myHumanoid)
	if myHumanoid == lastHumanoid then
		return lastFailureAnimationTrack
	end
	lastFailureAnimationTrack = myHumanoid:LoadAnimation(failureAnimation)
	lastFailureAnimationTrack.Priority = Enum.AnimationPriority.Action
	lastFailureAnimationTrack.Looped = false
	return lastFailureAnimationTrack
end

local function findPlayerHumanoid()
	local character = LocalPlayer.Character
	if character then
		return character:FindFirstChildOfClass("Humanoid")
	end
end

local function createTrailDots(wayPoints: {PathWaypoint}, originalEndWaypoint: Vector3)
	local newTrailDots = {}
	local count = 1
	for i = 1, #wayPoints - 1 do
		local closeToEnd = (wayPoints[i].Position - wayPoints[#wayPoints].Position).magnitude < LAST_DOT_DISTANCE
		local includeWaypoint = i % WAYPOINT_INCLUDE_FACTOR == 0 and not closeToEnd
		if includeWaypoint then
			local trailDot = TrailDot.new(wayPoints[i].Position, i)
			newTrailDots[count] = trailDot
			count = count + 1
		end
	end

	local newEndWaypoint = EndWaypoint.new(wayPoints[#wayPoints].Position, #wayPoints, originalEndWaypoint)
	table.insert(newTrailDots, newEndWaypoint)

	local reversedTrailDots = {}
	count = 1
	for i = #newTrailDots, 1, -1 do
		reversedTrailDots[count] = newTrailDots[i]
		count = count + 1
	end
	return reversedTrailDots
end

local function getTrailDotScale(distanceToCamera: number, defaultSize: Vector2)
	local rangeLength = TRAIL_DOT_MAX_DISTANCE - TRAIL_DOT_MIN_DISTANCE
	local inRangePoint = math.clamp(distanceToCamera - TRAIL_DOT_MIN_DISTANCE, 0, rangeLength)/rangeLength
	local scale = TRAIL_DOT_MIN_SCALE + (TRAIL_DOT_MAX_SCALE - TRAIL_DOT_MIN_SCALE)*inRangePoint
	return defaultSize * scale
end

local createPathCount = 0
-- originalEndWaypoint is optional, causes the waypoint to tween from that position.
function ClickToMoveDisplay.CreatePathDisplay(wayPoints, originalEndWaypoint)
	createPathCount = createPathCount + 1
	local trailDots = createTrailDots(wayPoints, originalEndWaypoint)

	local function removePathBeforePoint(wayPointNumber)
		-- kill all trailDots before and at wayPointNumber
		for i = #trailDots, 1, -1 do
			local trailDot = trailDots[i]
			if trailDot.ClosestWayPoint <= wayPointNumber then
				trailDot:Destroy()
				trailDots[i] = nil
			else
				break
			end
		end
	end

	local reiszeTrailDotsUpdateName = "ClickToMoveResizeTrail" ..createPathCount
	local function resizeTrailDots()
		if #trailDots == 0 then
			RunService:UnbindFromRenderStep(reiszeTrailDotsUpdateName)
			return
		end
		local cameraPos = Workspace.CurrentCamera.CFrame.p
		for i = 1, #trailDots do
			local trailDotImage: ImageHandleAdornment = trailDots[i].DisplayModel:FindFirstChild("TrailDotImage")
			if trailDotImage then
				local distanceToCamera = (trailDots[i].DisplayModel.Position - cameraPos).magnitude
				trailDotImage.Size = getTrailDotScale(distanceToCamera, TrailDotSize)
			end
		end
	end
	RunService:BindToRenderStep(reiszeTrailDotsUpdateName, Enum.RenderPriority.Camera.Value - 1, resizeTrailDots)

	local function removePath()
		removePathBeforePoint(#wayPoints)
	end

	return removePath, removePathBeforePoint
end

local lastFailureWaypoint = nil
function ClickToMoveDisplay.DisplayFailureWaypoint(position)
	if lastFailureWaypoint then
		lastFailureWaypoint:Hide()
	end
	local failureWaypoint = FailureWaypoint.new(position)
	lastFailureWaypoint = failureWaypoint
	coroutine.wrap(function()
		failureWaypoint:RunFailureTween()
		failureWaypoint:Destroy()
		failureWaypoint = nil
	end)()
end

function ClickToMoveDisplay.CreateEndWaypoint(position)
	return EndWaypoint.new(position)
end

function ClickToMoveDisplay.PlayFailureAnimation()
	local myHumanoid = findPlayerHumanoid()
	if myHumanoid then
		local animationTrack = getFailureAnimationTrack(myHumanoid)
		animationTrack:Play()
	end
end

function ClickToMoveDisplay.CancelFailureAnimation()
	if lastFailureAnimationTrack ~= nil and lastFailureAnimationTrack.IsPlaying then
		lastFailureAnimationTrack:Stop()
	end
end

function ClickToMoveDisplay.SetWaypointTexture(texture)
	TrailDotIcon = texture
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetWaypointTexture()
	return TrailDotIcon
end

function ClickToMoveDisplay.SetWaypointRadius(radius)
	TrailDotSize = Vector2.new(radius, radius)
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetWaypointRadius()
	return TrailDotSize.X
end

function ClickToMoveDisplay.SetEndWaypointTexture(texture)
	EndWaypointIcon = texture
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetEndWaypointTexture()
	return EndWaypointIcon
end

function ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
	WaypointsAlwaysOnTop = alwaysOnTop
	TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
end

function ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
	return WaypointsAlwaysOnTop
end

return ClickToMoveDisplay
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX5ca63d0279874b56b7b1375d2170a57e">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PathDisplay</string>
							<string name="ScriptGuid">{e04ab76c-a80b-4b0c-9f13-90a1e4f24830}</string>
							<ProtectedString name="Source"><![CDATA[

local PathDisplay = {}
PathDisplay.spacing = 8
PathDisplay.image = "rbxasset://textures/Cursors/Gamepad/Pointer.png"
PathDisplay.imageSize = Vector2.new(2, 2)

local currentPoints = {}
local renderedPoints = {}

local pointModel = Instance.new("Model")
pointModel.Name = "PathDisplayPoints"

local adorneePart = Instance.new("Part")
adorneePart.Anchored = true
adorneePart.CanCollide = false
adorneePart.Transparency = 1
adorneePart.Name = "PathDisplayAdornee"
adorneePart.CFrame = CFrame.new(0, 0, 0)
adorneePart.Parent = pointModel

local pointPool = {}
local poolTop = 30
for i = 1, poolTop do
	local point = Instance.new("ImageHandleAdornment")
	point.Archivable = false
	point.Adornee = adorneePart
	point.Image = PathDisplay.image
	point.Size = PathDisplay.imageSize
	pointPool[i] = point
end

local function retrieveFromPool(): ImageHandleAdornment
	local point = pointPool[1]
	if not point then
		return
	end
	
	pointPool[1], pointPool[poolTop] = pointPool[poolTop], nil
	poolTop = poolTop - 1
	return point
end

local function returnToPool(point: ImageHandleAdornment)
	poolTop = poolTop + 1
	pointPool[poolTop] = point
end

local function renderPoint(point: Vector3, isLast): ImageHandleAdornment
	if poolTop == 0 then
		return
	end

	local rayDown = Ray.new(point + Vector3.new(0, 2, 0), Vector3.new(0, -8, 0))
	local hitPart, hitPoint, hitNormal = workspace:FindPartOnRayWithIgnoreList(rayDown, { game.Players.LocalPlayer.Character, workspace.CurrentCamera  }) 	
	if not hitPart then
		return
	end

	local pointCFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
	
	local point = retrieveFromPool()
	point.CFrame = pointCFrame
	point.Parent = pointModel
	return point
end

function PathDisplay.setCurrentPoints(points)
	if typeof(points) == 'table' then
		currentPoints = points
	else
		currentPoints = {}
	end
end

function PathDisplay.clearRenderedPath()
	for _, oldPoint in ipairs(renderedPoints) do
		oldPoint.Parent = nil
		returnToPool(oldPoint)
	end
	renderedPoints = {}
	pointModel.Parent = nil
end

function PathDisplay.renderPath()
	PathDisplay.clearRenderedPath()
	if not currentPoints or #currentPoints == 0 then
		return
	end

	local currentIdx = #currentPoints
	local lastPos = currentPoints[currentIdx]	
	local distanceBudget = 0
	
	renderedPoints[1] = renderPoint(lastPos, true)
	if not renderedPoints[1] then
		return
	end
	
	while true do
		local currentPoint = currentPoints[currentIdx]
		local nextPoint = currentPoints[currentIdx - 1]
		
		if currentIdx < 2 then
			break
		else
			
			local toNextPoint = nextPoint - currentPoint
			local distToNextPoint = toNextPoint.magnitude	
			
			if distanceBudget > distToNextPoint then
				distanceBudget = distanceBudget - distToNextPoint
				currentIdx = currentIdx - 1
			else
				local dirToNextPoint = toNextPoint.unit
				local pointPos = currentPoint + (dirToNextPoint * distanceBudget)
				local point = renderPoint(pointPos, false)
				
				if point then
					renderedPoints[#renderedPoints + 1] = point
				end
				
				distanceBudget = distanceBudget + PathDisplay.spacing
			end
		end
	end
	
	pointModel.Parent = workspace.CurrentCamera
end

return PathDisplay
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX31a0f69fda5343679207ca6a51b8211c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TouchJump</string>
							<string name="ScriptGuid">{1a463698-6e2b-45ac-a981-2496aa958e2a}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	// FileName: TouchJump
	// Version 1.0
	// Written by: jmargh
	// Description: Implements jump controls for touch devices. Use with Thumbstick and Thumbpad
--]]

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")

--[[ Constants ]]--
local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"

--[[ The Module ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local TouchJump = setmetatable({}, BaseCharacterController)
TouchJump.__index = TouchJump

function TouchJump.new()
	local self = setmetatable(BaseCharacterController.new(), TouchJump)

	self.parentUIFrame = nil
	self.jumpButton = nil
	self.characterAddedConn = nil
	self.humanoidStateEnabledChangedConn = nil
	self.humanoidJumpPowerConn = nil
	self.humanoidParentConn = nil
	self.externallyEnabled = false
	self.jumpPower = 0
	self.jumpStateEnabled = true
	self.isJumping = false
	self.humanoid = nil -- saved reference because property change connections are made using it

	return self
end

function TouchJump:EnableButton(enable)
	if enable then
		if not self.jumpButton then
			self:Create()
		end
		local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if humanoid and self.externallyEnabled then
			if self.externallyEnabled then
				if humanoid.JumpPower > 0 then
					self.jumpButton.Visible = true
				end
			end
		end
	else
		self.jumpButton.Visible = false
		self.isJumping = false
		self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
	end
end

function TouchJump:UpdateEnabled()
	if self.jumpPower > 0 and self.jumpStateEnabled then
		self:EnableButton(true)
	else
		self:EnableButton(false)
	end
end

function TouchJump:HumanoidChanged(prop)
	local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		if prop == "JumpPower" then
			self.jumpPower =  humanoid.JumpPower
			self:UpdateEnabled()
		elseif prop == "Parent" then
			if not humanoid.Parent then
				self.humanoidChangeConn:Disconnect()
			end
		end
	end
end

function TouchJump:HumanoidStateEnabledChanged(state, isEnabled)
	if state == Enum.HumanoidStateType.Jumping then
		self.jumpStateEnabled = isEnabled
		self:UpdateEnabled()
	end
end

function TouchJump:CharacterAdded(char)
	if self.humanoidChangeConn then
		self.humanoidChangeConn:Disconnect()
		self.humanoidChangeConn = nil
	end

	self.humanoid = char:FindFirstChildOfClass("Humanoid")
	while not self.humanoid do
		char.ChildAdded:wait()
		self.humanoid = char:FindFirstChildOfClass("Humanoid")
	end

	self.humanoidJumpPowerConn = self.humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
		self.jumpPower =  self.humanoid.JumpPower
		self:UpdateEnabled()
	end)

	self.humanoidParentConn = self.humanoid:GetPropertyChangedSignal("Parent"):Connect(function()
		if not self.humanoid.Parent then
			self.humanoidJumpPowerConn:Disconnect()
			self.humanoidJumpPowerConn = nil
			self.humanoidParentConn:Disconnect()
			self.humanoidParentConn = nil
		end
	end)

	self.humanoidStateEnabledChangedConn = self.humanoid.StateEnabledChanged:Connect(function(state, enabled)
		self:HumanoidStateEnabledChanged(state, enabled)
	end)

	self.jumpPower = self.humanoid.JumpPower
	self.jumpStateEnabled = self.humanoid:GetStateEnabled(Enum.HumanoidStateType.Jumping)
	self:UpdateEnabled()
end

function TouchJump:SetupCharacterAddedFunction()
	self.characterAddedConn = Players.LocalPlayer.CharacterAdded:Connect(function(char)
		self:CharacterAdded(char)
	end)
	if Players.LocalPlayer.Character then
		self:CharacterAdded(Players.LocalPlayer.Character)
	end
end

function TouchJump:Enable(enable, parentFrame)
	if parentFrame then
		self.parentUIFrame = parentFrame
	end
	self.externallyEnabled = enable
	self:EnableButton(enable)
end

function TouchJump:Create()
	if not self.parentUIFrame then
		return
	end

	if self.jumpButton then
		self.jumpButton:Destroy()
		self.jumpButton = nil
	end

	local minAxis = math.min(self.parentUIFrame.AbsoluteSize.x, self.parentUIFrame.AbsoluteSize.y)
	local isSmallScreen = minAxis <= 500
	local jumpButtonSize = isSmallScreen and 70 or 120

	self.jumpButton = Instance.new("ImageButton")
	self.jumpButton.Name = "JumpButton"
	self.jumpButton.Visible = false
	self.jumpButton.BackgroundTransparency = 1
	self.jumpButton.Image = TOUCH_CONTROL_SHEET
	self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
	self.jumpButton.ImageRectSize = Vector2.new(144, 144)
	self.jumpButton.Size = UDim2.new(0, jumpButtonSize, 0, jumpButtonSize)

    self.jumpButton.Position = isSmallScreen and UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize - 20) or
        UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize * 1.75)

	local touchObject: InputObject? = nil
	self.jumpButton.InputBegan:connect(function(inputObject)
		--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
		--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
		if touchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
			or inputObject.UserInputState ~= Enum.UserInputState.Begin then
			return
		end

		touchObject = inputObject
		self.jumpButton.ImageRectOffset = Vector2.new(146, 146)
		self.isJumping = true
	end)

	local OnInputEnded = function()
		touchObject = nil
		self.isJumping = false
		self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
	end

	self.jumpButton.InputEnded:connect(function(inputObject: InputObject)
		if inputObject == touchObject then
			OnInputEnded()
		end
	end)

	GuiService.MenuOpened:connect(function()
		if touchObject then
			OnInputEnded()
		end
	end)

	if not self.characterAddedConn then
		self:SetupCharacterAddedFunction()
	end

	self.jumpButton.Parent = self.parentUIFrame
end

return TouchJump
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXcb516c755e234fa8817a481cd406f4c1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">VRNavigation</string>
							<string name="ScriptGuid">{47e387ba-004a-4037-8f10-f9e41b9d95f0}</string>
							<ProtectedString name="Source"><![CDATA[--[[
		VRNavigation
--]]

local VRService = game:GetService("VRService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local ContextActionService = game:GetService("ContextActionService")
local StarterGui = game:GetService("StarterGui")

--local MasterControl = require(script.Parent)
local PathDisplay = nil
local LocalPlayer = Players.LocalPlayer

--[[ Constants ]]--
local RECALCULATE_PATH_THRESHOLD = 4
local NO_PATH_THRESHOLD = 12
local MAX_PATHING_DISTANCE = 200
local POINT_REACHED_THRESHOLD = 1
local OFFTRACK_TIME_THRESHOLD = 2
local THUMBSTICK_DEADZONE = 0.22

local ZERO_VECTOR3 = Vector3.new(0,0,0)
local XZ_VECTOR3 = Vector3.new(1,0,1)

--[[ Utility Functions ]]--
local function IsFinite(num: number)
	return num == num and num ~= 1/0 and num ~= -1/0
end

local function IsFiniteVector3(vec3)
	return IsFinite(vec3.x) and IsFinite(vec3.y) and IsFinite(vec3.z)
end

local movementUpdateEvent = Instance.new("BindableEvent")
movementUpdateEvent.Name = "MovementUpdate"
movementUpdateEvent.Parent = script

coroutine.wrap(function()
	local PathDisplayModule = script.Parent:WaitForChild("PathDisplay")
	if PathDisplayModule then
		PathDisplay = require(PathDisplayModule)
	end
end)()


--[[ The Class ]]--
local BaseCharacterController = require(script.Parent:WaitForChild("BaseCharacterController"))
local VRNavigation = setmetatable({}, BaseCharacterController)
VRNavigation.__index = VRNavigation

function VRNavigation.new(CONTROL_ACTION_PRIORITY)
	local self = setmetatable(BaseCharacterController.new(), VRNavigation)

	self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY

	self.navigationRequestedConn = nil
	self.heartbeatConn = nil

	self.currentDestination = nil
	self.currentPath = nil
	self.currentPoints = nil
	self.currentPointIdx = 0

	self.expectedTimeToNextPoint = 0
	self.timeReachedLastPoint = tick()
	self.moving = false

	self.isJumpBound = false
	self.moveLatch = false

	self.userCFrameEnabledConn = nil

	return self
end

function VRNavigation:SetLaserPointerMode(mode)
	pcall(function()
		StarterGui:SetCore("VRLaserPointerMode", mode)
	end)
end

function VRNavigation:GetLocalHumanoid()
	local character = LocalPlayer.Character
	if not character then
		return
	end

	for _, child in pairs(character:GetChildren()) do
		if child:IsA("Humanoid") then
			return child
		end
	end
	return nil
end

function VRNavigation:HasBothHandControllers()
	return VRService:GetUserCFrameEnabled(Enum.UserCFrame.RightHand) and VRService:GetUserCFrameEnabled(Enum.UserCFrame.LeftHand)
end

function VRNavigation:HasAnyHandControllers()
	return VRService:GetUserCFrameEnabled(Enum.UserCFrame.RightHand) or VRService:GetUserCFrameEnabled(Enum.UserCFrame.LeftHand)
end

function VRNavigation:IsMobileVR()
	return UserInputService.TouchEnabled
end

function VRNavigation:HasGamepad()
	return UserInputService.GamepadEnabled
end

function VRNavigation:ShouldUseNavigationLaser()
	--Places where we use the navigation laser:
	-- mobile VR with any number of hands tracked
	-- desktop VR with only one hand tracked
	-- desktop VR with no hands and no gamepad (i.e. with Oculus remote?)
	--using an Xbox controller with a desktop VR headset means no laser since the user has a thumbstick.
	--in the future, we should query thumbstick presence with a features API
	if self:IsMobileVR() then
		return true
	else
		if self:HasBothHandControllers() then
			return false
		end
		if not self:HasAnyHandControllers() then
			return not self:HasGamepad()
		end
		return true
	end
end



function VRNavigation:StartFollowingPath(newPath)
	currentPath = newPath
	currentPoints = currentPath:GetPointCoordinates()
	currentPointIdx = 1
	moving = true

	timeReachedLastPoint = tick()

	local humanoid = self:GetLocalHumanoid()
	if humanoid and humanoid.Torso and #currentPoints >= 1 then
		local dist = (currentPoints[1] - humanoid.Torso.Position).magnitude
		expectedTimeToNextPoint = dist / humanoid.WalkSpeed
	end

	movementUpdateEvent:Fire("targetPoint", self.currentDestination)
end

function VRNavigation:GoToPoint(point)
	currentPath = true
	currentPoints = { point }
	currentPointIdx = 1
	moving = true

	local humanoid = self:GetLocalHumanoid()
	local distance = (humanoid.Torso.Position - point).magnitude
	local estimatedTimeRemaining = distance / humanoid.WalkSpeed

	timeReachedLastPoint = tick()
	expectedTimeToNextPoint = estimatedTimeRemaining

	movementUpdateEvent:Fire("targetPoint", point)
end

function VRNavigation:StopFollowingPath()
	currentPath = nil
	currentPoints = nil
	currentPointIdx = 0
	moving = false
	self.moveVector = ZERO_VECTOR3
end

function VRNavigation:TryComputePath(startPos: Vector3, destination: Vector3)
	local numAttempts = 0
	local newPath = nil

	while not newPath and numAttempts < 5 do
		newPath = PathfindingService:ComputeSmoothPathAsync(startPos, destination, MAX_PATHING_DISTANCE)
		numAttempts = numAttempts + 1

		if newPath.Status == Enum.PathStatus.ClosestNoPath or newPath.Status == Enum.PathStatus.ClosestOutOfRange then
			newPath = nil
			break
		end

		if newPath and newPath.Status == Enum.PathStatus.FailStartNotEmpty then
			startPos = startPos + (destination - startPos).unit
			newPath = nil
		end

		if newPath and newPath.Status == Enum.PathStatus.FailFinishNotEmpty then
			destination = destination + Vector3.new(0, 1, 0)
			newPath = nil
		end
	end

	return newPath
end

function VRNavigation:OnNavigationRequest(destinationCFrame: CFrame, inputUserCFrame: CFrame)
	local destinationPosition = destinationCFrame.p
	local lastDestination = self.currentDestination

	if not IsFiniteVector3(destinationPosition) then
		return
	end

	self.currentDestination = destinationPosition

	local humanoid = self:GetLocalHumanoid()
	if not humanoid or not humanoid.Torso then
		return
	end

	local currentPosition = humanoid.Torso.Position
	local distanceToDestination = (self.currentDestination - currentPosition).magnitude

	if distanceToDestination < NO_PATH_THRESHOLD then
		self:GoToPoint(self.currentDestination)
		return
	end

	if not lastDestination or (self.currentDestination - lastDestination).magnitude > RECALCULATE_PATH_THRESHOLD then
		local newPath = self:TryComputePath(currentPosition, self.currentDestination)
		if newPath then
			self:StartFollowingPath(newPath)
			if PathDisplay then
				PathDisplay.setCurrentPoints(self.currentPoints)
				PathDisplay.renderPath()
			end
		else
			self:StopFollowingPath()
			if PathDisplay then
				PathDisplay.clearRenderedPath()
			end
		end
	else
		if moving then
			self.currentPoints[#currentPoints] = self.currentDestination
		else
			self:GoToPoint(self.currentDestination)
		end
	end
end

function VRNavigation:OnJumpAction(actionName, inputState, inputObj)
	if inputState == Enum.UserInputState.Begin then
		self.isJumping = true
	end
	return Enum.ContextActionResult.Sink
end
function VRNavigation:BindJumpAction(active)
	if active then
		if not self.isJumpBound then
			self.isJumpBound = true
			ContextActionService:BindActionAtPriority("VRJumpAction", (function() return self:OnJumpAction() end), false,
				self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA)
		end
	else
		if self.isJumpBound then
			self.isJumpBound = false
			ContextActionService:UnbindAction("VRJumpAction")
		end
	end
end

function VRNavigation:ControlCharacterGamepad(actionName, inputState, inputObject)
	if inputObject.KeyCode ~= Enum.KeyCode.Thumbstick1 then return end

	if inputState == Enum.UserInputState.Cancel then
		self.moveVector =  ZERO_VECTOR3
		return
	end

	if inputState ~= Enum.UserInputState.End then
		self:StopFollowingPath()
		if PathDisplay then
			PathDisplay.clearRenderedPath()
		end

		if self:ShouldUseNavigationLaser() then
			self:BindJumpAction(true)
			self:SetLaserPointerMode("Hidden")
		end

		if inputObject.Position.magnitude > THUMBSTICK_DEADZONE then
			self.moveVector = Vector3.new(inputObject.Position.X, 0, -inputObject.Position.Y)
			if self.moveVector.magnitude > 0 then
				self.moveVector = self.moveVector.unit * math.min(1, inputObject.Position.magnitude)
			end

			self.moveLatch = true
		end
	else
		self.moveVector =  ZERO_VECTOR3

		if self:ShouldUseNavigationLaser() then
			self:BindJumpAction(false)
			self:SetLaserPointerMode("Navigation")
		end

		if self.moveLatch then
			self.moveLatch = false
			movementUpdateEvent:Fire("offtrack")
		end
	end
	return Enum.ContextActionResult.Sink
end

function VRNavigation:OnHeartbeat(dt)
	local newMoveVector = self.moveVector
	local humanoid = self:GetLocalHumanoid()
	if not humanoid or not humanoid.Torso then
		return
	end

	if self.moving and self.currentPoints then
		local currentPosition = humanoid.Torso.Position
		local goalPosition = currentPoints[1]
		local vectorToGoal = (goalPosition - currentPosition) * XZ_VECTOR3
		local moveDist = vectorToGoal.magnitude
		local moveDir = vectorToGoal / moveDist

		if moveDist < POINT_REACHED_THRESHOLD then
			local estimatedTimeRemaining = 0
			local prevPoint = currentPoints[1]
			for i, point in pairs(currentPoints) do
				if i ~= 1 then
					local dist = (point - prevPoint).magnitude
					prevPoint = point
					estimatedTimeRemaining = estimatedTimeRemaining + (dist / humanoid.WalkSpeed)
				end
			end

			table.remove(currentPoints, 1)
			currentPointIdx = currentPointIdx + 1

			if #currentPoints == 0 then
				self:StopFollowingPath()
				if PathDisplay then
					PathDisplay.clearRenderedPath()
				end
				return
			else
				if PathDisplay then
					PathDisplay.setCurrentPoints(currentPoints)
					PathDisplay.renderPath()
				end

				local newGoal = currentPoints[1]
				local distanceToGoal = (newGoal - currentPosition).magnitude
				expectedTimeToNextPoint = distanceToGoal / humanoid.WalkSpeed
				timeReachedLastPoint = tick()
			end
		else
			local ignoreTable = {
				game.Players.LocalPlayer.Character,
				workspace.CurrentCamera
			}
			local obstructRay = Ray.new(currentPosition - Vector3.new(0, 1, 0), moveDir * 3)
			local obstructPart, obstructPoint, obstructNormal = workspace:FindPartOnRayWithIgnoreList(obstructRay, ignoreTable)

			if obstructPart then
				local heightOffset = Vector3.new(0, 100, 0)
				local jumpCheckRay = Ray.new(obstructPoint + moveDir * 0.5 + heightOffset, -heightOffset)
				local jumpCheckPart, jumpCheckPoint, jumpCheckNormal = workspace:FindPartOnRayWithIgnoreList(jumpCheckRay, ignoreTable)

				local heightDifference = jumpCheckPoint.Y - currentPosition.Y
				if heightDifference < 6 and heightDifference > -2 then
					humanoid.Jump = true
				end
			end

			local timeSinceLastPoint = tick() - timeReachedLastPoint
			if timeSinceLastPoint > expectedTimeToNextPoint + OFFTRACK_TIME_THRESHOLD then
				self:StopFollowingPath()
				if PathDisplay then
					PathDisplay.clearRenderedPath()
				end

				movementUpdateEvent:Fire("offtrack")
			end

			newMoveVector = self.moveVector:Lerp(moveDir, dt * 10)
		end
	end

	if IsFiniteVector3(newMoveVector) then
		self.moveVector = newMoveVector
	end
end


function VRNavigation:OnUserCFrameEnabled()
	if self:ShouldUseNavigationLaser() then
		self:BindJumpAction(false)
		self:SetLaserPointerMode("Navigation")
	else
		self:BindJumpAction(true)
		self:SetLaserPointerMode("Hidden")
	end
end

function VRNavigation:Enable(enable)

	self.moveVector = ZERO_VECTOR3
	self.isJumping = false

	if enable then
		self.navigationRequestedConn = VRService.NavigationRequested:Connect(function(destinationCFrame, inputUserCFrame) self:OnNavigationRequest(destinationCFrame, inputUserCFrame) end)
		self.heartbeatConn = RunService.Heartbeat:Connect(function(dt) self:OnHeartbeat(dt) end)

		ContextActionService:BindAction("MoveThumbstick", (function(actionName, inputState, inputObject) return self:ControlCharacterGamepad(actionName, inputState, inputObject) end),
			false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1)
		ContextActionService:BindActivate(Enum.UserInputType.Gamepad1, Enum.KeyCode.ButtonR2)

		self.userCFrameEnabledConn = VRService.UserCFrameEnabled:Connect(function() self:OnUserCFrameEnabled() end)
		self:OnUserCFrameEnabled()

		VRService:SetTouchpadMode(Enum.VRTouchpad.Left, Enum.VRTouchpadMode.VirtualThumbstick)
		VRService:SetTouchpadMode(Enum.VRTouchpad.Right, Enum.VRTouchpadMode.ABXY)

		self.enabled = true
	else
		-- Disable
		self:StopFollowingPath()

		ContextActionService:UnbindAction("MoveThumbstick")
		ContextActionService:UnbindActivate(Enum.UserInputType.Gamepad1, Enum.KeyCode.ButtonR2)

		self:BindJumpAction(false)
		self:SetLaserPointerMode("Disabled")

		if self.navigationRequestedConn then
			self.navigationRequestedConn:Disconnect()
			self.navigationRequestedConn = nil
		end
		if self.heartbeatConn then
			self.heartbeatConn:Disconnect()
			self.heartbeatConn = nil
		end
		if self.userCFrameEnabledConn then
			self.userCFrameEnabledConn:Disconnect()
			self.userCFrameEnabledConn = nil
		end
		self.enabled = false
	end
end

return VRNavigation
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX334d59f7e290478293f31ecf049f5a52">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">CameraModule</string>
						<string name="ScriptGuid">{18916e86-deb8-46a2-bcb0-0fe3e4afdf78}</string>
						<ProtectedString name="Source"><![CDATA[--[[
	CameraModule - This ModuleScript implements a singleton class to manage the
	selection, activation, and deactivation of the current camera controller,
	character occlusion controller, and transparency controller. This script binds to
	RenderStepped at Camera priority and calls the Update() methods on the active
	controller instances.

	The camera controller ModuleScripts implement classes which are instantiated and
	activated as-needed, they are no longer all instantiated up front as they were in
	the previous generation of PlayerScripts.

	2018 PlayerScripts Update - AllYourBlox
--]]

local CameraModule = {}
CameraModule.__index = CameraModule

local FFlagUserRemoveTheCameraApi do
	local success, result = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserRemoveTheCameraApi")
	end)
	FFlagUserRemoveTheCameraApi = success and result
end

-- NOTICE: Player property names do not all match their StarterPlayer equivalents,
-- with the differences noted in the comments on the right
local PLAYER_CAMERA_PROPERTIES =
{
	"CameraMinZoomDistance",
	"CameraMaxZoomDistance",
	"CameraMode",
	"DevCameraOcclusionMode",
	"DevComputerCameraMode",			-- Corresponds to StarterPlayer.DevComputerCameraMovementMode
	"DevTouchCameraMode",				-- Corresponds to StarterPlayer.DevTouchCameraMovementMode

	-- Character movement mode
	"DevComputerMovementMode",
	"DevTouchMovementMode",
	"DevEnableMouseLock",				-- Corresponds to StarterPlayer.EnableMouseLockOption
}

local USER_GAME_SETTINGS_PROPERTIES =
{
	"ComputerCameraMovementMode",
	"ComputerMovementMode",
	"ControlMode",
	"GamepadCameraSensitivity",
	"MouseSensitivity",
	"RotationType",
	"TouchCameraMovementMode",
	"TouchMovementMode",
}

--[[ Roblox Services ]]--
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local UserGameSettings = UserSettings():GetService("UserGameSettings")

-- Static camera utils
local CameraUtils = require(script:WaitForChild("CameraUtils"))
local CameraInput = require(script:WaitForChild("CameraInput"))

-- Load Roblox Camera Controller Modules
local ClassicCamera = require(script:WaitForChild("ClassicCamera"))
local OrbitalCamera = require(script:WaitForChild("OrbitalCamera"))
local LegacyCamera = require(script:WaitForChild("LegacyCamera"))
local VehicleCamera = require(script:WaitForChild("VehicleCamera"))

-- Load Roblox Occlusion Modules
local Invisicam = require(script:WaitForChild("Invisicam"))
local Poppercam = require(script:WaitForChild("Poppercam"))

-- Load the near-field character transparency controller and the mouse lock "shift lock" controller
local TransparencyController = require(script:WaitForChild("TransparencyController"))
local MouseLockController = require(script:WaitForChild("MouseLockController"))

-- Table of camera controllers that have been instantiated. They are instantiated as they are used.
local instantiatedCameraControllers = {}
local instantiatedOcclusionModules = {}

-- Management of which options appear on the Roblox User Settings screen
do
	local PlayerScripts = Players.LocalPlayer:WaitForChild("PlayerScripts")

	PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Default)
	PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Follow)
	PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Classic)

	PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Default)
	PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Follow)
	PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Classic)
	PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.CameraToggle)
end


function CameraModule.new()
	local self = setmetatable({},CameraModule)

	-- Current active controller instances
	self.activeCameraController = nil
	self.activeOcclusionModule = nil
	self.activeTransparencyController = nil
	self.activeMouseLockController = nil

	self.currentComputerCameraMovementMode = nil

	-- Connections to events
	self.cameraSubjectChangedConn = nil
	self.cameraTypeChangedConn = nil

	-- Adds CharacterAdded and CharacterRemoving event handlers for all current players
	for _,player in pairs(Players:GetPlayers()) do
		self:OnPlayerAdded(player)
	end

	-- Adds CharacterAdded and CharacterRemoving event handlers for all players who join in the future
	Players.PlayerAdded:Connect(function(player)
		self:OnPlayerAdded(player)
	end)

	self.activeTransparencyController = TransparencyController.new()
	self.activeTransparencyController:Enable(true)

	if not UserInputService.TouchEnabled then
		self.activeMouseLockController = MouseLockController.new()
		local toggleEvent = self.activeMouseLockController:GetBindableToggleEvent()
		if toggleEvent then
			toggleEvent:Connect(function()
				self:OnMouseLockToggled()
			end)
		end
	end

	self:ActivateCameraController(self:GetCameraControlChoice())
	self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)
	self:OnCurrentCameraChanged() -- Does initializations and makes first camera controller
	RunService:BindToRenderStep("cameraRenderUpdate", Enum.RenderPriority.Camera.Value, function(dt) self:Update(dt) end)

	-- Connect listeners to camera-related properties
	for _, propertyName in pairs(PLAYER_CAMERA_PROPERTIES) do
		Players.LocalPlayer:GetPropertyChangedSignal(propertyName):Connect(function()
			self:OnLocalPlayerCameraPropertyChanged(propertyName)
		end)
	end

	for _, propertyName in pairs(USER_GAME_SETTINGS_PROPERTIES) do
		UserGameSettings:GetPropertyChangedSignal(propertyName):Connect(function()
			self:OnUserGameSettingsPropertyChanged(propertyName)
		end)
	end
	game.Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		self:OnCurrentCameraChanged()
	end)

	self.lastInputType = UserInputService:GetLastInputType()
	UserInputService.LastInputTypeChanged:Connect(function(newLastInputType)
		self.lastInputType = newLastInputType
	end)

	return self
end

function CameraModule:GetCameraMovementModeFromSettings()
	local cameraMode = Players.LocalPlayer.CameraMode

	-- Lock First Person trumps all other settings and forces ClassicCamera
	if cameraMode == Enum.CameraMode.LockFirstPerson then
		return CameraUtils.ConvertCameraModeEnumToStandard(Enum.ComputerCameraMovementMode.Classic)
	end

	local devMode, userMode
	if UserInputService.TouchEnabled then
		devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevTouchCameraMode)
		userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.TouchCameraMovementMode)
	else
		devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevComputerCameraMode)
		userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
	end

	if devMode == Enum.DevComputerCameraMovementMode.UserChoice then
		-- Developer is allowing user choice, so user setting is respected
		return userMode
	end

	return devMode
end

function CameraModule:ActivateOcclusionModule(occlusionMode: Enum.DevCameraOcclusionMode)
	local newModuleCreator
	if occlusionMode == Enum.DevCameraOcclusionMode.Zoom then
		newModuleCreator = Poppercam
	elseif occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
		newModuleCreator = Invisicam
	else
		warn("CameraScript ActivateOcclusionModule called with unsupported mode")
		return
	end

	self.occlusionMode = occlusionMode

	-- First check to see if there is actually a change. If the module being requested is already
	-- the currently-active solution then just make sure it's enabled and exit early
	if self.activeOcclusionModule and self.activeOcclusionModule:GetOcclusionMode() == occlusionMode then
		if not self.activeOcclusionModule:GetEnabled() then
			self.activeOcclusionModule:Enable(true)
		end
		return
	end

	-- Save a reference to the current active module (may be nil) so that we can disable it if
	-- we are successful in activating its replacement
	local prevOcclusionModule = self.activeOcclusionModule

	-- If there is no active module, see if the one we need has already been instantiated
	self.activeOcclusionModule = instantiatedOcclusionModules[newModuleCreator]

	-- If the module was not already instantiated and selected above, instantiate it
	if not self.activeOcclusionModule then
		self.activeOcclusionModule = newModuleCreator.new()
		if self.activeOcclusionModule then
			instantiatedOcclusionModules[newModuleCreator] = self.activeOcclusionModule
		end
	end

	-- If we were successful in either selecting or instantiating the module,
	-- enable it if it's not already the currently-active enabled module
	if self.activeOcclusionModule then
		local newModuleOcclusionMode = self.activeOcclusionModule:GetOcclusionMode()
		-- Sanity check that the module we selected or instantiated actually supports the desired occlusionMode
		if newModuleOcclusionMode ~= occlusionMode then
			warn("CameraScript ActivateOcclusionModule mismatch: ",self.activeOcclusionModule:GetOcclusionMode(),"~=",occlusionMode)
		end

		-- Deactivate current module if there is one
		if prevOcclusionModule then
			-- Sanity check that current module is not being replaced by itself (that should have been handled above)
			if prevOcclusionModule ~= self.activeOcclusionModule then
				prevOcclusionModule:Enable(false)
			else
				warn("CameraScript ActivateOcclusionModule failure to detect already running correct module")
			end
		end

		-- Occlusion modules need to be initialized with information about characters and cameraSubject
		-- Invisicam needs the LocalPlayer's character
		-- Poppercam needs all player characters and the camera subject
		if occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
			-- Optimization to only send Invisicam what we know it needs
			if Players.LocalPlayer.Character then
				self.activeOcclusionModule:CharacterAdded(Players.LocalPlayer.Character, Players.LocalPlayer )
			end
		else
			-- When Poppercam is enabled, we send it all existing player characters for its raycast ignore list
			for _, player in pairs(Players:GetPlayers()) do
				if player and player.Character then
					self.activeOcclusionModule:CharacterAdded(player.Character, player)
				end
			end
			self.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject)
		end

		-- Activate new choice
		self.activeOcclusionModule:Enable(true)
	end
end

function CameraModule:ShouldUseVehicleCamera()
	local camera = workspace.CurrentCamera
	if not camera then
		return false
	end
	
	local cameraType = camera.CameraType
	local cameraSubject = camera.CameraSubject
	
	local isEligibleType = cameraType == Enum.CameraType.Custom or cameraType == Enum.CameraType.Follow
	local isEligibleSubject = cameraSubject and cameraSubject:IsA("VehicleSeat") or false
	local isEligibleOcclusionMode = self.occlusionMode ~= Enum.DevCameraOcclusionMode.Invisicam

	return isEligibleSubject and isEligibleType and isEligibleOcclusionMode
end

-- When supplied, legacyCameraType is used and cameraMovementMode is ignored (should be nil anyways)
-- Next, if userCameraCreator is passed in, that is used as the cameraCreator
function CameraModule:ActivateCameraController(cameraMovementMode, legacyCameraType: Enum.CameraType?)
	local newCameraCreator = nil

	if legacyCameraType~=nil then
		--[[
			This function has been passed a CameraType enum value. Some of these map to the use of
			the LegacyCamera module, the value "Custom" will be translated to a movementMode enum
			value based on Dev and User settings, and "Scriptable" will disable the camera controller.
		--]]

		if legacyCameraType == Enum.CameraType.Scriptable then
			if self.activeCameraController then
				self.activeCameraController:Enable(false)
				self.activeCameraController = nil
				return
			end
		elseif legacyCameraType == Enum.CameraType.Custom then
			cameraMovementMode = self:GetCameraMovementModeFromSettings()

		elseif legacyCameraType == Enum.CameraType.Track then
			-- Note: The TrackCamera module was basically an older, less fully-featured
			-- version of ClassicCamera, no longer actively maintained, but it is re-implemented in
			-- case a game was dependent on its lack of ClassicCamera's extra functionality.
			cameraMovementMode = Enum.ComputerCameraMovementMode.Classic

		elseif legacyCameraType == Enum.CameraType.Follow then
			cameraMovementMode = Enum.ComputerCameraMovementMode.Follow

		elseif legacyCameraType == Enum.CameraType.Orbital then
			cameraMovementMode = Enum.ComputerCameraMovementMode.Orbital

		elseif legacyCameraType == Enum.CameraType.Attach or
			   legacyCameraType == Enum.CameraType.Watch or
			   legacyCameraType == Enum.CameraType.Fixed then
			newCameraCreator = LegacyCamera
		else
			warn("CameraScript encountered an unhandled Camera.CameraType value: ",legacyCameraType)
		end
	end

	if not newCameraCreator then
		if cameraMovementMode == Enum.ComputerCameraMovementMode.Classic or
			cameraMovementMode == Enum.ComputerCameraMovementMode.Follow or
			cameraMovementMode == Enum.ComputerCameraMovementMode.Default or
			cameraMovementMode == Enum.ComputerCameraMovementMode.CameraToggle then
			newCameraCreator = ClassicCamera
		elseif cameraMovementMode == Enum.ComputerCameraMovementMode.Orbital then
			newCameraCreator = OrbitalCamera
		else
			warn("ActivateCameraController did not select a module.")
			return
		end
	end

	local isVehicleCamera = self:ShouldUseVehicleCamera()
	if isVehicleCamera then
		newCameraCreator = VehicleCamera
	end

	-- Create the camera control module we need if it does not already exist in instantiatedCameraControllers
	local newCameraController
	if not instantiatedCameraControllers[newCameraCreator] then
		newCameraController = newCameraCreator.new()
		instantiatedCameraControllers[newCameraCreator] = newCameraController
	else
		newCameraController = instantiatedCameraControllers[newCameraCreator]
		if newCameraController.Reset then
			newCameraController:Reset()
		end
	end
	
	if self.activeCameraController then
		-- deactivate the old controller and activate the new one
		if self.activeCameraController ~= newCameraController then
			self.activeCameraController:Enable(false)
			self.activeCameraController = newCameraController
			self.activeCameraController:Enable(true)
		elseif not self.activeCameraController:GetEnabled() then
			self.activeCameraController:Enable(true)
		end
	elseif newCameraController ~= nil then
		-- only activate the new controller
		self.activeCameraController = newCameraController
		self.activeCameraController:Enable(true)
	end

	if self.activeCameraController then
		if cameraMovementMode~=nil then
			self.activeCameraController:SetCameraMovementMode(cameraMovementMode)
		elseif legacyCameraType~=nil then
			-- Note that this is only called when legacyCameraType is not a type that
			-- was convertible to a ComputerCameraMovementMode value, i.e. really only applies to LegacyCamera
			self.activeCameraController:SetCameraType(legacyCameraType)
		end
	end
end

-- Note: The active transparency controller could be made to listen for this event itself.
function CameraModule:OnCameraSubjectChanged()
	local camera = workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject

	if self.activeTransparencyController then
		self.activeTransparencyController:SetSubject(cameraSubject)
	end

	if self.activeOcclusionModule then
		self.activeOcclusionModule:OnCameraSubjectChanged(cameraSubject)
	end

	self:ActivateCameraController(nil, camera.CameraType)
end

function CameraModule:OnCameraTypeChanged(newCameraType: Enum.CameraType)
	if newCameraType == Enum.CameraType.Scriptable then
		if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter then
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end
	end

	-- Forward the change to ActivateCameraController to handle
	self:ActivateCameraController(nil, newCameraType)
end

-- Note: Called whenever workspace.CurrentCamera changes, but also on initialization of this script
function CameraModule:OnCurrentCameraChanged()
	local currentCamera = game.Workspace.CurrentCamera
	if not currentCamera then return end

	if self.cameraSubjectChangedConn then
		self.cameraSubjectChangedConn:Disconnect()
	end

	if self.cameraTypeChangedConn then
		self.cameraTypeChangedConn:Disconnect()
	end

	self.cameraSubjectChangedConn = currentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
		self:OnCameraSubjectChanged(currentCamera.CameraSubject)
	end)

	self.cameraTypeChangedConn = currentCamera:GetPropertyChangedSignal("CameraType"):Connect(function()
		self:OnCameraTypeChanged(currentCamera.CameraType)
	end)

	self:OnCameraSubjectChanged(currentCamera.CameraSubject)
	self:OnCameraTypeChanged(currentCamera.CameraType)
end

function CameraModule:OnLocalPlayerCameraPropertyChanged(propertyName: string)
	if propertyName == "CameraMode" then
		-- CameraMode is only used to turn on/off forcing the player into first person view. The
		-- Note: The case "Classic" is used for all other views and does not correspond only to the ClassicCamera module
		if Players.LocalPlayer.CameraMode == Enum.CameraMode.LockFirstPerson then
			-- Locked in first person, use ClassicCamera which supports this
			if not self.activeCameraController or self.activeCameraController:GetModuleName() ~= "ClassicCamera" then
				self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(Enum.DevComputerCameraMovementMode.Classic))
			end

			if self.activeCameraController then
				self.activeCameraController:UpdateForDistancePropertyChange()
			end
		elseif Players.LocalPlayer.CameraMode == Enum.CameraMode.Classic then
			-- Not locked in first person view
			local cameraMovementMode = self:GetCameraMovementModeFromSettings()
			self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
		else
			warn("Unhandled value for property player.CameraMode: ",Players.LocalPlayer.CameraMode)
		end

	elseif propertyName == "DevComputerCameraMode" or 
		   propertyName == "DevTouchCameraMode" then
		local cameraMovementMode = self:GetCameraMovementModeFromSettings()
		self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))

	elseif propertyName == "DevCameraOcclusionMode" then
		self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)

	elseif propertyName == "CameraMinZoomDistance" or propertyName == "CameraMaxZoomDistance" then
		if self.activeCameraController then
			self.activeCameraController:UpdateForDistancePropertyChange()
		end
	elseif propertyName == "DevTouchMovementMode" then
	elseif propertyName == "DevComputerMovementMode" then
	elseif propertyName == "DevEnableMouseLock" then
		-- This is the enabling/disabling of "Shift Lock" mode, not LockFirstPerson (which is a CameraMode)
		-- Note: Enabling and disabling of MouseLock mode is normally only a publish-time choice made via
		-- the corresponding EnableMouseLockOption checkbox of StarterPlayer, and this script does not have
		-- support for changing the availability of MouseLock at runtime (this would require listening to
		-- Player.DevEnableMouseLock changes)
	end
end

function CameraModule:OnUserGameSettingsPropertyChanged(propertyName: string)
	if propertyName == "ComputerCameraMovementMode" then
		local cameraMovementMode = self:GetCameraMovementModeFromSettings()
		self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
	end
end

--[[
	Main RenderStep Update. The camera controller and occlusion module both have opportunities
	to set and modify (respectively) the CFrame and Focus before it is set once on CurrentCamera.
	The camera and occlusion modules should only return CFrames, not set the CFrame property of
	CurrentCamera directly.
--]]
function CameraModule:Update(dt)
	if self.activeCameraController then
		self.activeCameraController:UpdateMouseBehavior()

		local newCameraCFrame, newCameraFocus = self.activeCameraController:Update(dt)
		self.activeCameraController:ApplyVRTransform()
		if self.activeOcclusionModule then
			newCameraCFrame, newCameraFocus = self.activeOcclusionModule:Update(dt, newCameraCFrame, newCameraFocus)
		end

		-- Here is where the new CFrame and Focus are set for this render frame
		game.Workspace.CurrentCamera.CFrame = newCameraCFrame
		game.Workspace.CurrentCamera.Focus = newCameraFocus

		-- Update to character local transparency as needed based on camera-to-subject distance
		if self.activeTransparencyController then
			self.activeTransparencyController:Update()
		end

		if CameraInput.getInputEnabled() then
			CameraInput.resetInputForFrameEnd()
		end
	end
end

-- Formerly getCurrentCameraMode, this function resolves developer and user camera control settings to
-- decide which camera control module should be instantiated. The old method of converting redundant enum types
function CameraModule:GetCameraControlChoice()
	local player = Players.LocalPlayer

	if player then
		if self.lastInputType == Enum.UserInputType.Touch or UserInputService.TouchEnabled then
			-- Touch
			if player.DevTouchCameraMode == Enum.DevTouchCameraMovementMode.UserChoice then
				return CameraUtils.ConvertCameraModeEnumToStandard( UserGameSettings.TouchCameraMovementMode )
			else
				return CameraUtils.ConvertCameraModeEnumToStandard( player.DevTouchCameraMode )
			end
		else
			-- Computer
			if player.DevComputerCameraMode == Enum.DevComputerCameraMovementMode.UserChoice then
				local computerMovementMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
				return CameraUtils.ConvertCameraModeEnumToStandard(computerMovementMode)
			else
				return CameraUtils.ConvertCameraModeEnumToStandard(player.DevComputerCameraMode)
			end
		end
	end
end

function CameraModule:OnCharacterAdded(char, player)
	if self.activeOcclusionModule then
		self.activeOcclusionModule:CharacterAdded(char, player)
	end
end

function CameraModule:OnCharacterRemoving(char, player)
	if self.activeOcclusionModule then
		self.activeOcclusionModule:CharacterRemoving(char, player)
	end
end

function CameraModule:OnPlayerAdded(player)
	player.CharacterAdded:Connect(function(char)
		self:OnCharacterAdded(char, player)
	end)
	player.CharacterRemoving:Connect(function(char)
		self:OnCharacterRemoving(char, player)
	end)
end

function CameraModule:OnMouseLockToggled()
	if self.activeMouseLockController then
		local mouseLocked = self.activeMouseLockController:GetIsMouseLocked()
		local mouseLockOffset = self.activeMouseLockController:GetMouseLockOffset()
		if self.activeCameraController then
			self.activeCameraController:SetIsMouseLocked(mouseLocked)
			self.activeCameraController:SetMouseLockOffset(mouseLockOffset)
		end
	end
end

local cameraModuleObject = CameraModule.new()
local cameraApi = {}

if FFlagUserRemoveTheCameraApi then
	return cameraApi
else
	return cameraModuleObject
end
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX139047c0f65c4ed3aafbc1d7b50b5bae">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">OrbitalCamera</string>
							<string name="ScriptGuid">{7a1d82be-0a01-431d-ae65-d91bb79c9306}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	OrbitalCamera - Spherical coordinates control camera for top-down games
	2018 Camera Update - AllYourBlox
--]]

-- Local private variables and constants
local UNIT_Z = Vector3.new(0,0,1)
local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local TAU = 2 * math.pi

-- Do not edit these values, they are not the developer-set limits, they are limits
-- to the values the camera system equations can correctly handle
local MIN_ALLOWED_ELEVATION_DEG = -80
local MAX_ALLOWED_ELEVATION_DEG = 80

local externalProperties = {}
externalProperties["InitialDistance"]  = 25
externalProperties["MinDistance"]      = 10
externalProperties["MaxDistance"]      = 100
externalProperties["InitialElevation"] = 35
externalProperties["MinElevation"]     = 35
externalProperties["MaxElevation"]     = 35
externalProperties["ReferenceAzimuth"] = -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
externalProperties["CWAzimuthTravel"]  = 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
externalProperties["CCWAzimuthTravel"] = 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
externalProperties["UseAzimuthLimits"] = false -- Full rotation around Y axis available by default

local Util = require(script.Parent:WaitForChild("CameraUtils"))
local CameraInput = require(script.Parent:WaitForChild("CameraInput"))

--[[ Services ]]--
local PlayersService = game:GetService('Players')
local VRService = game:GetService("VRService")

--[[ The Module ]]--
local BaseCamera = require(script.Parent:WaitForChild("BaseCamera"))
local OrbitalCamera = setmetatable({}, BaseCamera)
OrbitalCamera.__index = OrbitalCamera


function OrbitalCamera.new()
	local self = setmetatable(BaseCamera.new(), OrbitalCamera)

	self.lastUpdate = tick()

	-- OrbitalCamera-specific members
	self.changedSignalConnections = {}
	self.refAzimuthRad = nil
	self.curAzimuthRad = nil
	self.minAzimuthAbsoluteRad = nil
	self.maxAzimuthAbsoluteRad = nil
	self.useAzimuthLimits = nil
	self.curElevationRad = nil
	self.minElevationRad = nil
	self.maxElevationRad = nil
	self.curDistance = nil
	self.minDistance = nil
	self.maxDistance = nil

	self.gamepadDollySpeedMultiplier = 1

	self.lastUserPanCamera = tick()

	self.externalProperties = {}
	self.externalProperties["InitialDistance"] 	= 25
	self.externalProperties["MinDistance"] 		= 10
	self.externalProperties["MaxDistance"] 		= 100
	self.externalProperties["InitialElevation"] 	= 35
	self.externalProperties["MinElevation"] 		= 35
	self.externalProperties["MaxElevation"] 		= 35
	self.externalProperties["ReferenceAzimuth"] 	= -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
	self.externalProperties["CWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
	self.externalProperties["CCWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
	self.externalProperties["UseAzimuthLimits"] 	= false -- Full rotation around Y axis available by default
	self:LoadNumberValueParameters()

	return self
end

function OrbitalCamera:LoadOrCreateNumberValueParameter(name: string, valueType, updateFunction)
	local valueObj = script:FindFirstChild(name)

	if valueObj and valueObj:isA(valueType) then
		-- Value object exists and is the correct type, use its value
		self.externalProperties[name] = valueObj.Value
	elseif self.externalProperties[name] ~= nil then
		-- Create missing (or replace incorrectly-typed) valueObject with default value
		valueObj = Instance.new(valueType)
		valueObj.Name = name
		valueObj.Parent = script
		valueObj.Value = self.externalProperties[name]
	else
		return
	end

	if updateFunction then
		if self.changedSignalConnections[name] then
			self.changedSignalConnections[name]:Disconnect()
		end
		self.changedSignalConnections[name] = valueObj.Changed:Connect(function(newValue)
			self.externalProperties[name] = newValue
			updateFunction(self)
		end)
	end
end

function OrbitalCamera:SetAndBoundsCheckAzimuthValues()
	self.minAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) - math.abs(math.rad(self.externalProperties["CWAzimuthTravel"]))
	self.maxAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) + math.abs(math.rad(self.externalProperties["CCWAzimuthTravel"]))
	self.useAzimuthLimits = self.externalProperties["UseAzimuthLimits"]
	if self.useAzimuthLimits then
		self.curAzimuthRad = math.max(self.curAzimuthRad, self.minAzimuthAbsoluteRad)
		self.curAzimuthRad = math.min(self.curAzimuthRad, self.maxAzimuthAbsoluteRad)
	end
end

function OrbitalCamera:SetAndBoundsCheckElevationValues()
	-- These degree values are the direct user input values. It is deliberate that they are
	-- ranged checked only against the extremes, and not against each other. Any time one
	-- is changed, both of the internal values in radians are recalculated. This allows for
	-- A developer to change the values in any order and for the end results to be that the
	-- internal values adjust to match intent as best as possible.
	local minElevationDeg = math.max(self.externalProperties["MinElevation"], MIN_ALLOWED_ELEVATION_DEG)
	local maxElevationDeg = math.min(self.externalProperties["MaxElevation"], MAX_ALLOWED_ELEVATION_DEG)

	-- Set internal values in radians
	self.minElevationRad = math.rad(math.min(minElevationDeg, maxElevationDeg))
	self.maxElevationRad = math.rad(math.max(minElevationDeg, maxElevationDeg))
	self.curElevationRad = math.max(self.curElevationRad, self.minElevationRad)
	self.curElevationRad = math.min(self.curElevationRad, self.maxElevationRad)
end

function OrbitalCamera:SetAndBoundsCheckDistanceValues()
	self.minDistance = self.externalProperties["MinDistance"]
	self.maxDistance = self.externalProperties["MaxDistance"]
	self.curDistance = math.max(self.curDistance, self.minDistance)
	self.curDistance = math.min(self.curDistance, self.maxDistance)
end

-- This loads from, or lazily creates, NumberValue objects for exposed parameters
function OrbitalCamera:LoadNumberValueParameters()
	-- These initial values do not require change listeners since they are read only once
	self:LoadOrCreateNumberValueParameter("InitialElevation", "NumberValue", nil)
	self:LoadOrCreateNumberValueParameter("InitialDistance", "NumberValue", nil)

	-- Note: ReferenceAzimuth is also used as an initial value, but needs a change listener because it is used in the calculation of the limits
	self:LoadOrCreateNumberValueParameter("ReferenceAzimuth", "NumberValue", self.SetAndBoundsCheckAzimuthValue)
	self:LoadOrCreateNumberValueParameter("CWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
	self:LoadOrCreateNumberValueParameter("CCWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
	self:LoadOrCreateNumberValueParameter("MinElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
	self:LoadOrCreateNumberValueParameter("MaxElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
	self:LoadOrCreateNumberValueParameter("MinDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
	self:LoadOrCreateNumberValueParameter("MaxDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
	self:LoadOrCreateNumberValueParameter("UseAzimuthLimits", "BoolValue", self.SetAndBoundsCheckAzimuthValues)

	-- Internal values set (in radians, from degrees), plus sanitization
	self.curAzimuthRad = math.rad(self.externalProperties["ReferenceAzimuth"])
	self.curElevationRad = math.rad(self.externalProperties["InitialElevation"])
	self.curDistance = self.externalProperties["InitialDistance"]

	self:SetAndBoundsCheckAzimuthValues()
	self:SetAndBoundsCheckElevationValues()
	self:SetAndBoundsCheckDistanceValues()
end

function OrbitalCamera:GetModuleName()
	return "OrbitalCamera"
end

function OrbitalCamera:SetInitialOrientation(humanoid: Humanoid)
	if not humanoid or not humanoid.RootPart then
		warn("OrbitalCamera could not set initial orientation due to missing humanoid")
		return
	end
	local newDesiredLook = (humanoid.RootPart.CFrame.lookVector - Vector3.new(0,0.23,0)).unit
	local horizontalShift = Util.GetAngleBetweenXZVectors(newDesiredLook, self:GetCameraLookVector())
	local vertShift = math.asin(self:GetCameraLookVector().y) - math.asin(newDesiredLook.y)
	if not Util.IsFinite(horizontalShift) then
		horizontalShift = 0
	end
	if not Util.IsFinite(vertShift) then
		vertShift = 0
	end
end

--[[ Functions of BaseCamera that are overridden by OrbitalCamera ]]--
function OrbitalCamera:GetCameraToSubjectDistance()
	return self.curDistance
end

function OrbitalCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
	local player = PlayersService.LocalPlayer
	if player then
		self.currentSubjectDistance = math.clamp(desiredSubjectDistance, self.minDistance, self.maxDistance)

		-- OrbitalCamera is not allowed to go into the first-person range
		self.currentSubjectDistance = math.max(self.currentSubjectDistance, self.FIRST_PERSON_DISTANCE_THRESHOLD)
	end
	self.inFirstPerson = false
	self:UpdateMouseBehavior()
	return self.currentSubjectDistance
end

function OrbitalCamera:CalculateNewLookVector(suppliedLookVector: Vector3, xyRotateVector: Vector2): Vector3
	local currLookVector: Vector3 = suppliedLookVector or self:GetCameraLookVector()
	local currPitchAngle: number = math.asin(currLookVector.y)
	local yTheta: number = math.clamp(xyRotateVector.y, currPitchAngle - math.rad(MAX_ALLOWED_ELEVATION_DEG), currPitchAngle - math.rad(MIN_ALLOWED_ELEVATION_DEG))
	local constrainedRotateInput: Vector2 = Vector2.new(xyRotateVector.x, yTheta)
	local startCFrame: CFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
	local newLookVector: Vector3 = (CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)).lookVector
	return newLookVector
end

-- [[ Update ]]--
function OrbitalCamera:Update(dt: number): (CFrame, CFrame)
	local now = tick()
	local timeDelta = (now - self.lastUpdate)
	local userPanningTheCamera = CameraInput.getRotation() ~= Vector2.new()
	local camera = 	workspace.CurrentCamera
	local newCameraCFrame = camera.CFrame
	local newCameraFocus = camera.Focus
	local player = PlayersService.LocalPlayer
	local cameraSubject = camera and camera.CameraSubject
	local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
	local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')

	if self.lastUpdate == nil or timeDelta > 1 then
		self.lastCameraTransform = nil
	end

	-- Reset tween speed if user is panning
	if userPanningTheCamera then
		self.lastUserPanCamera = tick()
	end

	local subjectPosition = self:GetSubjectPosition()

	if subjectPosition and player and camera then

		-- Process any dollying being done by gamepad
		-- TODO: Move this
		if self.gamepadDollySpeedMultiplier ~= 1 then
			self:SetCameraToSubjectDistance(self.currentSubjectDistance * self.gamepadDollySpeedMultiplier)
		end

		local VREnabled = VRService.VREnabled
		newCameraFocus = VREnabled and self:GetVRFocus(subjectPosition, timeDelta) or CFrame.new(subjectPosition)

		local flaggedRotateInput = CameraInput.getRotation()

		local cameraFocusP = newCameraFocus.p
		if VREnabled and not self:IsInFirstPerson() then
			local cameraHeight = self:GetCameraHeight()
			local vecToSubject: Vector3 = (subjectPosition - camera.CFrame.p)
			local distToSubject: number = vecToSubject.magnitude

			-- Only move the camera if it exceeded a maximum distance to the subject in VR
			if distToSubject > self.currentSubjectDistance or flaggedRotateInput.x ~= 0 then
				local desiredDist = math.min(distToSubject, self.currentSubjectDistance)

				-- Note that CalculateNewLookVector is overridden from BaseCamera
				vecToSubject = self:CalculateNewLookVector(vecToSubject.unit * X1_Y0_Z1, Vector2.new(flaggedRotateInput.x, 0)) * desiredDist

				local newPos = cameraFocusP - vecToSubject
				local desiredLookDir = camera.CFrame.lookVector
				if flaggedRotateInput.x ~= 0 then
					desiredLookDir = vecToSubject
				end
				local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)
				newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
			end
		else
			-- rotateInput is a Vector2 of mouse movement deltas since last update
			self.curAzimuthRad = self.curAzimuthRad - flaggedRotateInput.x

			if self.useAzimuthLimits then
				self.curAzimuthRad = math.clamp(self.curAzimuthRad, self.minAzimuthAbsoluteRad, self.maxAzimuthAbsoluteRad)
			else
				self.curAzimuthRad = (self.curAzimuthRad ~= 0) and (math.sign(self.curAzimuthRad) * (math.abs(self.curAzimuthRad) % TAU)) or 0
			end

			self.curElevationRad = math.clamp(self.curElevationRad + flaggedRotateInput.y, self.minElevationRad, self.maxElevationRad)

			local cameraPosVector = self.currentSubjectDistance * ( CFrame.fromEulerAnglesYXZ( -self.curElevationRad, self.curAzimuthRad, 0 ) * UNIT_Z )
			local camPos = subjectPosition + cameraPosVector

			newCameraCFrame = CFrame.new(camPos, subjectPosition)
		end

		self.lastCameraTransform = newCameraCFrame
		self.lastCameraFocus = newCameraFocus
		if (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
			self.lastSubjectCFrame = cameraSubject.CFrame
		else
			self.lastSubjectCFrame = nil
		end
	end

	self.lastUpdate = now
	return newCameraCFrame, newCameraFocus
end

return OrbitalCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX36f7aa7cef5d465294eb9573d2870fc0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LegacyCamera</string>
							<string name="ScriptGuid">{dd420fd2-f853-4ee9-8d56-e64dc13c2a03}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	LegacyCamera - Implements legacy controller types: Attach, Fixed, Watch
	2018 Camera Update - AllYourBlox
--]]

local ZERO_VECTOR2 = Vector2.new()
local PITCH_LIMIT = math.rad(80)

local Util = require(script.Parent:WaitForChild("CameraUtils"))
local CameraInput = require(script.Parent:WaitForChild("CameraInput"))

--[[ Services ]]--
local PlayersService = game:GetService('Players')

--[[ The Module ]]--
local BaseCamera = require(script.Parent:WaitForChild("BaseCamera"))
local LegacyCamera = setmetatable({}, BaseCamera)
LegacyCamera.__index = LegacyCamera

function LegacyCamera.new()
	local self = setmetatable(BaseCamera.new(), LegacyCamera)

	self.cameraType = Enum.CameraType.Fixed
	self.lastUpdate = tick()
	self.lastDistanceToSubject = nil

	return self
end

function LegacyCamera:GetModuleName()
	return "LegacyCamera"
end

--[[ Functions overridden from BaseCamera ]]--
function LegacyCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
	return BaseCamera.SetCameraToSubjectDistance(self,desiredSubjectDistance)
end

function LegacyCamera:Update(dt: number): (CFrame, CFrame)

	-- Cannot update until cameraType has been set
	if not self.cameraType then return end

	local now = tick()
	local timeDelta = (now - self.lastUpdate)
	local camera = 	workspace.CurrentCamera
	local newCameraCFrame = camera.CFrame
	local newCameraFocus = camera.Focus
	local player = PlayersService.LocalPlayer

	if self.lastUpdate == nil or timeDelta > 1 then
		self.lastDistanceToSubject = nil
	end
	local subjectPosition: Vector3 = self:GetSubjectPosition()

	if self.cameraType == Enum.CameraType.Fixed then
		if subjectPosition and player and camera then
			local distanceToSubject = self:GetCameraToSubjectDistance()
			local newLookVector = self:CalculateNewLookVectorFromArg(nil, CameraInput.getRotation())

			newCameraFocus = camera.Focus -- Fixed camera does not change focus
			newCameraCFrame = CFrame.new(camera.CFrame.p, camera.CFrame.p + (distanceToSubject * newLookVector))
		end

	elseif self.cameraType == Enum.CameraType.Attach then
		local subjectCFrame = self:GetSubjectCFrame()
		local cameraPitch = camera.CFrame:ToEulerAnglesYXZ()
		local _, subjectYaw = subjectCFrame:ToEulerAnglesYXZ()
		
		cameraPitch = math.clamp(cameraPitch - CameraInput.getRotation().Y, -PITCH_LIMIT, PITCH_LIMIT)
		
		newCameraFocus = CFrame.new(subjectCFrame.p)*CFrame.fromEulerAnglesYXZ(cameraPitch, subjectYaw, 0)
		newCameraCFrame = newCameraFocus*CFrame.new(0, 0, self:StepZoom())

	elseif self.cameraType == Enum.CameraType.Watch then
		if subjectPosition and player and camera then
			local cameraLook = nil

			if subjectPosition == camera.CFrame.p then
				warn("Camera cannot watch subject in same position as itself")
				return camera.CFrame, camera.Focus
			end

			local humanoid = self:GetHumanoid()
			if humanoid and humanoid.RootPart then
				local diffVector = subjectPosition - camera.CFrame.p
				cameraLook = diffVector.unit

				if self.lastDistanceToSubject and self.lastDistanceToSubject == self:GetCameraToSubjectDistance() then
					-- Don't clobber the zoom if they zoomed the camera
					local newDistanceToSubject = diffVector.magnitude
					self:SetCameraToSubjectDistance(newDistanceToSubject)
				end
			end

			local distanceToSubject: number = self:GetCameraToSubjectDistance()
			local newLookVector: Vector3 = self:CalculateNewLookVectorFromArg(cameraLook, CameraInput.getRotation())

			newCameraFocus = CFrame.new(subjectPosition)
			newCameraCFrame = CFrame.new(subjectPosition - (distanceToSubject * newLookVector), subjectPosition)

			self.lastDistanceToSubject = distanceToSubject
		end
	else
		-- Unsupported type, return current values unchanged
		return camera.CFrame, camera.Focus
	end

	self.lastUpdate = now
	return newCameraCFrame, newCameraFocus
end

return LegacyCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX661e294d022c414d9da119d64723852e">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">VehicleCamera</string>
							<string name="ScriptGuid">{b9ce7326-dca2-42d9-a788-5331f82178f2}</string>
							<ProtectedString name="Source"><![CDATA[local EPSILON = 1e-3
local PITCH_LIMIT = math.rad(80)
local YAW_DEFAULT = math.rad(0)
local ZOOM_MINIMUM = 0.5
local ZOOM_SENSITIVITY_CURVATURE = 0.5

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local BaseCamera = require(script.Parent:WaitForChild("BaseCamera"))
local CameraInput = require(script.Parent:WaitForChild("CameraInput"))
local CameraUtils = require(script.Parent:WaitForChild("CameraUtils"))
local ZoomController = require(script.Parent:WaitForChild("ZoomController"))
local VehicleCameraCore = require(script:WaitForChild("VehicleCameraCore"))
local VehicleCameraConfig = require(script:WaitForChild("VehicleCameraConfig"))

local localPlayer = Players.LocalPlayer

local map = CameraUtils.map
local Spring = CameraUtils.Spring
local mapClamp = CameraUtils.mapClamp
local sanitizeAngle = CameraUtils.sanitizeAngle

-- pitch-axis rotational velocity of a part with a given CFrame and total RotVelocity
local function pitchVelocity(rotVel, cf)
	return math.abs(cf.XVector:Dot(rotVel))
end

-- yaw-axis rotational velocity of a part with a given CFrame and total RotVelocity
local function yawVelocity(rotVel, cf)
	return math.abs(cf.YVector:Dot(rotVel))
end

-- track physics solver time delta separately from the render loop to correctly synchronize time delta
local worldDt = 1/60
RunService.Stepped:Connect(function(_, _worldDt)
	worldDt = _worldDt
end)

local VehicleCamera = setmetatable({}, BaseCamera)
VehicleCamera.__index = VehicleCamera

function VehicleCamera.new()
	local self = setmetatable(BaseCamera.new(), VehicleCamera)
	self:Reset()
	return self
end

function VehicleCamera:Reset()
	self.vehicleCameraCore = VehicleCameraCore.new(self:GetSubjectCFrame())
	self.pitchSpring = Spring.new(0, -math.rad(VehicleCameraConfig.pitchBaseAngle))
	self.yawSpring = Spring.new(0, YAW_DEFAULT)
	self.lastPanTick = 0
	
	local camera = workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject
	
	assert(camera)
	assert(cameraSubject)
	assert(cameraSubject:IsA("VehicleSeat"))
	
	local assemblyParts = cameraSubject:GetConnectedParts(true) -- passing true to recursively get all assembly parts
	local assemblyPosition, assemblyRadius = CameraUtils.getLooseBoundingSphere(assemblyParts)
	
	assemblyRadius = math.max(assemblyRadius, EPSILON)
	
	self.assemblyRadius = assemblyRadius
	self.assemblyOffset = cameraSubject.CFrame:Inverse()*assemblyPosition -- seat-space offset of the assembly bounding sphere center
	
	self:_StepInitialZoom()
end

function VehicleCamera:_StepInitialZoom()
	self:SetCameraToSubjectDistance(math.max(
		ZoomController.GetZoomRadius(),
		self.assemblyRadius*VehicleCameraConfig.initialZoomRadiusMul
	))
end

function VehicleCamera:_StepRotation(dt, vdotz): CFrame
	local yawSpring = self.yawSpring
	local pitchSpring = self.pitchSpring
	
	local rotationInput = CameraInput.getRotation(true)
	local dYaw = -rotationInput.X
	local dPitch = -rotationInput.Y
	
	yawSpring.pos = sanitizeAngle(yawSpring.pos + dYaw)
	pitchSpring.pos = sanitizeAngle(math.clamp(pitchSpring.pos + dPitch, -PITCH_LIMIT, PITCH_LIMIT))

	if CameraInput.getRotationActivated() then
		self.lastPanTick = os.clock()
	end

	local pitchBaseAngle = -math.rad(VehicleCameraConfig.pitchBaseAngle)
	local pitchDeadzoneAngle = math.rad(VehicleCameraConfig.pitchDeadzoneAngle)

	if os.clock() - self.lastPanTick > VehicleCameraConfig.autocorrectDelay then
		-- adjust autocorrect response based on forward velocity
		local autocorrectResponse = mapClamp(
			vdotz,
			VehicleCameraConfig.autocorrectMinCarSpeed,
			VehicleCameraConfig.autocorrectMaxCarSpeed,
			0,
			VehicleCameraConfig.autocorrectResponse
		)

		yawSpring.freq = autocorrectResponse
		pitchSpring.freq = autocorrectResponse
		
		-- zero out response under a threshold
		if yawSpring.freq < EPSILON then
			yawSpring.vel = 0
		end

		if pitchSpring.freq < EPSILON then
			pitchSpring.vel = 0
		end

		if math.abs(sanitizeAngle(pitchBaseAngle - pitchSpring.pos)) <= pitchDeadzoneAngle then
			-- do nothing within the deadzone
			pitchSpring.goal = pitchSpring.pos
		else
			pitchSpring.goal = pitchBaseAngle
		end
	else
		yawSpring.freq = 0
		yawSpring.vel = 0

		pitchSpring.freq = 0
		pitchSpring.vel = 0

		pitchSpring.goal = pitchBaseAngle
	end

	return CFrame.fromEulerAnglesYXZ(
		pitchSpring:step(dt),
		yawSpring:step(dt),
		0
	)
end

function VehicleCamera:_GetThirdPersonLocalOffset()
	return self.assemblyOffset + Vector3.new(0, self.assemblyRadius*VehicleCameraConfig.verticalCenterOffset, 0)
end

function VehicleCamera:_GetFirstPersonLocalOffset(subjectCFrame: CFrame)
	local character = localPlayer.Character
	
	if character and character.Parent then
		local head = character:FindFirstChild("Head")
		
		if head and head:IsA("BasePart") then
			return subjectCFrame:Inverse()*head.Position
		end
	end
	
	return self:_GetThirdPersonLocalOffset()
end

function VehicleCamera:Update()
	local camera = workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject
	local vehicleCameraCore = self.vehicleCameraCore
	
	assert(camera)
	assert(cameraSubject)
	assert(cameraSubject:IsA("VehicleSeat"))
	
	-- consume the physics solver time delta to account for mismatched physics/render cycles
	local dt = worldDt
	worldDt = 0
	
	-- get subject info
	local subjectCFrame: CFrame = self:GetSubjectCFrame()
	local subjectVel: Vector3 = self:GetSubjectVelocity()
	local subjectRotVel = self:GetSubjectRotVelocity()
	
	-- measure the local-to-world-space forward velocity of the vehicle
	local vDotZ = math.abs(subjectVel:Dot(subjectCFrame.ZVector))
	local yawVel = yawVelocity(subjectRotVel, subjectCFrame)
	local pitchVel = pitchVelocity(subjectRotVel, subjectCFrame)
	
	-- step camera components forward
	local zoom = self:StepZoom()
	local objectRotation = self:_StepRotation(dt, vDotZ)
	
	-- mix third and first person offsets in local space
	local firstPerson = mapClamp(zoom, ZOOM_MINIMUM, self.assemblyRadius, 1, 0)
	
	local tpOffset = self:_GetThirdPersonLocalOffset()
	local fpOffset = self:_GetFirstPersonLocalOffset(subjectCFrame)
	local localOffset = tpOffset:Lerp(fpOffset, firstPerson)
	
	-- step core forward
	vehicleCameraCore:setTransform(subjectCFrame)
	local processedRotation = vehicleCameraCore:step(dt, pitchVel, yawVel, firstPerson)
	
	-- calculate final focus & cframe
	local focus = CFrame.new(subjectCFrame*localOffset)*processedRotation*objectRotation
	local cf = focus*CFrame.new(0, 0, zoom)

	return cf, focus
end

function VehicleCamera:ApplyVRTransform()
	-- no-op override; VR transform is not applied in vehicles
end

function VehicleCamera:EnterFirstPerson()
	self.inFirstPerson = true
	self:UpdateMouseBehavior()
end

function VehicleCamera:LeaveFirstPerson()
	self.inFirstPerson = false
	self:UpdateMouseBehavior()
end

return VehicleCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX75a01df79ef94d96905554955bd77a6a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">VehicleCameraConfig</string>
								<string name="ScriptGuid">{52f4d302-cc9d-4f86-9474-e63d7f026458}</string>
								<ProtectedString name="Source"><![CDATA[local VEHICLE_CAMERA_CONFIG = {
	-- (hz) Camera response stiffness along the pitch axis
	pitchStiffness = 0.5,

	-- (hz) Camera response stiffness along the yaw axis
	yawStiffness = 2.5,

	-- (s) Delay after use input before the camera can begin autorotating
	autocorrectDelay = 1,

	-- (studs/s) Minimum vehicle speed before the autocorrect begins to activate
	autocorrectMinCarSpeed = 16,

	-- (studs/s) Vehicle speed where autocorrect is fully activated
	autocorrectMaxCarSpeed = 32,

	-- (hz) Autocorrect stiffness/speed
	autocorrectResponse = 0.5,

	-- (deg/s) Minimum angular yaw velocity before the camera rotation cutoff begins
	cutoffMinAngularVelYaw = 60,

	-- (deg/s) Maximum angular yaw velocity where the camera rotation cutoff is fully activated
	cutoffMaxAngularVelYaw = 180,

	-- (deg/s) Minimum angular pitch velocity before the camera rotation cutoff begins
	cutoffMinAngularVelPitch = 15,

	-- (deg/s) Maximum angular pitch velocity where the camera rotation cutoff is fully activated
	cutoffMaxAngularVelPitch = 60,

	-- (deg) Default pitch angle relative to the horizon
	pitchBaseAngle = 18,

	-- (deg) Half-size of the deadzone angle for pitch autocorrect
	pitchDeadzoneAngle = 12,

	-- (unitless) Multiplier for camera response stiffness in first-person mode
	firstPersonResponseMul = 10,

	-- (hz) Responsiveness of yaw cutoff to rising angular velocities
	yawReponseDampingRising = 1,

	-- (hz) Responsiveness of yaw cutoff to falling angular velocities
	yawResponseDampingFalling = 3,

	-- (hz) Responsiveness of pitch cutoff to rising angular velocities
	pitchReponseDampingRising = 1,

	-- (hz) Responsiveness of pitch cutoff to falling angular velocities
	pitchResponseDampingFalling = 3,

	-- (unitless) Initial zoom radius as a fraction of car radius
	initialZoomRadiusMul = 3,

	-- (unitless) Vertical third-person camera offset as a fraction of car radius
	verticalCenterOffset = 0.33,
}

return VEHICLE_CAMERA_CONFIG
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX1edeb516c08a4574b1b4bf952a6688c2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">VehicleCameraCore</string>
								<string name="ScriptGuid">{c1f71b31-3215-4568-9bb5-b6dd7bd5797d}</string>
								<ProtectedString name="Source"><![CDATA[local CameraUtils = require(script.Parent.Parent.CameraUtils)
local VehicleCameraConfig = require(script.Parent.VehicleCameraConfig)

local map = CameraUtils.map
local mapClamp = CameraUtils.mapClamp
local sanitizeAngle = CameraUtils.sanitizeAngle

-- extract sanitized yaw from a CFrame rotation
local function getYaw(cf)
	local _, yaw = cf:toEulerAnglesYXZ()
	return sanitizeAngle(yaw)
end

-- extract sanitized pitch from a CFrame rotation
local function getPitch(cf)
	local pitch = cf:toEulerAnglesYXZ()
	return sanitizeAngle(pitch)
end

-- step a damped angular spring axis
local function stepSpringAxis(dt, f, g, p, v)
	local offset = sanitizeAngle(p - g)
	local decay = math.exp(-f*dt)

	local p1 = sanitizeAngle((offset*(1 + f*dt) + v*dt)*decay + g)
	local v1 = (v*(1 - f*dt) - offset*(f*f*dt))*decay

	return p1, v1
end

-- value damper with separate response frequencies for rising and falling values
local VariableEdgeSpring = {} do
	VariableEdgeSpring.__index = VariableEdgeSpring

	function VariableEdgeSpring.new(fRising, fFalling, position)
		return setmetatable({
			fRising = fRising,
			fFalling = fFalling,
			g = position,
			p = position,
			v = position*0,
		}, VariableEdgeSpring)
	end

	function VariableEdgeSpring:step(dt)
		local fRising = self.fRising
		local fFalling = self.fFalling
		local g = self.g
		local p0 = self.p
		local v0 = self.v

		local f = 2*math.pi*(v0 > 0 and fRising or fFalling)

		local offset = p0 - g
		local decay = math.exp(-f*dt)

		local p1 = (offset*(1 + f*dt) + v0*dt)*decay + g
		local v1 = (v0*(1 - f*dt) - offset*(f*f*dt))*decay

		self.p = p1
		self.v = v1

		return p1
	end
end

-- damps a 3D rotation in Tait-Bryan YXZ space, filtering out Z
local YawPitchSpring = {} do
	YawPitchSpring.__index = YawPitchSpring

	function YawPitchSpring.new(cf)
		assert(typeof(cf) == "CFrame")
		
		return setmetatable({
			yawG = getYaw(cf), -- yaw goal
			yawP = getYaw(cf), -- yaw position
			yawV = 0, -- yaw velocity

			pitchG = getPitch(cf), -- pitch goal
			pitchP = getPitch(cf), -- pitch position
			pitchV = 0, -- pitch velocity

			-- yaw/pitch response springs
			fSpringYaw = VariableEdgeSpring.new(
				VehicleCameraConfig.yawReponseDampingRising,
				VehicleCameraConfig.yawResponseDampingFalling,
				0
			),
			fSpringPitch = VariableEdgeSpring.new(
				VehicleCameraConfig.pitchReponseDampingRising,
				VehicleCameraConfig.pitchResponseDampingFalling,
				0
			),
		}, YawPitchSpring)
	end
	
	-- Extract Tait-Bryan angles from a CFrame rotation
	function YawPitchSpring:setGoal(goalCFrame)
		assert(typeof(goalCFrame) == "CFrame")
		
		self.yawG = getYaw(goalCFrame)
		self.pitchG = getPitch(goalCFrame)
	end

	function YawPitchSpring:getCFrame()
		return CFrame.fromEulerAnglesYXZ(self.pitchP, self.yawP, 0)
	end

	function YawPitchSpring:step(dt, pitchVel, yawVel, firstPerson)
		assert(typeof(dt) == "number")
		assert(typeof(yawVel) == "number")
		assert(typeof(pitchVel) == "number")
		assert(typeof(firstPerson) == "number")
		
		local fSpringYaw = self.fSpringYaw
		local fSpringPitch = self.fSpringPitch
		
		-- calculate the frequency spring
		fSpringYaw.g = mapClamp(
			map(firstPerson, 0, 1, yawVel, 0),
			math.rad(VehicleCameraConfig.cutoffMinAngularVelYaw),
			math.rad(VehicleCameraConfig.cutoffMaxAngularVelYaw),
			1, 0
		)

		fSpringPitch.g = mapClamp(
			map(firstPerson, 0, 1, pitchVel, 0),
			math.rad(VehicleCameraConfig.cutoffMinAngularVelPitch),
			math.rad(VehicleCameraConfig.cutoffMaxAngularVelPitch),
			1, 0
		)
		
		-- calculate final frequencies
		local fYaw = 2*math.pi*VehicleCameraConfig.yawStiffness*fSpringYaw:step(dt)
		local fPitch = 2*math.pi*VehicleCameraConfig.pitchStiffness*fSpringPitch:step(dt)
		
		-- adjust response for first person
		fPitch *= map(firstPerson, 0, 1, 1, VehicleCameraConfig.firstPersonResponseMul)
		fYaw *= map(firstPerson, 0, 1, 1, VehicleCameraConfig.firstPersonResponseMul)
		
		-- step yaw
		self.yawP, self.yawV = stepSpringAxis(
			dt,
			fYaw,
			self.yawG,
			self.yawP,
			self.yawV
		)
		
		-- step pitch
		self.pitchP, self.pitchV = stepSpringAxis(
			dt,
			fPitch,
			self.pitchG,
			self.pitchP,
			self.pitchV
		)

		return self:getCFrame()
	end
end

local VehicleCameraCore = {} do
	VehicleCameraCore.__index = VehicleCameraCore

	function VehicleCameraCore.new(transform)
		return setmetatable({
			vrs = YawPitchSpring.new(transform)
		}, VehicleCameraCore)
	end

	function VehicleCameraCore:step(dt, pitchVel, yawVel, firstPerson)
		return self.vrs:step(dt, pitchVel, yawVel, firstPerson)
	end

	function VehicleCameraCore:setTransform(transform)
		self.vrs:setGoal(transform)
	end
end

return VehicleCameraCore
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXbcd4501b69904a7588a4d1369f14c9be">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MouseLockController</string>
							<string name="ScriptGuid">{0c6e585f-1cc8-46c3-b5e8-339f846e275d}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	MouseLockController - Replacement for ShiftLockController, manages use of mouse-locked mode
	2018 Camera Update - AllYourBlox
--]]

--[[ Constants ]]--
local DEFAULT_MOUSE_LOCK_CURSOR = "rbxassetid://7565283079"

local CONTEXT_ACTION_NAME = "MouseLockSwitchAction"
local MOUSELOCK_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value

--[[ Services ]]--
local PlayersService = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
local Settings = UserSettings()	-- ignore warning
local GameSettings = Settings.GameSettings
local Mouse = PlayersService.LocalPlayer:GetMouse()

--[[ The Module ]]--
local MouseLockController = {}
MouseLockController.__index = MouseLockController

function MouseLockController.new()
	local self = setmetatable({}, MouseLockController)

	self.isMouseLocked = false
	self.savedMouseCursor = nil
	self.boundKeys = {Enum.KeyCode.LeftShift, Enum.KeyCode.RightShift} -- defaults

	self.mouseLockToggledEvent = Instance.new("BindableEvent")

	local boundKeysObj: StringValue = script:FindFirstChild("BoundKeys") :: StringValue
	if (not boundKeysObj) or (not boundKeysObj:IsA("StringValue")) then
		-- If object with correct name was found, but it's not a StringValue, destroy and replace
		if boundKeysObj then
			boundKeysObj:Destroy()
		end

		boundKeysObj = Instance.new("StringValue")
		boundKeysObj.Name = "BoundKeys"
		boundKeysObj.Value = "LeftShift,RightShift"
		boundKeysObj.Parent = script
	end

	if boundKeysObj then
		boundKeysObj.Changed:Connect(function(value)
			self:OnBoundKeysObjectChanged(value)
		end)
		self:OnBoundKeysObjectChanged(boundKeysObj.Value) -- Initial setup call
	end

	-- Watch for changes to user's ControlMode and ComputerMovementMode settings and update the feature availability accordingly
	GameSettings.Changed:Connect(function(property)
		if property == "ControlMode" or property == "ComputerMovementMode" then
			self:UpdateMouseLockAvailability()
		end
	end)

	-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
	PlayersService.LocalPlayer:GetPropertyChangedSignal("DevEnableMouseLock"):Connect(function()
		self:UpdateMouseLockAvailability()
	end)

	-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
	PlayersService.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
		self:UpdateMouseLockAvailability()
	end)

	self:UpdateMouseLockAvailability()

	return self
end

function MouseLockController:GetIsMouseLocked()
	return self.isMouseLocked
end

function MouseLockController:GetBindableToggleEvent()
	return self.mouseLockToggledEvent.Event
end

function MouseLockController:GetMouseLockOffset()
	local offsetValueObj: Vector3Value = script:FindFirstChild("CameraOffset") :: Vector3Value
	if offsetValueObj and offsetValueObj:IsA("Vector3Value") then
		return offsetValueObj.Value
	else
		-- If CameraOffset object was found but not correct type, destroy
		if offsetValueObj then
			offsetValueObj:Destroy()
		end
		offsetValueObj = Instance.new("Vector3Value")
		offsetValueObj.Name = "CameraOffset"
		offsetValueObj.Value = Vector3.new(1.75,0,0) -- Legacy Default Value
		offsetValueObj.Parent = script
	end

	if offsetValueObj and offsetValueObj.Value then
		return offsetValueObj.Value
	end

	return Vector3.new(1.75,0,0)
end

function MouseLockController:UpdateMouseLockAvailability()
	local devAllowsMouseLock = PlayersService.LocalPlayer.DevEnableMouseLock
	local devMovementModeIsScriptable = PlayersService.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable
	local userHasMouseLockModeEnabled = GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch
	local userHasClickToMoveEnabled =  GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove
	local MouseLockAvailable = devAllowsMouseLock and userHasMouseLockModeEnabled and not userHasClickToMoveEnabled and not devMovementModeIsScriptable

	if MouseLockAvailable~=self.enabled then
		self:EnableMouseLock(MouseLockAvailable)
	end
end

function MouseLockController:OnBoundKeysObjectChanged(newValue: string)
	self.boundKeys = {} -- Overriding defaults, note: possibly with nothing at all if boundKeysObj.Value is "" or contains invalid values
	for token in string.gmatch(newValue,"[^%s,]+") do
		for _, keyEnum in pairs(Enum.KeyCode:GetEnumItems()) do
			if token == keyEnum.Name then
				self.boundKeys[#self.boundKeys+1] = keyEnum :: Enum.KeyCode
				break
			end
		end
	end
	self:UnbindContextActions()
	self:BindContextActions()
end

--[[ Local Functions ]]--
function MouseLockController:OnMouseLockToggled()
	self.isMouseLocked = not self.isMouseLocked

	if self.isMouseLocked then
		local cursorImageValueObj: StringValue = script:FindFirstChild("CursorImage") :: StringValue
		if cursorImageValueObj and cursorImageValueObj:IsA("StringValue") and cursorImageValueObj.Value then
			self.savedMouseCursor = Mouse.Icon
			Mouse.Icon = cursorImageValueObj.Value
		else
			if cursorImageValueObj then
				cursorImageValueObj:Destroy()
			end
			cursorImageValueObj = Instance.new("StringValue")
			cursorImageValueObj.Name = "CursorImage"
			cursorImageValueObj.Value = DEFAULT_MOUSE_LOCK_CURSOR
			cursorImageValueObj.Parent = script
			self.savedMouseCursor = Mouse.Icon
			Mouse.Icon = DEFAULT_MOUSE_LOCK_CURSOR
		end
	else
		if self.savedMouseCursor then
			Mouse.Icon = self.savedMouseCursor
			self.savedMouseCursor = nil
		end
	end

	self.mouseLockToggledEvent:Fire()
end

function MouseLockController:DoMouseLockSwitch(name, state, input)
	if state == Enum.UserInputState.Begin then
		self:OnMouseLockToggled()
		return Enum.ContextActionResult.Sink
	end
	return Enum.ContextActionResult.Pass
end

function MouseLockController:BindContextActions()
	ContextActionService:BindActionAtPriority(CONTEXT_ACTION_NAME, function(name, state, input)
		return self:DoMouseLockSwitch(name, state, input)
	end, false, MOUSELOCK_ACTION_PRIORITY, unpack(self.boundKeys))
end

function MouseLockController:UnbindContextActions()
	ContextActionService:UnbindAction(CONTEXT_ACTION_NAME)
end

function MouseLockController:IsMouseLocked(): boolean
	return self.enabled and self.isMouseLocked
end

function MouseLockController:EnableMouseLock(enable: boolean)
	if enable ~= self.enabled then

		self.enabled = enable

		if self.enabled then
			-- Enabling the mode
			self:BindContextActions()
		else
			-- Disabling
			-- Restore mouse cursor
			if Mouse.Icon~="" then
				Mouse.Icon = ""
			end

			self:UnbindContextActions()

			-- If the mode is disabled while being used, fire the event to toggle it off
			if self.isMouseLocked then
				self.mouseLockToggledEvent:Fire()
			end

			self.isMouseLocked = false
		end

	end
end

return MouseLockController
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="Decal" referent="RBX642bde29492f4dd4a093ceed430ff01e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Color3 name="Color3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="Face">5</token>
								<string name="Name">Decal</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="Texture"><url>rbxassetid://7565260410</url></Content>
								<float name="Transparency">0</float>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXf086685baa5d41ada96faa81d9e2e7f4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseOcclusion</string>
							<string name="ScriptGuid">{738da3c1-47fb-4d59-a0ae-53f58598cfd5}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	BaseOcclusion - Abstract base class for character occlusion control modules
	2018 Camera Update - AllYourBlox
--]]

--[[ The Module ]]--
local BaseOcclusion = {}
BaseOcclusion.__index = BaseOcclusion
setmetatable(BaseOcclusion, {
	__call = function(_, ...)
		return BaseOcclusion.new(...)
	end
})

function BaseOcclusion.new()
	local self = setmetatable({}, BaseOcclusion)
	return self
end

-- Called when character is added
function BaseOcclusion:CharacterAdded(char: Model, player: Player)
end

-- Called when character is about to be removed
function BaseOcclusion:CharacterRemoving(char: Model, player: Player)
end

function BaseOcclusion:OnCameraSubjectChanged(newSubject)
end

--[[ Derived classes are required to override and implement all of the following functions ]]--
function BaseOcclusion:GetOcclusionMode(): Enum.DevCameraOcclusionMode?
	-- Must be overridden in derived classes to return an Enum.DevCameraOcclusionMode value
	warn("BaseOcclusion GetOcclusionMode must be overridden by derived classes")
	return nil
end

function BaseOcclusion:Enable(enabled: boolean)
	warn("BaseOcclusion Enable must be overridden by derived classes")
end

function BaseOcclusion:Update(dt: number, desiredCameraCFrame: CFrame, desiredCameraFocus: CFrame)
	warn("BaseOcclusion Update must be overridden by derived classes")
	return desiredCameraCFrame, desiredCameraFocus
end

return BaseOcclusion
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXa6514191e5c34f9db7ac1f573b517c14">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TransparencyController</string>
							<string name="ScriptGuid">{920f7954-d407-430f-a4ab-128347949eb1}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	TransparencyController - Manages transparency of player character at close camera-to-subject distances
	2018 Camera Update - AllYourBlox
--]]

local MAX_TWEEN_RATE = 2.8 -- per second

local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ The Module ]]--
local TransparencyController = {}
TransparencyController.__index = TransparencyController

function TransparencyController.new()
	local self = setmetatable({}, TransparencyController)

	self.lastUpdate = tick()
	self.transparencyDirty = false
	self.enabled = false
	self.lastTransparency = nil

	self.descendantAddedConn, self.descendantRemovingConn = nil, nil
	self.toolDescendantAddedConns = {}
	self.toolDescendantRemovingConns = {}
	self.cachedParts = {}

	return self
end


function TransparencyController:HasToolAncestor(object: Instance)
	if object.Parent == nil then return false end
	return object.Parent:IsA('Tool') or self:HasToolAncestor(object.Parent)
end

function TransparencyController:IsValidPartToModify(part: BasePart)
	if part:IsA('BasePart') or part:IsA('Decal') then
		return not self:HasToolAncestor(part)
	end
	return false
end

function TransparencyController:CachePartsRecursive(object)
	if object then
		if self:IsValidPartToModify(object) then
			self.cachedParts[object] = true
			self.transparencyDirty = true
		end
		for _, child in pairs(object:GetChildren()) do
			self:CachePartsRecursive(child)
		end
	end
end

function TransparencyController:TeardownTransparency()
	for child, _ in pairs(self.cachedParts) do
		child.LocalTransparencyModifier = 0
	end
	self.cachedParts = {}
	self.transparencyDirty = true
	self.lastTransparency = nil

	if self.descendantAddedConn then
		self.descendantAddedConn:disconnect()
		self.descendantAddedConn = nil
	end
	if self.descendantRemovingConn then
		self.descendantRemovingConn:disconnect()
		self.descendantRemovingConn = nil
	end
	for object, conn in pairs(self.toolDescendantAddedConns) do
		conn:Disconnect()
		self.toolDescendantAddedConns[object] = nil
	end
	for object, conn in pairs(self.toolDescendantRemovingConns) do
		conn:Disconnect()
		self.toolDescendantRemovingConns[object] = nil
	end
end

function TransparencyController:SetupTransparency(character)
	self:TeardownTransparency()

	if self.descendantAddedConn then self.descendantAddedConn:disconnect() end
	self.descendantAddedConn = character.DescendantAdded:Connect(function(object)
		-- This is a part we want to invisify
		if self:IsValidPartToModify(object) then
			self.cachedParts[object] = true
			self.transparencyDirty = true
		-- There is now a tool under the character
		elseif object:IsA('Tool') then
			if self.toolDescendantAddedConns[object] then self.toolDescendantAddedConns[object]:Disconnect() end
			self.toolDescendantAddedConns[object] = object.DescendantAdded:Connect(function(toolChild)
				self.cachedParts[toolChild] = nil
				if toolChild:IsA('BasePart') or toolChild:IsA('Decal') then
					-- Reset the transparency
					toolChild.LocalTransparencyModifier = 0
				end
			end)
			if self.toolDescendantRemovingConns[object] then self.toolDescendantRemovingConns[object]:disconnect() end
			self.toolDescendantRemovingConns[object] = object.DescendantRemoving:Connect(function(formerToolChild)
				wait() -- wait for new parent
				if character and formerToolChild and formerToolChild:IsDescendantOf(character) then
					if self:IsValidPartToModify(formerToolChild) then
						self.cachedParts[formerToolChild] = true
						self.transparencyDirty = true
					end
				end
			end)
		end
	end)
	if self.descendantRemovingConn then self.descendantRemovingConn:disconnect() end
	self.descendantRemovingConn = character.DescendantRemoving:connect(function(object)
		if self.cachedParts[object] then
			self.cachedParts[object] = nil
			-- Reset the transparency
			object.LocalTransparencyModifier = 0
		end
	end)
	self:CachePartsRecursive(character)
end


function TransparencyController:Enable(enable: boolean)
	if self.enabled ~= enable then
		self.enabled = enable
		self:Update()
	end
end

function TransparencyController:SetSubject(subject)
	local character = nil
	if subject and subject:IsA("Humanoid") then
		character = subject.Parent
	end
	if subject and subject:IsA("VehicleSeat") and subject.Occupant then
		character = subject.Occupant.Parent
	end
	if character then
		self:SetupTransparency(character)
	else
		self:TeardownTransparency()
	end
end

function TransparencyController:Update()
	local instant = false
	local now = tick()
	local currentCamera = workspace.CurrentCamera

	if currentCamera then
		local transparency = 0
		if not self.enabled then
			instant = true
		else
			local distance = (currentCamera.Focus.p - currentCamera.CoordinateFrame.p).magnitude
			transparency = (distance<2) and (1.0-(distance-0.5)/1.5) or 0 --(7 - distance) / 5
			if transparency < 0.5 then
				transparency = 0
			end

			if self.lastTransparency then
				local deltaTransparency = transparency - self.lastTransparency

				-- Don't tween transparency if it is instant or your character was fully invisible last frame
				if not instant and transparency < 1 and self.lastTransparency < 0.95 then
					local maxDelta = MAX_TWEEN_RATE * (now - self.lastUpdate)
					deltaTransparency = math.clamp(deltaTransparency, -maxDelta, maxDelta)
				end
				transparency = self.lastTransparency + deltaTransparency
			else
				self.transparencyDirty = true
			end

			transparency = math.clamp(Util.Round(transparency, 2), 0, 1)
		end

		if self.transparencyDirty or self.lastTransparency ~= transparency then
			for child, _ in pairs(self.cachedParts) do
				child.LocalTransparencyModifier = transparency
			end
			self.transparencyDirty = false
			self.lastTransparency = transparency
		end
	end
	self.lastUpdate = now
end

return TransparencyController
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4feb45e7a4394af2804ec6ed0723a3c8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BaseCamera</string>
							<string name="ScriptGuid">{a8531365-4bd7-48de-8be5-a2170fc88675}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	BaseCamera - Abstract base class for camera control modules
	2018 Camera Update - AllYourBlox
--]]

--[[ Local Constants ]]--
local UNIT_Z = Vector3.new(0,0,1)
local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane

local DEFAULT_DISTANCE = 12.5	-- Studs
local PORTRAIT_DEFAULT_DISTANCE = 25		-- Studs
local FIRST_PERSON_DISTANCE_THRESHOLD = 1.0 -- Below this value, snap into first person

-- Note: DotProduct check in CoordinateFrame::lookAt() prevents using values within about
-- 8.11 degrees of the +/- Y axis, that's why these limits are currently 80 degrees
local MIN_Y = math.rad(-80)
local MAX_Y = math.rad(80)

local VR_ANGLE = math.rad(15)
local VR_LOW_INTENSITY_ROTATION = Vector2.new(math.rad(15), 0)
local VR_HIGH_INTENSITY_ROTATION = Vector2.new(math.rad(45), 0)
local VR_LOW_INTENSITY_REPEAT = 0.1
local VR_HIGH_INTENSITY_REPEAT = 0.4

local ZERO_VECTOR2 = Vector2.new(0,0)
local ZERO_VECTOR3 = Vector3.new(0,0,0)

local SEAT_OFFSET = Vector3.new(0,5,0)
local VR_SEAT_OFFSET = Vector3.new(0,4,0)
local HEAD_OFFSET = Vector3.new(0,1.5,0)
local R15_HEAD_OFFSET = Vector3.new(0, 1.5, 0)
local R15_HEAD_OFFSET_NO_SCALING = Vector3.new(0, 2, 0)
local HUMANOID_ROOT_PART_SIZE = Vector3.new(2, 2, 1)

local GAMEPAD_ZOOM_STEP_1 = 0
local GAMEPAD_ZOOM_STEP_2 = 10
local GAMEPAD_ZOOM_STEP_3 = 20

local ZOOM_SENSITIVITY_CURVATURE = 0.5
local FIRST_PERSON_DISTANCE_MIN = 0.5

local Util = require(script.Parent:WaitForChild("CameraUtils"))
local ZoomController = require(script.Parent:WaitForChild("ZoomController"))
local CameraToggleStateController = require(script.Parent:WaitForChild("CameraToggleStateController"))
local CameraInput = require(script.Parent:WaitForChild("CameraInput"))
local CameraUI = require(script.Parent:WaitForChild("CameraUI"))

--[[ Roblox Services ]]--
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local VRService = game:GetService("VRService")
local UserGameSettings = UserSettings():GetService("UserGameSettings")

local player = Players.LocalPlayer

--[[ The Module ]]--
local BaseCamera = {}
BaseCamera.__index = BaseCamera

function BaseCamera.new()
	local self = setmetatable({}, BaseCamera)

	-- So that derived classes have access to this
	self.FIRST_PERSON_DISTANCE_THRESHOLD = FIRST_PERSON_DISTANCE_THRESHOLD

	self.cameraType = nil
	self.cameraMovementMode = nil

	self.lastCameraTransform = nil
	self.lastUserPanCamera = tick()

	self.humanoidRootPart = nil
	self.humanoidCache = {}

	-- Subject and position on last update call
	self.lastSubject = nil
	self.lastSubjectPosition = Vector3.new(0, 5, 0)
	self.lastSubjectCFrame = CFrame.new(self.lastSubjectPosition)

	-- These subject distance members refer to the nominal camera-to-subject follow distance that the camera
	-- is trying to maintain, not the actual measured value.
	-- The default is updated when screen orientation or the min/max distances change,
	-- to be sure the default is always in range and appropriate for the orientation.
	self.defaultSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
	self.currentSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)

	self.inFirstPerson = false
	self.inMouseLockedMode = false
	self.portraitMode = false
	self.isSmallTouchScreen = false

	-- Used by modules which want to reset the camera angle on respawn.
	self.resetCameraAngle = true

	self.enabled = false

	-- Input Event Connections

	self.PlayerGui = nil

	self.cameraChangedConn = nil
	self.viewportSizeChangedConn = nil

	-- VR Support
	self.shouldUseVRRotation = false
	self.VRRotationIntensityAvailable = false
	self.lastVRRotationIntensityCheckTime = 0
	self.lastVRRotationTime = 0
	self.vrRotateKeyCooldown = {}
	self.cameraTranslationConstraints = Vector3.new(1, 1, 1)
	self.humanoidJumpOrigin = nil
	self.trackingHumanoid = nil
	self.cameraFrozen = false
	self.subjectStateChangedConn = nil

	self.gamepadZoomPressConnection = nil

	-- Mouse locked formerly known as shift lock mode
	self.mouseLockOffset = ZERO_VECTOR3

	-- Initialization things used to always execute at game load time, but now these camera modules are instantiated
	-- when needed, so the code here may run well after the start of the game

	if player.Character then
		self:OnCharacterAdded(player.Character)
	end

	player.CharacterAdded:Connect(function(char)
		self:OnCharacterAdded(char)
	end)

	if self.cameraChangedConn then self.cameraChangedConn:Disconnect() end
	self.cameraChangedConn = workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		self:OnCurrentCameraChanged()
	end)
	self:OnCurrentCameraChanged()

	if self.playerCameraModeChangeConn then self.playerCameraModeChangeConn:Disconnect() end
	self.playerCameraModeChangeConn = player:GetPropertyChangedSignal("CameraMode"):Connect(function()
		self:OnPlayerCameraPropertyChange()
	end)

	if self.minDistanceChangeConn then self.minDistanceChangeConn:Disconnect() end
	self.minDistanceChangeConn = player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(function()
		self:OnPlayerCameraPropertyChange()
	end)

	if self.maxDistanceChangeConn then self.maxDistanceChangeConn:Disconnect() end
	self.maxDistanceChangeConn = player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(function()
		self:OnPlayerCameraPropertyChange()
	end)

	if self.playerDevTouchMoveModeChangeConn then self.playerDevTouchMoveModeChangeConn:Disconnect() end
	self.playerDevTouchMoveModeChangeConn = player:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
		self:OnDevTouchMovementModeChanged()
	end)
	self:OnDevTouchMovementModeChanged() -- Init

	if self.gameSettingsTouchMoveMoveChangeConn then self.gameSettingsTouchMoveMoveChangeConn:Disconnect() end
	self.gameSettingsTouchMoveMoveChangeConn = UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
		self:OnGameSettingsTouchMovementModeChanged()
	end)
	self:OnGameSettingsTouchMovementModeChanged() -- Init

	UserGameSettings:SetCameraYInvertVisible()
	UserGameSettings:SetGamepadCameraSensitivityVisible()

	self.hasGameLoaded = game:IsLoaded()
	if not self.hasGameLoaded then
		self.gameLoadedConn = game.Loaded:Connect(function()
			self.hasGameLoaded = true
			self.gameLoadedConn:Disconnect()
			self.gameLoadedConn = nil
		end)
	end

	self:OnPlayerCameraPropertyChange()

	return self
end

function BaseCamera:GetModuleName()
	return "BaseCamera"
end

function BaseCamera:OnCharacterAdded(char)
	self.resetCameraAngle = self.resetCameraAngle or self:GetEnabled()
	self.humanoidRootPart = nil
	if UserInputService.TouchEnabled then
		self.PlayerGui = player:WaitForChild("PlayerGui")
		for _, child in ipairs(char:GetChildren()) do
			if child:IsA("Tool") then
				self.isAToolEquipped = true
			end
		end
		char.ChildAdded:Connect(function(child)
			if child:IsA("Tool") then
				self.isAToolEquipped = true
			end
		end)
		char.ChildRemoved:Connect(function(child)
			if child:IsA("Tool") then
				self.isAToolEquipped = false
			end
		end)
	end
end

function BaseCamera:GetHumanoidRootPart(): BasePart
	if not self.humanoidRootPart then
		if player.Character then
			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				self.humanoidRootPart = humanoid.RootPart
			end
		end
	end
	return self.humanoidRootPart
end

function BaseCamera:GetBodyPartToFollow(humanoid: Humanoid, isDead: boolean) -- BasePart
	-- If the humanoid is dead, prefer the head part if one still exists as a sibling of the humanoid
	if humanoid:GetState() == Enum.HumanoidStateType.Dead then
		local character = humanoid.Parent
		if character and character:IsA("Model") then
			return character:FindFirstChild("Head") or humanoid.RootPart
		end
	end

	return humanoid.RootPart
end

function BaseCamera:GetSubjectCFrame(): CFrame
	local result = self.lastSubjectCFrame
	local camera = workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject

	if not cameraSubject then
		return result
	end

	if cameraSubject:IsA("Humanoid") then
		local humanoid = cameraSubject
		local humanoidIsDead = humanoid:GetState() == Enum.HumanoidStateType.Dead

		if VRService.VREnabled and humanoidIsDead and humanoid == self.lastSubject then
			result = self.lastSubjectCFrame
		else
			local bodyPartToFollow = humanoid.RootPart

			-- If the humanoid is dead, prefer their head part as a follow target, if it exists
			if humanoidIsDead then
				if humanoid.Parent and humanoid.Parent:IsA("Model") then
					bodyPartToFollow = humanoid.Parent:FindFirstChild("Head") or bodyPartToFollow
				end
			end

			if bodyPartToFollow and bodyPartToFollow:IsA("BasePart") then
				local heightOffset
				if humanoid.RigType == Enum.HumanoidRigType.R15 then
					if humanoid.AutomaticScalingEnabled then
						heightOffset = R15_HEAD_OFFSET

						local rootPart = humanoid.RootPart
						if bodyPartToFollow == rootPart then
							local rootPartSizeOffset = (rootPart.Size.Y - HUMANOID_ROOT_PART_SIZE.Y)/2
							heightOffset = heightOffset + Vector3.new(0, rootPartSizeOffset, 0)
						end
					else
						heightOffset = R15_HEAD_OFFSET_NO_SCALING
					end
				else
					heightOffset = HEAD_OFFSET
				end

				if humanoidIsDead then
					heightOffset = ZERO_VECTOR3
				end

				result = bodyPartToFollow.CFrame*CFrame.new(heightOffset + humanoid.CameraOffset)
			end
		end

	elseif cameraSubject:IsA("BasePart") then
		result = cameraSubject.CFrame

	elseif cameraSubject:IsA("Model") then
		-- Model subjects are expected to have a PrimaryPart to determine orientation
		if cameraSubject.PrimaryPart then
			result = cameraSubject:GetPrimaryPartCFrame()
		else
			result = CFrame.new()
		end
	end

	if result then
		self.lastSubjectCFrame = result
	end

	return result
end

function BaseCamera:GetSubjectVelocity(): Vector3
	local camera = workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject

	if not cameraSubject then
		return ZERO_VECTOR3
	end

	if cameraSubject:IsA("BasePart") then
		return cameraSubject.Velocity

	elseif cameraSubject:IsA("Humanoid") then
		local rootPart = cameraSubject.RootPart

		if rootPart then
			return rootPart.Velocity
		end

	elseif cameraSubject:IsA("Model") then
		local primaryPart = cameraSubject.PrimaryPart

		if primaryPart then
			return primaryPart.Velocity
		end
	end

	return ZERO_VECTOR3
end

function BaseCamera:GetSubjectRotVelocity(): Vector3
	local camera = workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject

	if not cameraSubject then
		return ZERO_VECTOR3
	end

	if cameraSubject:IsA("BasePart") then
		return cameraSubject.RotVelocity

	elseif cameraSubject:IsA("Humanoid") then
		local rootPart = cameraSubject.RootPart

		if rootPart then
			return rootPart.RotVelocity
		end

	elseif cameraSubject:IsA("Model") then
		local primaryPart = cameraSubject.PrimaryPart

		if primaryPart then
			return primaryPart.RotVelocity
		end
	end

	return ZERO_VECTOR3
end

function BaseCamera:StepZoom()
	local zoom: number = self.currentSubjectDistance
	local zoomDelta: number = CameraInput.getZoomDelta()

	if math.abs(zoomDelta) > 0 then
		local newZoom

		if zoomDelta > 0 then
			newZoom = zoom + zoomDelta*(1 + zoom*ZOOM_SENSITIVITY_CURVATURE)
			newZoom = math.max(newZoom, self.FIRST_PERSON_DISTANCE_THRESHOLD)
		else
			newZoom = (zoom + zoomDelta)/(1 - zoomDelta*ZOOM_SENSITIVITY_CURVATURE)
			newZoom = math.max(newZoom, FIRST_PERSON_DISTANCE_MIN)
		end

		if newZoom < self.FIRST_PERSON_DISTANCE_THRESHOLD then
			newZoom = FIRST_PERSON_DISTANCE_MIN
		end

		self:SetCameraToSubjectDistance(newZoom)
	end
	
	return ZoomController.GetZoomRadius()
end

function BaseCamera:GetSubjectPosition(): Vector3
	local result = self.lastSubjectPosition
	local camera = game.Workspace.CurrentCamera
	local cameraSubject = camera and camera.CameraSubject

	if cameraSubject then
		if cameraSubject:IsA("Humanoid") then
			local humanoid = cameraSubject
			local humanoidIsDead = humanoid:GetState() == Enum.HumanoidStateType.Dead

			if VRService.VREnabled and humanoidIsDead and humanoid == self.lastSubject then
				result = self.lastSubjectPosition
			else
				local bodyPartToFollow = humanoid.RootPart

				-- If the humanoid is dead, prefer their head part as a follow target, if it exists
				if humanoidIsDead then
					if humanoid.Parent and humanoid.Parent:IsA("Model") then
						bodyPartToFollow = humanoid.Parent:FindFirstChild("Head") or bodyPartToFollow
					end
				end

				if bodyPartToFollow and bodyPartToFollow:IsA("BasePart") then
					local heightOffset
					if humanoid.RigType == Enum.HumanoidRigType.R15 then
						if humanoid.AutomaticScalingEnabled then
							heightOffset = R15_HEAD_OFFSET
							if bodyPartToFollow == humanoid.RootPart then
								local rootPartSizeOffset = (humanoid.RootPart.Size.Y/2) - (HUMANOID_ROOT_PART_SIZE.Y/2)
								heightOffset = heightOffset + Vector3.new(0, rootPartSizeOffset, 0)
							end
						else
							heightOffset = R15_HEAD_OFFSET_NO_SCALING
						end
					else
						heightOffset = HEAD_OFFSET
					end

					if humanoidIsDead then
						heightOffset = ZERO_VECTOR3
					end

					result = bodyPartToFollow.CFrame.p + bodyPartToFollow.CFrame:vectorToWorldSpace(heightOffset + humanoid.CameraOffset)
				end
			end

		elseif cameraSubject:IsA("VehicleSeat") then
			local offset = SEAT_OFFSET
			if VRService.VREnabled then
				offset = VR_SEAT_OFFSET
			end
			result = cameraSubject.CFrame.p + cameraSubject.CFrame:vectorToWorldSpace(offset)
		elseif cameraSubject:IsA("SkateboardPlatform") then
			result = cameraSubject.CFrame.p + SEAT_OFFSET
		elseif cameraSubject:IsA("BasePart") then
			result = cameraSubject.CFrame.p
		elseif cameraSubject:IsA("Model") then
			if cameraSubject.PrimaryPart then
				result = cameraSubject:GetPrimaryPartCFrame().p
			else
				result = cameraSubject:GetModelCFrame().p
			end
		end
	else
		-- cameraSubject is nil
		-- Note: Previous RootCamera did not have this else case and let self.lastSubject and self.lastSubjectPosition
		-- both get set to nil in the case of cameraSubject being nil. This function now exits here to preserve the
		-- last set valid values for these, as nil values are not handled cases
		return
	end

	self.lastSubject = cameraSubject
	self.lastSubjectPosition = result

	return result
end

function BaseCamera:UpdateDefaultSubjectDistance()
	if self.portraitMode then
		self.defaultSubjectDistance = math.clamp(PORTRAIT_DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
	else
		self.defaultSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
	end
end

function BaseCamera:OnViewportSizeChanged()
	local camera = game.Workspace.CurrentCamera
	local size = camera.ViewportSize
	self.portraitMode = size.X < size.Y
	self.isSmallTouchScreen = UserInputService.TouchEnabled and (size.Y < 500 or size.X < 700)

	self:UpdateDefaultSubjectDistance()
end

-- Listener for changes to workspace.CurrentCamera
function BaseCamera:OnCurrentCameraChanged()
	if UserInputService.TouchEnabled then
		if self.viewportSizeChangedConn then
			self.viewportSizeChangedConn:Disconnect()
			self.viewportSizeChangedConn = nil
		end

		local newCamera = game.Workspace.CurrentCamera

		if newCamera then
			self:OnViewportSizeChanged()
			self.viewportSizeChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
				self:OnViewportSizeChanged()
			end)
		end
	end

	-- VR support additions
	if self.cameraSubjectChangedConn then
		self.cameraSubjectChangedConn:Disconnect()
		self.cameraSubjectChangedConn = nil
	end

	local camera = game.Workspace.CurrentCamera
	if camera then
		self.cameraSubjectChangedConn = camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
			self:OnNewCameraSubject()
		end)
		self:OnNewCameraSubject()
	end
end

function BaseCamera:OnDynamicThumbstickEnabled()
	if UserInputService.TouchEnabled then
		self.isDynamicThumbstickEnabled = true
	end
end

function BaseCamera:OnDynamicThumbstickDisabled()
	self.isDynamicThumbstickEnabled = false
end

function BaseCamera:OnGameSettingsTouchMovementModeChanged()
	if player.DevTouchMovementMode == Enum.DevTouchMovementMode.UserChoice then
		if (UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.DynamicThumbstick
			or UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.Default) then
			self:OnDynamicThumbstickEnabled()
		else
			self:OnDynamicThumbstickDisabled()
		end
	end
end

function BaseCamera:OnDevTouchMovementModeChanged()
	if player.DevTouchMovementMode == Enum.DevTouchMovementMode.DynamicThumbstick then
		self:OnDynamicThumbstickEnabled()
	else
		self:OnGameSettingsTouchMovementModeChanged()
	end
end

function BaseCamera:OnPlayerCameraPropertyChange()
	-- This call forces re-evaluation of player.CameraMode and clamping to min/max distance which may have changed
	self:SetCameraToSubjectDistance(self.currentSubjectDistance)
end

function BaseCamera:GetCameraHeight()
	if VRService.VREnabled and not self.inFirstPerson then
		return math.sin(VR_ANGLE) * self.currentSubjectDistance
	end
	return 0
end

function BaseCamera:InputTranslationToCameraAngleChange(translationVector, sensitivity)
	return translationVector * sensitivity
end

function BaseCamera:GamepadZoomPress()
	local dist = self:GetCameraToSubjectDistance()

	if dist > (GAMEPAD_ZOOM_STEP_2 + GAMEPAD_ZOOM_STEP_3)/2 then
		self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_2)
	elseif dist > (GAMEPAD_ZOOM_STEP_1 + GAMEPAD_ZOOM_STEP_2)/2 then
		self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_1)
	else
		self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_3)
	end
end

function BaseCamera:Enable(enable: boolean)
	if self.enabled ~= enable then
		self.enabled = enable
		if self.enabled then
			CameraInput.setInputEnabled(true)

			self.gamepadZoomPressConnection = CameraInput.gamepadZoomPress:Connect(function()
				self:GamepadZoomPress()
			end)

			if player.CameraMode == Enum.CameraMode.LockFirstPerson then
				self.currentSubjectDistance = 0.5
				if not self.inFirstPerson then
					self:EnterFirstPerson()
				end
			end
		else
			CameraInput.setInputEnabled(false)

			if self.gamepadZoomPressConnection then
				self.gamepadZoomPressConnection:Disconnect()
				self.gamepadZoomPressConnection = nil
			end
			-- Clean up additional event listeners and reset a bunch of properties
			self:Cleanup()
		end
	end
end

function BaseCamera:GetEnabled(): boolean
	return self.enabled
end

function BaseCamera:Cleanup()
	if self.subjectStateChangedConn then
		self.subjectStateChangedConn:Disconnect()
		self.subjectStateChangedConn = nil
	end
	if self.viewportSizeChangedConn then
		self.viewportSizeChangedConn:Disconnect()
		self.viewportSizeChangedConn = nil
	end

	self.lastCameraTransform = nil
	self.lastSubjectCFrame = nil

	-- Unlock mouse for example if right mouse button was being held down
	if UserInputService.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	end
end

function BaseCamera:UpdateMouseBehavior()
	local blockToggleDueToClickToMove = UserGameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove

	if self.isCameraToggle and blockToggleDueToClickToMove == false then
		CameraUI.setCameraModeToastEnabled(true)
		CameraInput.enableCameraToggleInput()
		CameraToggleStateController(self.inFirstPerson)
	else
		CameraUI.setCameraModeToastEnabled(false)
		CameraInput.disableCameraToggleInput()

		-- first time transition to first person mode or mouse-locked third person
		if self.inFirstPerson or self.inMouseLockedMode then
			UserGameSettings.RotationType = Enum.RotationType.CameraRelative
			UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
		else
			UserGameSettings.RotationType = Enum.RotationType.MovementRelative
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end
	end
end

function BaseCamera:UpdateForDistancePropertyChange()
	-- Calling this setter with the current value will force checking that it is still
	-- in range after a change to the min/max distance limits
	self:SetCameraToSubjectDistance(self.currentSubjectDistance)
end

function BaseCamera:SetCameraToSubjectDistance(desiredSubjectDistance: number): number
	local lastSubjectDistance = self.currentSubjectDistance

	-- By default, camera modules will respect LockFirstPerson and override the currentSubjectDistance with 0
	-- regardless of what Player.CameraMinZoomDistance is set to, so that first person can be made
	-- available by the developer without needing to allow players to mousewheel dolly into first person.
	-- Some modules will override this function to remove or change first-person capability.
	if player.CameraMode == Enum.CameraMode.LockFirstPerson then
		self.currentSubjectDistance = 0.5
		if not self.inFirstPerson then
			self:EnterFirstPerson()
		end
	else
		local newSubjectDistance = math.clamp(desiredSubjectDistance, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
		if newSubjectDistance < FIRST_PERSON_DISTANCE_THRESHOLD then
			self.currentSubjectDistance = 0.5
			if not self.inFirstPerson then
				self:EnterFirstPerson()
			end
		else
			self.currentSubjectDistance = newSubjectDistance
			if self.inFirstPerson then
				self:LeaveFirstPerson()
			end
		end
	end

	-- Pass target distance and zoom direction to the zoom controller
	ZoomController.SetZoomParameters(self.currentSubjectDistance, math.sign(desiredSubjectDistance - lastSubjectDistance))

	-- Returned only for convenience to the caller to know the outcome
	return self.currentSubjectDistance
end

function BaseCamera:SetCameraType( cameraType )
	--Used by derived classes
	self.cameraType = cameraType
end

function BaseCamera:GetCameraType()
	return self.cameraType
end

-- Movement mode standardized to Enum.ComputerCameraMovementMode values
function BaseCamera:SetCameraMovementMode( cameraMovementMode )
	self.cameraMovementMode = cameraMovementMode
end

function BaseCamera:GetCameraMovementMode()
	return self.cameraMovementMode
end

function BaseCamera:SetIsMouseLocked(mouseLocked: boolean)
	self.inMouseLockedMode = mouseLocked
end

function BaseCamera:GetIsMouseLocked(): boolean
	return self.inMouseLockedMode
end

function BaseCamera:SetMouseLockOffset(offsetVector)
	self.mouseLockOffset = offsetVector
end

function BaseCamera:GetMouseLockOffset()
	return self.mouseLockOffset
end

function BaseCamera:InFirstPerson(): boolean
	return self.inFirstPerson
end

function BaseCamera:EnterFirstPerson()
	-- Overridden in ClassicCamera, the only module which supports FirstPerson
end

function BaseCamera:LeaveFirstPerson()
	-- Overridden in ClassicCamera, the only module which supports FirstPerson
end

-- Nominal distance, set by dollying in and out with the mouse wheel or equivalent, not measured distance
function BaseCamera:GetCameraToSubjectDistance(): number
	return self.currentSubjectDistance
end

-- Actual measured distance to the camera Focus point, which may be needed in special circumstances, but should
-- never be used as the starting point for updating the nominal camera-to-subject distance (self.currentSubjectDistance)
-- since that is a desired target value set only by mouse wheel (or equivalent) input, PopperCam, and clamped to min max camera distance
function BaseCamera:GetMeasuredDistanceToFocus(): number?
	local camera = game.Workspace.CurrentCamera
	if camera then
		return (camera.CoordinateFrame.p - camera.Focus.p).magnitude
	end
	return nil
end

function BaseCamera:GetCameraLookVector(): Vector3
	return game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame.lookVector or UNIT_Z
end

function BaseCamera:CalculateNewLookCFrameFromArg(suppliedLookVector: Vector3?, rotateInput: Vector2): CFrame
	local currLookVector: Vector3 = suppliedLookVector or self:GetCameraLookVector()
	local currPitchAngle = math.asin(currLookVector.y)
	local yTheta = math.clamp(rotateInput.y, -MAX_Y + currPitchAngle, -MIN_Y + currPitchAngle)
	local constrainedRotateInput = Vector2.new(rotateInput.x, yTheta)
	local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
	local newLookCFrame = CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)
	return newLookCFrame
end

function BaseCamera:CalculateNewLookVectorFromArg(suppliedLookVector: Vector3?, rotateInput: Vector2): Vector3
	local newLookCFrame = self:CalculateNewLookCFrameFromArg(suppliedLookVector, rotateInput)
	return newLookCFrame.lookVector
end

function BaseCamera:CalculateNewLookVectorVRFromArg(rotateInput: Vector2): Vector3
	local subjectPosition: Vector3 = self:GetSubjectPosition()
	local vecToSubject: Vector3 = (subjectPosition - game.Workspace.CurrentCamera.CFrame.p)
	local currLookVector: Vector3 = (vecToSubject * X1_Y0_Z1).unit
	local vrRotateInput: Vector2 = Vector2.new(rotateInput.x, 0)
	local startCFrame: CFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
	local yawRotatedVector: Vector3 = (CFrame.Angles(0, -vrRotateInput.x, 0) * startCFrame * CFrame.Angles(-vrRotateInput.y,0,0)).lookVector
	return (yawRotatedVector * X1_Y0_Z1).unit
end

function BaseCamera:GetHumanoid(): Humanoid?
	local character = player and player.Character
	if character then
		local resultHumanoid = self.humanoidCache[player]
		if resultHumanoid and resultHumanoid.Parent == character then
			return resultHumanoid
		else
			self.humanoidCache[player] = nil -- Bust Old Cache
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if humanoid then
				self.humanoidCache[player] = humanoid
			end
			return humanoid
		end
	end
	return nil
end

function BaseCamera:GetHumanoidPartToFollow(humanoid: Humanoid, humanoidStateType: Enum.HumanoidStateType) -- BasePart
	if humanoidStateType == Enum.HumanoidStateType.Dead then
		local character = humanoid.Parent
		if character then
			return character:FindFirstChild("Head") or humanoid.Torso
		else
			return humanoid.Torso
		end
	else
		return humanoid.Torso
	end
end

-- [[ VR Support Section ]] --

function BaseCamera:ApplyVRTransform()
	if not VRService.VREnabled then
		return
	end

	--we only want this to happen in first person VR
	local rootJoint = self.humanoidRootPart and self.humanoidRootPart:FindFirstChild("RootJoint")
	if not rootJoint then
		return
	end

	local cameraSubject = game.Workspace.CurrentCamera.CameraSubject
	local isInVehicle = cameraSubject and cameraSubject:IsA("VehicleSeat")

	if self.inFirstPerson and not isInVehicle then
		local vrFrame = VRService:GetUserCFrame(Enum.UserCFrame.Head)
		local vrRotation = vrFrame - vrFrame.p
		rootJoint.C0 = CFrame.new(vrRotation:vectorToObjectSpace(vrFrame.p)) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	else
		rootJoint.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	end
end

function BaseCamera:IsInFirstPerson()
	return self.inFirstPerson
end

function BaseCamera:ShouldUseVRRotation()
	if not VRService.VREnabled then
		return false
	end

	if not self.VRRotationIntensityAvailable and tick() - self.lastVRRotationIntensityCheckTime < 1 then
		return false
	end

	local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)
	self.VRRotationIntensityAvailable = success and vrRotationIntensity ~= nil
	self.lastVRRotationIntensityCheckTime = tick()

	self.shouldUseVRRotation = success and vrRotationIntensity ~= nil and vrRotationIntensity ~= "Smooth"

	return self.shouldUseVRRotation
end

function BaseCamera:GetVRRotationInput()
	local vrRotateSum = ZERO_VECTOR2
	local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)

	if not success then
		return
	end

	local vrGamepadRotation = ZERO_VECTOR2
	local delayExpired = (tick() - self.lastVRRotationTime) >= self:GetRepeatDelayValue(vrRotationIntensity)

	if math.abs(vrGamepadRotation.x) >= self:GetActivateValue() then
		if (delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2]) then
			local sign = 1
			if vrGamepadRotation.x < 0 then
				sign = -1
			end
			vrRotateSum = vrRotateSum + self:GetRotateAmountValue(vrRotationIntensity) * sign
			self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = true
		end
	elseif math.abs(vrGamepadRotation.x) < self:GetActivateValue() - 0.1 then
		self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = nil
	end

	self.vrRotateKeyCooldown[Enum.KeyCode.Left] = nil
	self.vrRotateKeyCooldown[Enum.KeyCode.Right] = nil

	if vrRotateSum ~= ZERO_VECTOR2 then
		self.lastVRRotationTime = tick()
	end

	return vrRotateSum
end

function BaseCamera:CancelCameraFreeze(keepConstraints: boolean)
	if not keepConstraints then
		self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 1, self.cameraTranslationConstraints.z)
	end
	if self.cameraFrozen then
		self.trackingHumanoid = nil
		self.cameraFrozen = false
	end
end

function BaseCamera:StartCameraFreeze(subjectPosition: Vector3, humanoidToTrack: Humanoid)
	if not self.cameraFrozen then
		self.humanoidJumpOrigin = subjectPosition
		self.trackingHumanoid = humanoidToTrack
		self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 0, self.cameraTranslationConstraints.z)
		self.cameraFrozen = true
	end
end

function BaseCamera:OnNewCameraSubject()
	if self.subjectStateChangedConn then
		self.subjectStateChangedConn:Disconnect()
		self.subjectStateChangedConn = nil
	end

	local humanoid = workspace.CurrentCamera and workspace.CurrentCamera.CameraSubject
	if self.trackingHumanoid ~= humanoid then
		self:CancelCameraFreeze()
	end
	if humanoid and humanoid:IsA("Humanoid") then
		self.subjectStateChangedConn = humanoid.StateChanged:Connect(function(oldState, newState)
			if VRService.VREnabled and newState == Enum.HumanoidStateType.Jumping and not self.inFirstPerson then
				self:StartCameraFreeze(self:GetSubjectPosition(), humanoid)
			elseif newState ~= Enum.HumanoidStateType.Jumping and newState ~= Enum.HumanoidStateType.Freefall then
				self:CancelCameraFreeze(true)
			end
		end)
	end
end

function BaseCamera:GetVRFocus(subjectPosition, timeDelta)
	local lastFocus = self.LastCameraFocus or subjectPosition
	if not self.cameraFrozen then
		self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, math.min(1, self.cameraTranslationConstraints.y + 0.42 * timeDelta), self.cameraTranslationConstraints.z)
	end

	local newFocus
	if self.cameraFrozen and self.humanoidJumpOrigin and self.humanoidJumpOrigin.y > lastFocus.y then
		newFocus = CFrame.new(Vector3.new(subjectPosition.x, math.min(self.humanoidJumpOrigin.y, lastFocus.y + 5 * timeDelta), subjectPosition.z))
	else
		newFocus = CFrame.new(Vector3.new(subjectPosition.x, lastFocus.y, subjectPosition.z):lerp(subjectPosition, self.cameraTranslationConstraints.y))
	end

	if self.cameraFrozen then
		-- No longer in 3rd person
		if self.inFirstPerson then -- not VRService.VREnabled
			self:CancelCameraFreeze()
		end
		-- This case you jumped off a cliff and want to keep your character in view
		-- 0.5 is to fix floating point error when not jumping off cliffs
		if self.humanoidJumpOrigin and subjectPosition.y < (self.humanoidJumpOrigin.y - 0.5) then
			self:CancelCameraFreeze()
		end
	end

	return newFocus
end

function BaseCamera:GetRotateAmountValue(vrRotationIntensity: string?)
	vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
	if vrRotationIntensity then
		if vrRotationIntensity == "Low" then
			return VR_LOW_INTENSITY_ROTATION
		elseif vrRotationIntensity == "High" then
			return VR_HIGH_INTENSITY_ROTATION
		end
	end
	return ZERO_VECTOR2
end

function BaseCamera:GetRepeatDelayValue(vrRotationIntensity: string?)
	vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
	if vrRotationIntensity then
		if vrRotationIntensity == "Low" then
			return VR_LOW_INTENSITY_REPEAT
		elseif vrRotationIntensity == "High" then
			return VR_HIGH_INTENSITY_REPEAT
		end
	end
	return 0
end

function BaseCamera:Update(dt)
	error("BaseCamera:Update() This is a virtual function that should never be getting called.", 2)
end

return BaseCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXa8ff280171074bb68568803a6973f991">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ZoomController</string>
							<string name="ScriptGuid">{70ac5323-4616-41d5-ba12-e7c9adbe86fc}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Zoom
-- Controls the distance between the focus and the camera.

local ZOOM_STIFFNESS = 4.5
local ZOOM_DEFAULT = 12.5
local ZOOM_ACCELERATION = 0.0375

local MIN_FOCUS_DIST = 0.5
local DIST_OPAQUE = 1

local Popper = require(script:WaitForChild("Popper"))

local clamp = math.clamp
local exp = math.exp
local min = math.min
local max = math.max
local pi = math.pi

local cameraMinZoomDistance, cameraMaxZoomDistance do
	local Player = game:GetService("Players").LocalPlayer

	local function updateBounds()
		cameraMinZoomDistance = Player.CameraMinZoomDistance
		cameraMaxZoomDistance = Player.CameraMaxZoomDistance
	end

	updateBounds()

	Player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(updateBounds)
	Player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(updateBounds)
end

local ConstrainedSpring = {} do
	ConstrainedSpring.__index = ConstrainedSpring

	function ConstrainedSpring.new(freq: number, x: number, minValue: number, maxValue: number)
		x = clamp(x, minValue, maxValue)
		return setmetatable({
			freq = freq, -- Undamped frequency (Hz)
			x = x, -- Current position
			v = 0, -- Current velocity
			minValue = minValue, -- Minimum bound
			maxValue = maxValue, -- Maximum bound
			goal = x, -- Goal position
		}, ConstrainedSpring)
	end

	function ConstrainedSpring:Step(dt: number)
		local freq = self.freq :: number * 2 * pi -- Convert from Hz to rad/s
		local x: number = self.x
		local v: number = self.v
		local minValue: number = self.minValue
		local maxValue: number = self.maxValue
		local goal: number = self.goal

		-- Solve the spring ODE for position and velocity after time t, assuming critical damping:
		--   2*f*x'[t] + x''[t] = f^2*(g - x[t])
		-- Knowns are x[0] and x'[0].
		-- Solve for x[t] and x'[t].

		local offset = goal - x
		local step = freq*dt
		local decay = exp(-step)

		local x1 = goal + (v*dt - offset*(step + 1))*decay
		local v1 = ((offset*freq - v)*step + v)*decay

		-- Constrain
		if x1 < minValue then
			x1 = minValue
			v1 = 0
		elseif x1 > maxValue then
			x1 = maxValue
			v1 = 0
		end

		self.x = x1
		self.v = v1

		return x1
	end
end

local zoomSpring = ConstrainedSpring.new(ZOOM_STIFFNESS, ZOOM_DEFAULT, MIN_FOCUS_DIST, cameraMaxZoomDistance)

local function stepTargetZoom(z: number, dz: number, zoomMin: number, zoomMax: number)
	z = clamp(z + dz*(1 + z*ZOOM_ACCELERATION), zoomMin, zoomMax)
	if z < DIST_OPAQUE then
		z = dz <= 0 and zoomMin or DIST_OPAQUE
	end
	return z
end

local zoomDelta = 0

local Zoom = {} do
	function Zoom.Update(renderDt: number, focus: CFrame, extrapolation)
		local poppedZoom = math.huge

		if zoomSpring.goal > DIST_OPAQUE then
			-- Make a pessimistic estimate of zoom distance for this step without accounting for poppercam
			local maxPossibleZoom = max(
				zoomSpring.x,
				stepTargetZoom(zoomSpring.goal, zoomDelta, cameraMinZoomDistance, cameraMaxZoomDistance)
			)

			-- Run the Popper algorithm on the feasible zoom range, [MIN_FOCUS_DIST, maxPossibleZoom]
			poppedZoom = Popper(
				focus*CFrame.new(0, 0, MIN_FOCUS_DIST),
				maxPossibleZoom - MIN_FOCUS_DIST,
				extrapolation
			) + MIN_FOCUS_DIST
		end

		zoomSpring.minValue = MIN_FOCUS_DIST
		zoomSpring.maxValue = min(cameraMaxZoomDistance, poppedZoom)

		return zoomSpring:Step(renderDt)
	end
	
	function Zoom.GetZoomRadius()
		return zoomSpring.x
	end

	function Zoom.SetZoomParameters(targetZoom, newZoomDelta)
		zoomSpring.goal = targetZoom
		zoomDelta = newZoomDelta
	end
end

return Zoom
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX3d9e589b898f4450822ce2a498b7d54f">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Popper</string>
								<string name="ScriptGuid">{fb1188c3-f405-4ad6-a671-f798be7e3869}</string>
								<ProtectedString name="Source"><![CDATA[--------------------------------------------------------------------------------
-- Popper.lua
-- Prevents your camera from clipping through walls.
--------------------------------------------------------------------------------

local Players = game:GetService("Players")

local camera = game.Workspace.CurrentCamera

local min = math.min
local tan = math.tan
local rad = math.rad
local inf = math.huge
local ray = Ray.new

local function getTotalTransparency(part)
	return 1 - (1 - part.Transparency)*(1 - part.LocalTransparencyModifier)
end

local function eraseFromEnd(t, toSize)
	for i = #t, toSize + 1, -1 do
		t[i] = nil
	end
end

local nearPlaneZ, projX, projY do
	local function updateProjection()
		local fov = rad(camera.FieldOfView)
		local view = camera.ViewportSize
		local ar = view.X/view.Y

		projY = 2*tan(fov/2)
		projX = ar*projY
	end

	camera:GetPropertyChangedSignal("FieldOfView"):Connect(updateProjection)
	camera:GetPropertyChangedSignal("ViewportSize"):Connect(updateProjection)

	updateProjection()

	nearPlaneZ = camera.NearPlaneZ
	camera:GetPropertyChangedSignal("NearPlaneZ"):Connect(function()
		nearPlaneZ = camera.NearPlaneZ
	end)
end

local blacklist = {} do
	local charMap = {}

	local function refreshIgnoreList()
		local n = 1
		blacklist = {}
		for _, character in pairs(charMap) do
			blacklist[n] = character
			n = n + 1
		end
	end

	local function playerAdded(player)
		local function characterAdded(character)
			charMap[player] = character
			refreshIgnoreList()
		end
		local function characterRemoving()
			charMap[player] = nil
			refreshIgnoreList()
		end

		player.CharacterAdded:Connect(characterAdded)
		player.CharacterRemoving:Connect(characterRemoving)
		if player.Character then
			characterAdded(player.Character)
		end
	end

	local function playerRemoving(player)
		charMap[player] = nil
		refreshIgnoreList()
	end

	Players.PlayerAdded:Connect(playerAdded)
	Players.PlayerRemoving:Connect(playerRemoving)

	for _, player in ipairs(Players:GetPlayers()) do
		playerAdded(player)
	end
	refreshIgnoreList()
end

--------------------------------------------------------------------------------------------
-- Popper uses the level geometry find an upper bound on subject-to-camera distance.
--
-- Hard limits are applied immediately and unconditionally. They are generally caused
-- when level geometry intersects with the near plane (with exceptions, see below).
--
-- Soft limits are only applied under certain conditions.
-- They are caused when level geometry occludes the subject without actually intersecting
-- with the near plane at the target distance.
--
-- Soft limits can be promoted to hard limits and hard limits can be demoted to soft limits.
-- We usually don"t want the latter to happen.
--
-- A soft limit will be promoted to a hard limit if an obstruction
-- lies between the current and target camera positions.
--------------------------------------------------------------------------------------------

local subjectRoot
local subjectPart

camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
	local subject = camera.CameraSubject
	if subject:IsA("Humanoid") then
		subjectPart = subject.RootPart
	elseif subject:IsA("BasePart") then
		subjectPart = subject
	else
		subjectPart = nil
	end
end)

local function canOcclude(part)
	-- Occluders must be:
	-- 1. Opaque
	-- 2. Interactable
	-- 3. Not in the same assembly as the subject

	return
		getTotalTransparency(part) < 0.25 and
		part.CanCollide and
		subjectRoot ~= (part:GetRootPart() or part) and
		not part:IsA("TrussPart")
end

-- Offsets for the volume visibility test
local SCAN_SAMPLE_OFFSETS = {
	Vector2.new( 0.4, 0.0),
	Vector2.new(-0.4, 0.0),
	Vector2.new( 0.0,-0.4),
	Vector2.new( 0.0, 0.4),
	Vector2.new( 0.0, 0.2),
}

-- Maximum number of rays that can be cast 
local QUERY_POINT_CAST_LIMIT = 64

--------------------------------------------------------------------------------
-- Piercing raycasts

local function getCollisionPoint(origin, dir)
	local originalSize = #blacklist
	repeat
		local hitPart, hitPoint = workspace:FindPartOnRayWithIgnoreList(
			ray(origin, dir), blacklist, false, true
		)

		if hitPart then
			if hitPart.CanCollide then
				eraseFromEnd(blacklist, originalSize)
				return hitPoint, true
			end
			blacklist[#blacklist + 1] = hitPart
		end
	until not hitPart

	eraseFromEnd(blacklist, originalSize)
	return origin + dir, false
end

--------------------------------------------------------------------------------

local function queryPoint(origin, unitDir, dist, lastPos)
	debug.profilebegin("queryPoint")

	local originalSize = #blacklist

	dist = dist + nearPlaneZ
	local target = origin + unitDir*dist

	local softLimit = inf
	local hardLimit = inf
	local movingOrigin = origin
	
	local numPierced = 0

	repeat
		local entryPart, entryPos = workspace:FindPartOnRayWithIgnoreList(ray(movingOrigin, target - movingOrigin), blacklist, false, true)
		numPierced += 1

		if entryPart then
			-- forces the current iteration into a hard limit to cap the number of raycasts
			local earlyAbort = numPierced >= QUERY_POINT_CAST_LIMIT
			
			if canOcclude(entryPart) or earlyAbort then
				local wl = {entryPart}
				local exitPart = workspace:FindPartOnRayWithWhitelist(ray(target, entryPos - target), wl, true)

				local lim = (entryPos - origin).Magnitude

				if exitPart and not earlyAbort then
					local promote = false
					if lastPos then
						promote =
							workspace:FindPartOnRayWithWhitelist(ray(lastPos, target - lastPos), wl, true) or
							workspace:FindPartOnRayWithWhitelist(ray(target, lastPos - target), wl, true)
					end

					if promote then
						-- Ostensibly a soft limit, but the camera has passed through it in the last frame, so promote to a hard limit.
						hardLimit = lim
					elseif dist < softLimit then
						-- Trivial soft limit
						softLimit = lim
					end
				else
					-- Trivial hard limit
					hardLimit = lim
				end
			end

			blacklist[#blacklist + 1] = entryPart
			movingOrigin = entryPos - unitDir*1e-3
		end
	until hardLimit < inf or not entryPart

	eraseFromEnd(blacklist, originalSize)

	debug.profileend()
	return softLimit - nearPlaneZ, hardLimit - nearPlaneZ
end

local function queryViewport(focus, dist)
	debug.profilebegin("queryViewport")

	local fP =  focus.p
	local fX =  focus.rightVector
	local fY =  focus.upVector
	local fZ = -focus.lookVector

	local viewport = camera.ViewportSize

	local hardBoxLimit = inf
	local softBoxLimit = inf

	-- Center the viewport on the PoI, sweep points on the edge towards the target, and take the minimum limits
	for viewX = 0, 1 do
		local worldX = fX*((viewX - 0.5)*projX)

		for viewY = 0, 1 do
			local worldY = fY*((viewY - 0.5)*projY)

			local origin = fP + nearPlaneZ*(worldX + worldY)
			local lastPos = camera:ViewportPointToRay(
				viewport.x*viewX,
				viewport.y*viewY
			).Origin

			local softPointLimit, hardPointLimit = queryPoint(origin, fZ, dist, lastPos)

			if hardPointLimit < hardBoxLimit then
				hardBoxLimit = hardPointLimit
			end
			if softPointLimit < softBoxLimit then
				softBoxLimit = softPointLimit
			end
		end
	end
	debug.profileend()

	return softBoxLimit, hardBoxLimit
end

local function testPromotion(focus, dist, focusExtrapolation)
	debug.profilebegin("testPromotion")

	local fP = focus.p
	local fX = focus.rightVector
	local fY = focus.upVector
	local fZ = -focus.lookVector

	do
		-- Dead reckoning the camera rotation and focus
		debug.profilebegin("extrapolate")

		local SAMPLE_DT = 0.0625
		local SAMPLE_MAX_T = 1.25

		local maxDist = (getCollisionPoint(fP, focusExtrapolation.posVelocity*SAMPLE_MAX_T) - fP).Magnitude
		-- Metric that decides how many samples to take
		local combinedSpeed = focusExtrapolation.posVelocity.magnitude

		for dt = 0, min(SAMPLE_MAX_T, focusExtrapolation.rotVelocity.magnitude + maxDist/combinedSpeed), SAMPLE_DT do
			local cfDt = focusExtrapolation.extrapolate(dt) -- Extrapolated CFrame at time dt

			if queryPoint(cfDt.p, -cfDt.lookVector, dist) >= dist then
				return false
			end
		end

		debug.profileend()
	end

	do
		-- Test screen-space offsets from the focus for the presence of soft limits
		debug.profilebegin("testOffsets")

		for _, offset in ipairs(SCAN_SAMPLE_OFFSETS) do
			local scaledOffset = offset
			local pos = getCollisionPoint(fP, fX*scaledOffset.x + fY*scaledOffset.y)
			if queryPoint(pos, (fP + fZ*dist - pos).Unit, dist) == inf then
				return false
			end
		end

		debug.profileend()
	end

	debug.profileend()
	return true
end

local function Popper(focus, targetDist, focusExtrapolation)
	debug.profilebegin("popper")

	subjectRoot = subjectPart and subjectPart:GetRootPart() or subjectPart

	local dist = targetDist
	local soft, hard = queryViewport(focus, targetDist)
	if hard < dist then
		dist = hard
	end
	if soft < dist and testPromotion(focus, targetDist, focusExtrapolation) then
		dist = soft
	end

	subjectRoot = nil

	debug.profileend()
	return dist
end

return Popper
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX6154c105120643e4be5b7f109fb1e311">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CameraUI</string>
							<string name="ScriptGuid">{dae61a31-094b-4d27-aa22-2e28b4aa9e1d}</string>
							<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
	Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
	LocalPlayer = Players.LocalPlayer
end

local function waitForChildOfClass(parent: Instance, class: string)
	local child = parent:FindFirstChildOfClass(class)
	while not child or child.ClassName ~= class do
		child = parent.ChildAdded:Wait()
	end
	return child
end

local PlayerGui = waitForChildOfClass(LocalPlayer, "PlayerGui")

local TOAST_OPEN_SIZE = UDim2.new(0, 326, 0, 58)
local TOAST_CLOSED_SIZE = UDim2.new(0, 80, 0, 58)
local TOAST_BACKGROUND_COLOR = Color3.fromRGB(32, 32, 32)
local TOAST_BACKGROUND_TRANS = 0.4
local TOAST_FOREGROUND_COLOR = Color3.fromRGB(200, 200, 200)
local TOAST_FOREGROUND_TRANS = 0

-- Convenient syntax for creating a tree of instanes
local function create(className: string)
	return function(props)
		local inst = Instance.new(className)
		local parent = props.Parent
		props.Parent = nil
		for name, val in pairs(props) do
			if type(name) == "string" then
				inst[name] = val
			else
				val.Parent = inst
			end
		end
		-- Only set parent after all other properties are initialized
		inst.Parent = parent
		return inst
	end
end

local initialized = false

local uiRoot: ScreenGui
local toast
local toastIcon
local toastUpperText
local toastLowerText

local function initializeUI()
	assert(not initialized)

	uiRoot = create("ScreenGui"){
		Name = "RbxCameraUI",
		AutoLocalize = false,
		Enabled = true,
		DisplayOrder = -1, -- Appears behind default developer UI
		IgnoreGuiInset = false,
		ResetOnSpawn = false,
		ZIndexBehavior = Enum.ZIndexBehavior.Sibling,

		create("ImageLabel"){
			Name = "Toast",
			Visible = false,
			AnchorPoint = Vector2.new(0.5, 0),
			BackgroundTransparency = 1,
			BorderSizePixel = 0,
			Position = UDim2.new(0.5, 0, 0, 8),
			Size = TOAST_CLOSED_SIZE,
			Image = "rbxasset://textures/ui/Camera/CameraToast9Slice.png",
			ImageColor3 = TOAST_BACKGROUND_COLOR,
			ImageRectSize = Vector2.new(6, 6),
			ImageTransparency = 1,
			ScaleType = Enum.ScaleType.Slice,
			SliceCenter = Rect.new(3, 3, 3, 3),
			ClipsDescendants = true,

			create("Frame"){
				Name = "IconBuffer",
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Position = UDim2.new(0, 0, 0, 0),
				Size = UDim2.new(0, 80, 1, 0),

				create("ImageLabel"){
					Name = "Icon",
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 1,
					Position = UDim2.new(0.5, 0, 0.5, 0),
					Size = UDim2.new(0, 48, 0, 48),
					ZIndex = 2,
					Image = "rbxasset://textures/ui/Camera/CameraToastIcon.png",
					ImageColor3 = TOAST_FOREGROUND_COLOR,
					ImageTransparency = 1,
				}
			},

			create("Frame"){
				Name = "TextBuffer",
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Position = UDim2.new(0, 80, 0, 0),
				Size = UDim2.new(1, -80, 1, 0),
				ClipsDescendants = true,

				create("TextLabel"){
					Name = "Upper",
					AnchorPoint = Vector2.new(0, 1),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 0, 0.5, 0),
					Size = UDim2.new(1, 0, 0, 19),
					Font = Enum.Font.GothamSemibold,
					Text = "Camera control enabled",
					TextColor3 = TOAST_FOREGROUND_COLOR,
					TextTransparency = 1,
					TextSize = 19,
					TextXAlignment = Enum.TextXAlignment.Left,
					TextYAlignment = Enum.TextYAlignment.Center,
				},

				create("TextLabel"){
					Name = "Lower",
					AnchorPoint = Vector2.new(0, 0),
					BackgroundTransparency = 1,
					Position = UDim2.new(0, 0, 0.5, 3),
					Size = UDim2.new(1, 0, 0, 15),
					Font = Enum.Font.Gotham,
					Text = "Right mouse button to toggle",
					TextColor3 = TOAST_FOREGROUND_COLOR,
					TextTransparency = 1,
					TextSize = 15,
					TextXAlignment = Enum.TextXAlignment.Left,
					TextYAlignment = Enum.TextYAlignment.Center,
				},
			},
		},

		Parent = PlayerGui,
	}

	toast = uiRoot.Toast
	toastIcon = toast.IconBuffer.Icon
	toastUpperText = toast.TextBuffer.Upper
	toastLowerText = toast.TextBuffer.Lower

	initialized = true
end

local CameraUI = {}

do
	-- Instantaneously disable the toast or enable for opening later on. Used when switching camera modes.
	function CameraUI.setCameraModeToastEnabled(enabled: boolean)
		if not enabled and not initialized then
			return
		end

		if not initialized then
			initializeUI()
		end

		toast.Visible = enabled
		if not enabled then
			CameraUI.setCameraModeToastOpen(false)
		end
	end

	local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	-- Tween the toast in or out. Toast must be enabled with setCameraModeToastEnabled.
	function CameraUI.setCameraModeToastOpen(open: boolean)
		assert(initialized)

		TweenService:Create(toast, tweenInfo, {
			Size = open and TOAST_OPEN_SIZE or TOAST_CLOSED_SIZE,
			ImageTransparency = open and TOAST_BACKGROUND_TRANS or 1,
		}):Play()

		TweenService:Create(toastIcon, tweenInfo, {
			ImageTransparency = open and TOAST_FOREGROUND_TRANS or 1,
		}):Play()

		TweenService:Create(toastUpperText, tweenInfo, {
			TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
		}):Play()

		TweenService:Create(toastLowerText, tweenInfo, {
			TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
		}):Play()
	end
end

return CameraUI
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX9554f4bec85e4255b9ceb116c1a66fb4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CameraInput</string>
							<string name="ScriptGuid">{97708478-88c6-496a-9b16-b6cb02655016}</string>
							<ProtectedString name="Source"><![CDATA[local ContextActionService = game:GetService("ContextActionService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserGameSettings = UserSettings():GetService("UserGameSettings")

local player = Players.LocalPlayer

local CAMERA_INPUT_PRIORITY = Enum.ContextActionPriority.Default.Value
local MB_TAP_LENGTH = 0.3 -- (s) length of time for a short mouse button tap to be registered

local ROTATION_SPEED_KEYS = math.rad(120) -- (rad/s)
local ROTATION_SPEED_MOUSE = Vector2.new(1, 0.77)*math.rad(0.5) -- (rad/s)
local ROTATION_SPEED_POINTERACTION = Vector2.new(1, 0.77)*math.rad(7) -- (rad/s)
local ROTATION_SPEED_TOUCH = Vector2.new(1, 0.66)*math.rad(1) -- (rad/s)
local ROTATION_SPEED_GAMEPAD = Vector2.new(1, 0.77)*math.rad(4) -- (rad/s)

local ZOOM_SPEED_MOUSE = 1 -- (scaled studs/wheel click)
local ZOOM_SPEED_KEYS = 0.1 -- (studs/s)
local ZOOM_SPEED_TOUCH = 0.04 -- (scaled studs/DIP %)

local MIN_TOUCH_SENSITIVITY_FRACTION = 0.25 -- 25% sensitivity at 90°

-- right mouse button up & down events
local rmbDown, rmbUp do
	local rmbDownBindable = Instance.new("BindableEvent")
	local rmbUpBindable = Instance.new("BindableEvent")

	rmbDown = rmbDownBindable.Event
	rmbUp = rmbUpBindable.Event

	UserInputService.InputBegan:Connect(function(input, gpe)
		if not gpe and input.UserInputType == Enum.UserInputType.MouseButton2 then
			rmbDownBindable:Fire()
		end
	end)

	UserInputService.InputEnded:Connect(function(input, gpe)
		if input.UserInputType == Enum.UserInputType.MouseButton2 then
			rmbUpBindable:Fire()
		end
	end)
end

local thumbstickCurve do
	local K_CURVATURE = 2 -- amount of upwards curvature (0 is flat)
	local K_DEADZONE = 0.1 -- deadzone

	function thumbstickCurve(x)
		-- remove sign, apply linear deadzone
		local fDeadzone = (math.abs(x) - K_DEADZONE)/(1 - K_DEADZONE)
		
		-- apply exponential curve and scale to fit in [0, 1]
		local fCurve = (math.exp(K_CURVATURE*fDeadzone) - 1)/(math.exp(K_CURVATURE) - 1)
		
		-- reapply sign and clamp
		return math.sign(x)*math.clamp(fCurve, 0, 1)
	end
end

-- Adjust the touch sensitivity so that sensitivity is reduced when swiping up
-- or down, but stays the same when swiping towards the middle of the screen
local function adjustTouchPitchSensitivity(delta: Vector2): Vector2
	local camera = workspace.CurrentCamera

	if not camera then
		return delta
	end
	
	-- get the camera pitch in world space
	local pitch = camera.CFrame:ToEulerAnglesYXZ()
	
	if delta.Y*pitch >= 0 then
		-- do not reduce sensitivity when pitching towards the horizon
		return delta
	end
	
	-- set up a line to fit:
	-- 1 = f(0)
	-- 0 = f(±pi/2)
	local curveY = 1 - (2*math.abs(pitch)/math.pi)^0.75

	-- remap curveY from [0, 1] -> [MIN_TOUCH_SENSITIVITY_FRACTION, 1]
	local sensitivity = curveY*(1 - MIN_TOUCH_SENSITIVITY_FRACTION) + MIN_TOUCH_SENSITIVITY_FRACTION

	return Vector2.new(1, sensitivity)*delta
end

local function isInDynamicThumbstickArea(pos: Vector3): boolean
	local playerGui = player:FindFirstChildOfClass("PlayerGui")
	local touchGui = playerGui and playerGui:FindFirstChild("TouchGui")
	local touchFrame = touchGui and touchGui:FindFirstChild("TouchControlFrame")
	local thumbstickFrame = touchFrame and touchFrame:FindFirstChild("DynamicThumbstickFrame")

	if not thumbstickFrame then
		return false
	end
	
	if not touchGui.Enabled then
		return false
	end

	local posTopLeft = thumbstickFrame.AbsolutePosition
	local posBottomRight = posTopLeft + thumbstickFrame.AbsoluteSize

	return
		pos.X >= posTopLeft.X and
		pos.Y >= posTopLeft.Y and
		pos.X <= posBottomRight.X and
		pos.Y <= posBottomRight.Y
end

local worldDt = 1/60
RunService.Stepped:Connect(function(_, _worldDt)
	worldDt = _worldDt
end)

local CameraInput = {}

do
	local connectionList = {}
	local panInputCount = 0

	local function incPanInputCount()
		panInputCount = math.max(0, panInputCount + 1)
	end

	local function decPanInputCount()
		panInputCount = math.max(0, panInputCount - 1)
	end

	local touchPitchSensitivity = 1
	local gamepadState = {
		Thumbstick2 = Vector2.new(),
	}
	local keyboardState = {
		Left = 0,
		Right = 0,
		I = 0,
		O = 0
	}
	local mouseState = {
		Movement = Vector2.new(),
		Wheel = 0, -- PointerAction
		Pan = Vector2.new(), -- PointerAction
		Pinch = 0, -- PointerAction
	}
	local touchState = {
		Move = Vector2.new(),
		Pinch = 0,
	}
	
	local gamepadZoomPressBindable = Instance.new("BindableEvent")
	CameraInput.gamepadZoomPress = gamepadZoomPressBindable.Event
	
	function CameraInput.getRotationActivated(): boolean
		return panInputCount > 0 or gamepadState.Thumbstick2.Magnitude > 0
	end
	
	function CameraInput.getRotation(disableKeyboardRotation: boolean?): Vector2
		local inversionVector = Vector2.new(1, UserGameSettings:GetCameraYInvertValue())

		-- keyboard input is non-coalesced, so must account for time delta
		local kKeyboard = Vector2.new(keyboardState.Right - keyboardState.Left, 0)*worldDt
		local kGamepad = gamepadState.Thumbstick2
		local kMouse = mouseState.Movement
		local kPointerAction = mouseState.Pan
		local kTouch = adjustTouchPitchSensitivity(touchState.Move)

		if disableKeyboardRotation then
			kKeyboard = Vector2.new()
		end

		local result =
			kKeyboard*ROTATION_SPEED_KEYS +
			kGamepad*ROTATION_SPEED_GAMEPAD +
			kMouse*ROTATION_SPEED_MOUSE +
			kPointerAction*ROTATION_SPEED_POINTERACTION +
			kTouch*ROTATION_SPEED_TOUCH

		return result*inversionVector
	end
	
	function CameraInput.getZoomDelta(): number
		local kKeyboard = keyboardState.O - keyboardState.I
		local kMouse = -mouseState.Wheel + mouseState.Pinch
		local kTouch = -touchState.Pinch
		return kKeyboard*ZOOM_SPEED_KEYS + kMouse*ZOOM_SPEED_MOUSE + kTouch*ZOOM_SPEED_TOUCH
	end

	do
		local function thumbstick(action, state, input)
			local position = input.Position
			gamepadState[input.KeyCode.Name] = Vector2.new(thumbstickCurve(position.X), -thumbstickCurve(position.Y))
		end

		local function mouseMovement(input)
			local delta = input.Delta
			mouseState.Movement = Vector2.new(delta.X, delta.Y)
		end
		
		local function mouseWheel(action, state, input)
			mouseState.Wheel = input.Position.Z
			return Enum.ContextActionResult.Pass
		end
		
		local function keypress(action, state, input)
			keyboardState[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
		end
		
		local function gamepadZoomPress(action, state, input)
			if state == Enum.UserInputState.Begin then
				gamepadZoomPressBindable:Fire()
			end
		end
		
		local function resetInputDevices()
			for _, device in pairs({
				gamepadState,
				keyboardState,
				mouseState,
				touchState,
			}) do
				for k, v in pairs(device) do
					if type(v) == "boolean" then
						device[k] = false
					else
						device[k] *= 0 -- Mul by zero to preserve vector types
					end
				end
			end
		end

		local touchBegan, touchChanged, touchEnded, resetTouchState do
			-- Use TouchPan & TouchPinch when they work in the Studio emulator

			local touches: {[InputObject]: boolean?} = {} -- {[InputObject] = sunk}
			local dynamicThumbstickInput: InputObject? -- Special-cased 
			local lastPinchDiameter: number?

			function touchBegan(input: InputObject, sunk: boolean)
				assert(input.UserInputType == Enum.UserInputType.Touch)
				assert(input.UserInputState == Enum.UserInputState.Begin)
				
				if dynamicThumbstickInput == nil and isInDynamicThumbstickArea(input.Position) and not sunk then
					-- any finger down starting in the dynamic thumbstick area should always be
					-- ignored for camera purposes. these must be handled specially from all other
					-- inputs, as the DT does not sink inputs by itself
					dynamicThumbstickInput = input
					return
				end
				
				if not sunk then
					incPanInputCount()
				end
				
				-- register the finger
				touches[input] = sunk
			end

			function touchEnded(input: InputObject, sunk: boolean)
				assert(input.UserInputType == Enum.UserInputType.Touch)
				assert(input.UserInputState == Enum.UserInputState.End)
				
				-- reset the DT input
				if input == dynamicThumbstickInput then
					dynamicThumbstickInput = nil
				end
				
				-- reset pinch state if one unsunk finger lifts
				if touches[input] == false then
					lastPinchDiameter = nil
					decPanInputCount()
				end
				
				-- unregister input
				touches[input] = nil
			end

			function touchChanged(input, sunk)
				assert(input.UserInputType == Enum.UserInputType.Touch)
				assert(input.UserInputState == Enum.UserInputState.Change)
				
				-- ignore movement from the DT finger
				if input == dynamicThumbstickInput then
					return
				end
				
				-- fixup unknown touches
				if touches[input] == nil then
					touches[input] = sunk
				end
				
				-- collect unsunk touches
				local unsunkTouches = {}
				for touch, sunk in pairs(touches) do
					if not sunk then
						table.insert(unsunkTouches, touch)
					end
				end
				
				-- 1 finger: pan
				if #unsunkTouches == 1 then
					if touches[input] == false then
						local delta = input.Delta
						touchState.Move += Vector2.new(delta.X, delta.Y) -- total touch pan movement (reset at end of frame)
					end
				end
				
				-- 2 fingers: pinch
				if #unsunkTouches == 2 then
					local pinchDiameter = (unsunkTouches[1].Position - unsunkTouches[2].Position).Magnitude
					
					if lastPinchDiameter then
						touchState.Pinch += pinchDiameter - lastPinchDiameter
					end
					
					lastPinchDiameter = pinchDiameter
				else
					lastPinchDiameter = nil
				end
			end

			function resetTouchState()
				touches = {}
				dynamicThumbstickInput = nil
				lastPinchDiameter = nil
			end
		end

		local function pointerAction(wheel, pan, pinch, gpe)
			if not gpe then
				mouseState.Wheel = wheel
				mouseState.Pan = pan
				mouseState.Pinch = -pinch
			end
		end

		local function inputBegan(input, sunk)
			if input.UserInputType == Enum.UserInputType.Touch then
				touchBegan(input, sunk)

			elseif input.UserInputType == Enum.UserInputType.MouseButton2 and not sunk then
				incPanInputCount()
			end
		end

		local function inputChanged(input, sunk)
			if input.UserInputType == Enum.UserInputType.Touch then
				touchChanged(input, sunk)

			elseif input.UserInputType == Enum.UserInputType.MouseMovement then
				mouseMovement(input)
			end
		end

		local function inputEnded(input, sunk)
			if input.UserInputType == Enum.UserInputType.Touch then
				touchEnded(input, sunk)

			elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
				decPanInputCount()
			end
		end

		local inputEnabled = false

		function CameraInput.setInputEnabled(_inputEnabled)
			if inputEnabled == _inputEnabled then
				return
			end
			inputEnabled = _inputEnabled

			resetInputDevices()
			resetTouchState()

			if inputEnabled then -- enable
				ContextActionService:BindActionAtPriority(
					"RbxCameraThumbstick",
					thumbstick,
					false,
					CAMERA_INPUT_PRIORITY,
					Enum.KeyCode.Thumbstick2
				)

				ContextActionService:BindActionAtPriority(
					"RbxCameraKeypress",
					keypress,
					false,
					CAMERA_INPUT_PRIORITY,
					Enum.KeyCode.Left,
					Enum.KeyCode.Right,
					Enum.KeyCode.I,
					Enum.KeyCode.O
				)
				
				ContextActionService:BindAction(
					"RbxCameraGamepadZoom",
					gamepadZoomPress,
					false,
					Enum.KeyCode.ButtonR3
				)
				
				table.insert(connectionList, UserInputService.InputBegan:Connect(inputBegan))
				table.insert(connectionList, UserInputService.InputChanged:Connect(inputChanged))
				table.insert(connectionList, UserInputService.InputEnded:Connect(inputEnded))
				table.insert(connectionList, UserInputService.PointerAction:Connect(pointerAction))

			else -- disable
				ContextActionService:UnbindAction("RbxCameraThumbstick")
				ContextActionService:UnbindAction("RbxCameraMouseMove")
				ContextActionService:UnbindAction("RbxCameraMouseWheel")
				ContextActionService:UnbindAction("RbxCameraKeypress")

				for _, conn in pairs(connectionList) do
					conn:Disconnect()
				end
				connectionList = {}
			end
		end

		function CameraInput.getInputEnabled()
			return inputEnabled
		end
		
		function CameraInput.resetInputForFrameEnd()
			mouseState.Movement = Vector2.new()
			touchState.Move = Vector2.new()
			touchState.Pinch = 0

			mouseState.Wheel = 0 -- PointerAction
			mouseState.Pan = Vector2.new() -- PointerAction
			mouseState.Pinch = 0 -- PointerAction
		end

		UserInputService.WindowFocused:Connect(resetInputDevices)
		UserInputService.WindowFocusReleased:Connect(resetInputDevices)
	end
end

-- Toggle pan
do
	local holdPan = false
	local togglePan = false
	local lastRmbDown = 0 -- tick() timestamp of the last right mouse button down event
	
	function CameraInput.getHoldPan(): boolean
		return holdPan
	end
	
	function CameraInput.getTogglePan(): boolean
		return togglePan
	end
	
	function CameraInput.getPanning(): boolean
		return togglePan or holdPan
	end
	
	function CameraInput.setTogglePan(value: boolean)
		togglePan = value
	end
	
	local cameraToggleInputEnabled = false
	local rmbDownConnection
	local rmbUpConnection
	
	function CameraInput.enableCameraToggleInput()
		if cameraToggleInputEnabled then
			return
		end
		cameraToggleInputEnabled = true
	
		holdPan = false
		togglePan = false
	
		if rmbDownConnection then
			rmbDownConnection:Disconnect()
		end
	
		if rmbUpConnection then
			rmbUpConnection:Disconnect()
		end
	
		rmbDownConnection = rmbDown:Connect(function()
			holdPan = true
			lastRmbDown = tick()
		end)
	
		rmbUpConnection = rmbUp:Connect(function()
			holdPan = false
			if tick() - lastRmbDown < MB_TAP_LENGTH and (togglePan or UserInputService:GetMouseDelta().Magnitude < 2) then
				togglePan = not togglePan
			end
		end)
	end
	
	function CameraInput.disableCameraToggleInput()
		if not cameraToggleInputEnabled then
			return
		end
		cameraToggleInputEnabled = false
	
		if rmbDownConnection then
			rmbDownConnection:Disconnect()
			rmbDownConnection = nil
		end
		
		if rmbUpConnection then
			rmbUpConnection:Disconnect()
			rmbUpConnection = nil
		end
	end
end

return CameraInput]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX0c821982884f4a319e1a329e71452f42">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Poppercam</string>
							<string name="ScriptGuid">{2e1a5a35-89b8-4c52-b250-5bd2efc12ce0}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Poppercam - Occlusion module that brings the camera closer to the subject when objects are blocking the view.
--]]

local ZoomController =  require(script.Parent:WaitForChild("ZoomController"))

local TransformExtrapolator = {} do
	TransformExtrapolator.__index = TransformExtrapolator

	local CF_IDENTITY = CFrame.new()

	local function cframeToAxis(cframe: CFrame): Vector3
		local axis: Vector3, angle: number = cframe:toAxisAngle()
		return axis*angle
	end

	local function axisToCFrame(axis: Vector3): CFrame
		local angle: number = axis.magnitude
		if angle > 1e-5 then
			return CFrame.fromAxisAngle(axis, angle)
		end
		return CF_IDENTITY
	end

	local function extractRotation(cf: CFrame): CFrame
		local _, _, _, xx, yx, zx, xy, yy, zy, xz, yz, zz = cf:components()
		return CFrame.new(0, 0, 0, xx, yx, zx, xy, yy, zy, xz, yz, zz)
	end

	function TransformExtrapolator.new()
		return setmetatable({
			lastCFrame = nil,
		}, TransformExtrapolator)
	end

	function TransformExtrapolator:Step(dt: number, currentCFrame: CFrame)
		local lastCFrame = self.lastCFrame or currentCFrame
		self.lastCFrame = currentCFrame

		local currentPos = currentCFrame.p
		local currentRot = extractRotation(currentCFrame)

		local lastPos = lastCFrame.p
		local lastRot = extractRotation(lastCFrame)

		-- Estimate velocities from the delta between now and the last frame
		-- This estimation can be a little noisy.
		local dp = (currentPos - lastPos)/dt
		local dr = cframeToAxis(currentRot*lastRot:inverse())/dt

		local function extrapolate(t)
			local p = dp*t + currentPos
			local r = axisToCFrame(dr*t)*currentRot
			return r + p
		end

		return {
			extrapolate = extrapolate,
			posVelocity = dp,
			rotVelocity = dr,
		}
	end

	function TransformExtrapolator:Reset()
		self.lastCFrame = nil
	end
end

--[[ The Module ]]--
local BaseOcclusion = require(script.Parent:WaitForChild("BaseOcclusion"))
local Poppercam = setmetatable({}, BaseOcclusion)
Poppercam.__index = Poppercam

function Poppercam.new()
	local self = setmetatable(BaseOcclusion.new(), Poppercam)
	self.focusExtrapolator = TransformExtrapolator.new()
	return self
end

function Poppercam:GetOcclusionMode()
	return Enum.DevCameraOcclusionMode.Zoom
end

function Poppercam:Enable(enable)
	self.focusExtrapolator:Reset()
end

function Poppercam:Update(renderDt, desiredCameraCFrame, desiredCameraFocus, cameraController)
	local rotatedFocus = CFrame.new(desiredCameraFocus.p, desiredCameraCFrame.p)*CFrame.new(
		0, 0, 0,
		-1, 0, 0,
		0, 1, 0,
		0, 0, -1
	)
	local extrapolation = self.focusExtrapolator:Step(renderDt, rotatedFocus)
	local zoom = ZoomController.Update(renderDt, rotatedFocus, extrapolation)
	return rotatedFocus*CFrame.new(0, 0, zoom), desiredCameraFocus
end

-- Called when character is added
function Poppercam:CharacterAdded(character, player)
end

-- Called when character is about to be removed
function Poppercam:CharacterRemoving(character, player)
end

function Poppercam:OnCameraSubjectChanged(newSubject)
end

return Poppercam
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX00d28e4c70e14af8ac1fe120b3e0b1cb">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Invisicam</string>
							<string name="ScriptGuid">{44e4ae0b-d941-4b70-b7ac-05148b9ce89a}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	Invisicam - Occlusion module that makes objects occluding character view semi-transparent
	2018 Camera Update - AllYourBlox		
--]]

--[[ Top Level Roblox Services ]]--
local PlayersService = game:GetService("Players")

--[[ Constants ]]--
local ZERO_VECTOR3 = Vector3.new(0,0,0)
local USE_STACKING_TRANSPARENCY = true	-- Multiple items between the subject and camera get transparency values that add up to TARGET_TRANSPARENCY
local TARGET_TRANSPARENCY = 0.75 -- Classic Invisicam's Value, also used by new invisicam for parts hit by head and torso rays
local TARGET_TRANSPARENCY_PERIPHERAL = 0.5 -- Used by new SMART_CIRCLE mode for items not hit by head and torso rays

local MODE = {
	--CUSTOM = 1, 		-- Retired, unused
	LIMBS = 2, 			-- Track limbs
	MOVEMENT = 3, 		-- Track movement
	CORNERS = 4, 		-- Char model corners
	CIRCLE1 = 5, 		-- Circle of casts around character
	CIRCLE2 = 6, 		-- Circle of casts around character, camera relative
	LIMBMOVE = 7, 		-- LIMBS mode + MOVEMENT mode
	SMART_CIRCLE = 8, 	-- More sample points on and around character
	CHAR_OUTLINE = 9,	-- Dynamic outline around the character
}

local LIMB_TRACKING_SET = {
	-- Body parts common to R15 and R6
	['Head'] = true,

	-- Body parts unique to R6
	['Left Arm'] = true,
	['Right Arm'] = true,
	['Left Leg'] = true,
	['Right Leg'] = true,

	-- Body parts unique to R15
	['LeftLowerArm'] = true,
	['RightLowerArm'] = true,
	['LeftUpperLeg'] = true,
	['RightUpperLeg'] = true
}

local CORNER_FACTORS = {
	Vector3.new(1,1,-1),
	Vector3.new(1,-1,-1),
	Vector3.new(-1,-1,-1),
	Vector3.new(-1,1,-1)
}

local CIRCLE_CASTS = 10
local MOVE_CASTS = 3
local SMART_CIRCLE_CASTS = 24
local SMART_CIRCLE_INCREMENT = 2.0 * math.pi / SMART_CIRCLE_CASTS
local CHAR_OUTLINE_CASTS = 24

-- Used to sanitize user-supplied functions
local function AssertTypes(param, ...)
	local allowedTypes = {}
	local typeString = ''
	for _, typeName in pairs({...}) do
		allowedTypes[typeName] = true
		typeString = typeString .. (typeString == '' and '' or ' or ') .. typeName
	end
	local theType = type(param)
	assert(allowedTypes[theType], typeString .. " type expected, got: " .. theType)
end

-- Helper function for Determinant of 3x3, not in CameraUtils for performance reasons
local function Det3x3(a: number,b: number,c: number,d: number,e: number,f: number,g: number,h: number,i: number): nemubr
	return (a*(e*i-f*h)-b*(d*i-f*g)+c*(d*h-e*g))
end

-- Smart Circle mode needs the intersection of 2 rays that are known to be in the same plane
-- because they are generated from cross products with a common vector. This function is computing
-- that intersection, but it's actually the general solution for the point halfway between where
-- two skew lines come nearest to each other, which is more forgiving.
local function RayIntersection(p0: Vector3, v0: Vector3, p1: Vector3, v1: Vector3): Vector3
	local v2 = v0:Cross(v1)
	local d1 = p1.x - p0.x
	local d2 = p1.y - p0.y
	local d3 = p1.z - p0.z
	local denom = Det3x3(v0.x,-v1.x,v2.x,v0.y,-v1.y,v2.y,v0.z,-v1.z,v2.z)

	if (denom == 0) then
		return ZERO_VECTOR3 -- No solution (rays are parallel)
	end

	local t0 = Det3x3(d1,-v1.x,v2.x,d2,-v1.y,v2.y,d3,-v1.z,v2.z) / denom
	local t1 = Det3x3(v0.x,d1,v2.x,v0.y,d2,v2.y,v0.z,d3,v2.z) / denom
	local s0 = p0 + t0 * v0
	local s1 = p1 + t1 * v1
	local s = s0 + 0.5 * ( s1 - s0 )

	-- 0.25 studs is a threshold for deciding if the rays are
	-- close enough to be considered intersecting, found through testing 
	if (s1-s0).Magnitude < 0.25 then
		return s
	else
		return ZERO_VECTOR3
	end
end



--[[ The Module ]]--
local BaseOcclusion = require(script.Parent:WaitForChild("BaseOcclusion"))
local Invisicam = setmetatable({}, BaseOcclusion)
Invisicam.__index = Invisicam

function Invisicam.new()
	local self = setmetatable(BaseOcclusion.new(), Invisicam)

	self.char = nil
	self.humanoidRootPart = nil
	self.torsoPart = nil
	self.headPart = nil

	self.childAddedConn = nil
	self.childRemovedConn = nil

	self.behaviors = {} 	-- Map of modes to behavior fns
	self.behaviors[MODE.LIMBS] = self.LimbBehavior
	self.behaviors[MODE.MOVEMENT] = self.MoveBehavior
	self.behaviors[MODE.CORNERS] = self.CornerBehavior
	self.behaviors[MODE.CIRCLE1] = self.CircleBehavior
	self.behaviors[MODE.CIRCLE2] = self.CircleBehavior
	self.behaviors[MODE.LIMBMOVE] = self.LimbMoveBehavior
	self.behaviors[MODE.SMART_CIRCLE] = self.SmartCircleBehavior
	self.behaviors[MODE.CHAR_OUTLINE] = self.CharacterOutlineBehavior

	self.mode = MODE.SMART_CIRCLE
	self.behaviorFunction = self.SmartCircleBehavior

	self.savedHits = {} 	-- Objects currently being faded in/out
	self.trackedLimbs = {}	-- Used in limb-tracking casting modes

	self.camera = game.Workspace.CurrentCamera

	self.enabled = false
	return self
end

function Invisicam:Enable(enable)
	self.enabled = enable

	if not enable then
		self:Cleanup()
	end
end

function Invisicam:GetOcclusionMode()
	return Enum.DevCameraOcclusionMode.Invisicam
end

--[[ Module functions ]]--
function Invisicam:LimbBehavior(castPoints)
	for limb, _ in pairs(self.trackedLimbs) do
		castPoints[#castPoints + 1] = limb.Position
	end
end

function Invisicam:MoveBehavior(castPoints)
	for i = 1, MOVE_CASTS do
		local position: Vector3, velocity: Vector3 = self.humanoidRootPart.Position, self.humanoidRootPart.Velocity
		local horizontalSpeed: number = Vector3.new(velocity.X, 0, velocity.Z).Magnitude / 2
		local offsetVector: Vector3 = (i - 1) * self.humanoidRootPart.CFrame.lookVector :: Vector3 * horizontalSpeed
		castPoints[#castPoints + 1] = position + offsetVector
	end
end

function Invisicam:CornerBehavior(castPoints)
	local cframe: CFrame = self.humanoidRootPart.CFrame
	local centerPoint: Vector3 = cframe.p
	local rotation = cframe - centerPoint
	local halfSize = self.char:GetExtentsSize() / 2 --NOTE: Doesn't update w/ limb animations
	castPoints[#castPoints + 1] = centerPoint
	for i = 1, #CORNER_FACTORS do
		castPoints[#castPoints + 1] = centerPoint + (rotation * (halfSize * CORNER_FACTORS[i]))
	end
end

function Invisicam:CircleBehavior(castPoints)
	local cframe: CFrame
	if self.mode == MODE.CIRCLE1 then
		cframe = self.humanoidRootPart.CFrame
	else
		local camCFrame: CFrame = self.camera.CoordinateFrame
		cframe = camCFrame - camCFrame.p + self.humanoidRootPart.Position
	end
	castPoints[#castPoints + 1] = cframe.p
	for i = 0, CIRCLE_CASTS - 1 do
		local angle = (2 * math.pi / CIRCLE_CASTS) * i
		local offset = 3 * Vector3.new(math.cos(angle), math.sin(angle), 0)
		castPoints[#castPoints + 1] = cframe * offset
	end
end

function Invisicam:LimbMoveBehavior(castPoints)
	self:LimbBehavior(castPoints)
	self:MoveBehavior(castPoints)
end

function Invisicam:CharacterOutlineBehavior(castPoints)
	local torsoUp = self.torsoPart.CFrame.upVector.unit
	local torsoRight = self.torsoPart.CFrame.rightVector.unit

	-- Torso cross of points for interior coverage
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
	if self.headPart then
		castPoints[#castPoints + 1] = self.headPart.CFrame.p
	end

	local cframe = CFrame.new(ZERO_VECTOR3,Vector3.new(self.camera.CoordinateFrame.lookVector.X,0,self.camera.CoordinateFrame.lookVector.Z))
	local centerPoint = (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)

	local partsWhitelist = {self.torsoPart}
	if self.headPart then
		partsWhitelist[#partsWhitelist + 1] = self.headPart
	end

	for i = 1, CHAR_OUTLINE_CASTS do
		local angle = (2 * math.pi * i / CHAR_OUTLINE_CASTS)
		local offset = cframe * (3 * Vector3.new(math.cos(angle), math.sin(angle), 0))

		offset = Vector3.new(offset.X, math.max(offset.Y, -2.25), offset.Z)	

		local ray = Ray.new(centerPoint + offset, -3 * offset)
		local hit, hitPoint = game.Workspace:FindPartOnRayWithWhitelist(ray, partsWhitelist, false, false)

		if hit then
			-- Use hit point as the cast point, but nudge it slightly inside the character so that bumping up against
			-- walls is less likely to cause a transparency glitch
			castPoints[#castPoints + 1] = hitPoint + 0.2 * (centerPoint - hitPoint).unit
		end
	end
end

function Invisicam:SmartCircleBehavior(castPoints)
	local torsoUp = self.torsoPart.CFrame.upVector.unit
	local torsoRight = self.torsoPart.CFrame.rightVector.unit

	-- SMART_CIRCLE mode includes rays to head and 5 to the torso.
	-- Hands, arms, legs and feet are not included since they
	-- are not canCollide and can therefore go inside of parts
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
	castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
	if self.headPart then
		castPoints[#castPoints + 1] = self.headPart.CFrame.p
	end

	local cameraOrientation = self.camera.CFrame - self.camera.CFrame.p
	local torsoPoint = Vector3.new(0,0.5,0) + (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)
	local radius = 2.5

	-- This loop first calculates points in a circle of radius 2.5 around the torso of the character, in the
	-- plane orthogonal to the camera's lookVector. Each point is then raycast to, to determine if it is within
	-- the free space surrounding the player (not inside anything). Two iterations are done to adjust points that
	-- are inside parts, to try to move them to valid locations that are still on their camera ray, so that the
	-- circle remains circular from the camera's perspective, but does not cast rays into walls or parts that are
	-- behind, below or beside the character and not really obstructing view of the character. This minimizes
	-- the undesirable situation where the character walks up to an exterior wall and it is made invisible even
	-- though it is behind the character.
	for i = 1, SMART_CIRCLE_CASTS do
		local angle = SMART_CIRCLE_INCREMENT * i - 0.5 * math.pi
		local offset = radius * Vector3.new(math.cos(angle), math.sin(angle), 0)
		local circlePoint = torsoPoint + cameraOrientation * offset

		-- Vector from camera to point on the circle being tested
		local vp = circlePoint - self.camera.CFrame.p

		local ray = Ray.new(torsoPoint, circlePoint - torsoPoint)
		local hit, hp, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
		local castPoint = circlePoint

		if hit then
			local hprime = hp + 0.1 * hitNormal.unit -- Slightly offset hit point from the hit surface
			local v0 = hprime - torsoPoint -- Vector from torso to offset hit point

			local perp = (v0:Cross(vp)).unit

			-- Vector from the offset hit point, along the hit surface
			local v1 = (perp:Cross(hitNormal)).unit

			-- Vector from camera to offset hit
			local vprime = (hprime - self.camera.CFrame.p).unit

			-- This dot product checks to see if the vector along the hit surface would hit the correct
			-- side of the invisicam cone, or if it would cross the camera look vector and hit the wrong side
			if ( v0.unit:Dot(-v1) < v0.unit:Dot(vprime)) then
				castPoint = RayIntersection(hprime, v1, circlePoint, vp)

				if castPoint.Magnitude > 0 then
					local ray = Ray.new(hprime, castPoint - hprime)
					local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )

					if hit then
						local hprime2 = hitPoint + 0.1 * hitNormal.unit
						castPoint = hprime2
					end
				else
					castPoint = hprime
				end
			else
				castPoint = hprime
			end

			local ray = Ray.new(torsoPoint, (castPoint - torsoPoint))
			local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )

			if hit then
				local castPoint2 = hitPoint - 0.1 * (castPoint - torsoPoint).unit
				castPoint = castPoint2
			end
		end

		castPoints[#castPoints + 1] = castPoint
	end
end

function Invisicam:CheckTorsoReference()
	if self.char then
		self.torsoPart = self.char:FindFirstChild("Torso")
		if not self.torsoPart then
			self.torsoPart = self.char:FindFirstChild("UpperTorso")
			if not self.torsoPart then
				self.torsoPart = self.char:FindFirstChild("HumanoidRootPart")
			end
		end

		self.headPart = self.char:FindFirstChild("Head")
	end
end

function Invisicam:CharacterAdded(char: Model, player: Player)
	-- We only want the LocalPlayer's character
	if player~=PlayersService.LocalPlayer then return end

	if self.childAddedConn then
		self.childAddedConn:Disconnect()
		self.childAddedConn = nil
	end
	if self.childRemovedConn then
		self.childRemovedConn:Disconnect()
		self.childRemovedConn = nil
	end

	self.char = char

	self.trackedLimbs = {}
	local function childAdded(child)
		if child:IsA("BasePart") then
			if LIMB_TRACKING_SET[child.Name] then
				self.trackedLimbs[child] = true
			end

			if child.Name == "Torso" or child.Name == "UpperTorso" then
				self.torsoPart = child
			end

			if child.Name == "Head" then
				self.headPart = child
			end
		end
	end

	local function childRemoved(child)
		self.trackedLimbs[child] = nil

		-- If removed/replaced part is 'Torso' or 'UpperTorso' double check that we still have a TorsoPart to use
		self:CheckTorsoReference()
	end

	self.childAddedConn = char.ChildAdded:Connect(childAdded)
	self.childRemovedConn = char.ChildRemoved:Connect(childRemoved)
	for _, child in pairs(self.char:GetChildren()) do
		childAdded(child)
	end
end

function Invisicam:SetMode(newMode: number)
	AssertTypes(newMode, 'number')
	for _, modeNum in pairs(MODE) do
		if modeNum == newMode then
			self.mode = newMode
			self.behaviorFunction = self.behaviors[self.mode]
			return
		end
	end
	error("Invalid mode number")
end

function Invisicam:GetObscuredParts()
	return self.savedHits
end

-- Want to turn off Invisicam? Be sure to call this after.
function Invisicam:Cleanup()
	for hit, originalFade in pairs(self.savedHits) do
		hit.LocalTransparencyModifier = originalFade
	end
end

function Invisicam:Update(dt: number, desiredCameraCFrame: CFrame, desiredCameraFocus: CFrame): (CFrame, CFrame)
	-- Bail if there is no Character
	if not self.enabled or not self.char then
		return desiredCameraCFrame, desiredCameraFocus
	end

	self.camera = game.Workspace.CurrentCamera

	-- TODO: Move this to a GetHumanoidRootPart helper, probably combine with CheckTorsoReference
	-- Make sure we still have a HumanoidRootPart
	if not self.humanoidRootPart then
		local humanoid = self.char:FindFirstChildOfClass("Humanoid")
		if humanoid and humanoid.RootPart then
			self.humanoidRootPart = humanoid.RootPart
		else
			-- Not set up with Humanoid? Try and see if there's one in the Character at all:
			self.humanoidRootPart = self.char:FindFirstChild("HumanoidRootPart")
			if not self.humanoidRootPart then
				-- Bail out, since we're relying on HumanoidRootPart existing
				return desiredCameraCFrame, desiredCameraFocus
			end
		end

		-- TODO: Replace this with something more sensible
		local ancestryChangedConn
		ancestryChangedConn = self.humanoidRootPart.AncestryChanged:Connect(function(child, parent)
			if child == self.humanoidRootPart and not parent then 
				self.humanoidRootPart = nil
				if ancestryChangedConn and ancestryChangedConn.Connected then
					ancestryChangedConn:Disconnect()
					ancestryChangedConn = nil
				end
			end
		end)
	end

	if not self.torsoPart then
		self:CheckTorsoReference()
		if not self.torsoPart then
			-- Bail out, since we're relying on Torso existing, should never happen since we fall back to using HumanoidRootPart as torso
			return desiredCameraCFrame, desiredCameraFocus
		end
	end

	-- Make a list of world points to raycast to
	local castPoints = {}
	self.behaviorFunction(self, castPoints)

	-- Cast to get a list of objects between the camera and the cast points
	local currentHits = {}
	local ignoreList = {self.char}
	local function add(hit)
		currentHits[hit] = true
		if not self.savedHits[hit] then
			self.savedHits[hit] = hit.LocalTransparencyModifier
		end
	end

	local hitParts
	local hitPartCount = 0

	-- Hash table to treat head-ray-hit parts differently than the rest of the hit parts hit by other rays
	-- head/torso ray hit parts will be more transparent than peripheral parts when USE_STACKING_TRANSPARENCY is enabled
	local headTorsoRayHitParts = {}

	local perPartTransparencyHeadTorsoHits = TARGET_TRANSPARENCY
	local perPartTransparencyOtherHits = TARGET_TRANSPARENCY

	if USE_STACKING_TRANSPARENCY then

		-- This first call uses head and torso rays to find out how many parts are stacked up
		-- for the purpose of calculating required per-part transparency
		local headPoint = self.headPart and self.headPart.CFrame.p or castPoints[1]
		local torsoPoint = self.torsoPart and self.torsoPart.CFrame.p or castPoints[2]
		hitParts = self.camera:GetPartsObscuringTarget({headPoint, torsoPoint}, ignoreList)

		-- Count how many things the sample rays passed through, including decals. This should only
		-- count decals facing the camera, but GetPartsObscuringTarget does not return surface normals,
		-- so my compromise for now is to just let any decal increase the part count by 1. Only one
		-- decal per part will be considered.
		for i = 1, #hitParts do
			local hitPart = hitParts[i]
			hitPartCount = hitPartCount + 1 -- count the part itself
			headTorsoRayHitParts[hitPart] = true
			for _, child in pairs(hitPart:GetChildren()) do
				if child:IsA('Decal') or child:IsA('Texture') then
					hitPartCount = hitPartCount + 1 -- count first decal hit, then break
					break
				end
			end
		end

		if (hitPartCount > 0) then
			perPartTransparencyHeadTorsoHits = math.pow( ((0.5 * TARGET_TRANSPARENCY) + (0.5 * TARGET_TRANSPARENCY / hitPartCount)), 1 / hitPartCount )
			perPartTransparencyOtherHits = math.pow( ((0.5 * TARGET_TRANSPARENCY_PERIPHERAL) + (0.5 * TARGET_TRANSPARENCY_PERIPHERAL / hitPartCount)), 1 / hitPartCount )
		end
	end

	-- Now get all the parts hit by all the rays
	hitParts = self.camera:GetPartsObscuringTarget(castPoints, ignoreList)

	local partTargetTransparency = {}

	-- Include decals and textures
	for i = 1, #hitParts do
		local hitPart = hitParts[i]

		partTargetTransparency[hitPart] =headTorsoRayHitParts[hitPart] and perPartTransparencyHeadTorsoHits or perPartTransparencyOtherHits

		-- If the part is not already as transparent or more transparent than what invisicam requires, add it to the list of
		-- parts to be modified by invisicam
		if hitPart.Transparency < partTargetTransparency[hitPart] then
			add(hitPart)
		end

		-- Check all decals and textures on the part
		for _, child in pairs(hitPart:GetChildren()) do
			if child:IsA('Decal') or child:IsA('Texture') then
				if (child.Transparency < partTargetTransparency[hitPart]) then
					partTargetTransparency[child] = partTargetTransparency[hitPart]
					add(child)
				end
			end
		end
	end

	-- Invisibilize objects that are in the way, restore those that aren't anymore
	for hitPart, originalLTM in pairs(self.savedHits) do
		if currentHits[hitPart] then
			-- LocalTransparencyModifier gets whatever value is required to print the part's total transparency to equal perPartTransparency
			hitPart.LocalTransparencyModifier = (hitPart.Transparency < 1) and ((partTargetTransparency[hitPart] - hitPart.Transparency) / (1.0 - hitPart.Transparency)) or 0
		else -- Restore original pre-invisicam value of LTM
			hitPart.LocalTransparencyModifier = originalLTM
			self.savedHits[hitPart] = nil
		end
	end

	-- Invisicam does not change the camera values
	return desiredCameraCFrame, desiredCameraFocus
end

return Invisicam
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX0df24514e4c84132aeb28e57579b0561">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CameraToggleStateController</string>
							<string name="ScriptGuid">{cf17fd90-f1e1-410d-8186-57ba3b30bfba}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local GameSettings = UserSettings():GetService("UserGameSettings")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
	Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
	LocalPlayer = Players.LocalPlayer
end

local Mouse = LocalPlayer:GetMouse()

local Input = require(script.Parent:WaitForChild("CameraInput"))
local CameraUI = require(script.Parent:WaitForChild("CameraUI"))

local lastTogglePan = false
local lastTogglePanChange = tick()

local CROSS_MOUSE_ICON = "rbxasset://textures/Cursors/CrossMouseIcon.png"

local lockStateDirty = false
local wasTogglePanOnTheLastTimeYouWentIntoFirstPerson = false
local lastFirstPerson = false

CameraUI.setCameraModeToastEnabled(false)

return function(isFirstPerson: boolean)
	local togglePan = Input.getTogglePan()
	local toastTimeout = 3

	if isFirstPerson and togglePan ~= lastTogglePan then
		lockStateDirty = true
	end

	if lastTogglePan ~= togglePan or tick() - lastTogglePanChange > toastTimeout then
		local doShow = togglePan and tick() - lastTogglePanChange < toastTimeout

		CameraUI.setCameraModeToastOpen(doShow)

		if togglePan then
			lockStateDirty = false
		end
		lastTogglePanChange = tick()
		lastTogglePan = togglePan
	end

	if isFirstPerson ~= lastFirstPerson then
		if isFirstPerson then
			wasTogglePanOnTheLastTimeYouWentIntoFirstPerson = Input.getTogglePan()
			Input.setTogglePan(true)
		elseif not lockStateDirty then
			Input.setTogglePan(wasTogglePanOnTheLastTimeYouWentIntoFirstPerson)
		end
	end

	if isFirstPerson then
		if Input.getTogglePan() then
			Mouse.Icon = CROSS_MOUSE_ICON
			UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
			GameSettings.RotationType = Enum.RotationType.CameraRelative
		else
			Mouse.Icon = ""
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
			GameSettings.RotationType = Enum.RotationType.CameraRelative
		end

	elseif Input.getTogglePan() then
		Mouse.Icon = CROSS_MOUSE_ICON
		UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
		GameSettings.RotationType = Enum.RotationType.MovementRelative

	elseif Input.getHoldPan() then
		Mouse.Icon = ""
		UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
		GameSettings.RotationType = Enum.RotationType.MovementRelative

	else
		Mouse.Icon = ""
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		GameSettings.RotationType = Enum.RotationType.MovementRelative
	end

	lastFirstPerson = isFirstPerson
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXc608bcca802c437099a32a4860287816">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CameraUtils</string>
							<string name="ScriptGuid">{7531aa70-9666-46d4-b763-a1fce8e5934e}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	CameraUtils - Math utility functions shared by multiple camera scripts
	2018 Camera Update - AllYourBlox
--]]

local CameraUtils = {}

local function round(num: number)
	return math.floor(num + 0.5)
end

-- Critically damped spring class for fluid motion effects
local Spring = {} do
	Spring.__index = Spring

	-- Initialize to a given undamped frequency and default position
	function Spring.new(freq, pos)
		return setmetatable({
			freq = freq,
			goal = pos,
			pos = pos,
			vel = 0,
		}, Spring)
	end

	-- Advance the spring simulation by `dt` seconds
	function Spring:step(dt: number)
		local f: number = self.freq*2*math.pi
		local g: Vector3 = self.goal
		local p0: Vector3 = self.pos
		local v0: Vector3 = self.vel

		local offset = p0 - g
		local decay = math.exp(-f*dt)

		local p1 = (offset*(1 + f*dt) + v0*dt)*decay + g
		local v1 = (v0*(1 - f*dt) - offset*(f*f*dt))*decay

		self.pos = p1
		self.vel = v1

		return p1
	end
end

CameraUtils.Spring = Spring

-- map a value from one range to another
function CameraUtils.map(x: number, inMin: number, inMax: number, outMin: number, outMax: number): number
	return (x - inMin)*(outMax - outMin)/(inMax - inMin) + outMin
end

-- maps a value from one range to another, clamping to the output range. order does not matter
function CameraUtils.mapClamp(x: number, inMin: number, inMax: number, outMin: number, outMax: number): number
	return math.clamp(
		(x - inMin)*(outMax - outMin)/(inMax - inMin) + outMin,
		math.min(outMin, outMax),
		math.max(outMin, outMax)
	)
end

-- Ritter's loose bounding sphere algorithm
function CameraUtils.getLooseBoundingSphere(parts: {BasePart})
	local points = table.create(#parts)
	for idx, part in pairs(parts) do
		points[idx] = part.Position
	end
	
	-- pick an arbitrary starting point
	local x = points[1]

	-- get y, the point furthest from x
	local y = x
	local yDist = 0

	for _, p in ipairs(points) do
		local pDist = (p - x).Magnitude

		if pDist > yDist then
			y = p
			yDist = pDist
		end
	end

	-- get z, the point furthest from y
	local z = y
	local zDist = 0

	for _, p in ipairs(points) do
		local pDist = (p - y).Magnitude

		if pDist > zDist then
			z = p
			zDist = pDist
		end
	end

	-- use (y, z) as the initial bounding sphere
	local sc = (y + z)*0.5
	local sr = (y - z).Magnitude*0.5

	-- expand sphere to fit any outlying points
	for _, p in ipairs(points) do
		local pDist = (p - sc).Magnitude

		if pDist > sr then
			-- shift to midpoint
			sc = sc + (pDist - sr)*0.5*(p - sc).Unit

			-- expand
			sr = (pDist + sr)*0.5
		end
	end

	return sc, sr
end

-- canonicalize an angle to +-180 degrees
function CameraUtils.sanitizeAngle(a: number): number
	return (a + math.pi)%(2*math.pi) - math.pi
end

-- From TransparencyController
function CameraUtils.Round(num: number, places: number): number
	local decimalPivot = 10^places
	return math.floor(num * decimalPivot + 0.5) / decimalPivot
end

function CameraUtils.IsFinite(val: number): boolean
	return val == val and val ~= math.huge and val ~= -math.huge
end

function CameraUtils.IsFiniteVector3(vec3: Vector3): boolean
	return CameraUtils.IsFinite(vec3.X) and CameraUtils.IsFinite(vec3.Y) and CameraUtils.IsFinite(vec3.Z)
end

-- Legacy implementation renamed
function CameraUtils.GetAngleBetweenXZVectors(v1: Vector3, v2: Vector3): number
	return math.atan2(v2.X*v1.Z-v2.Z*v1.X, v2.X*v1.X+v2.Z*v1.Z)
end

function CameraUtils.RotateVectorByAngleAndRound(camLook: Vector3, rotateAngle: number, roundAmount: number): number
	if camLook.Magnitude > 0 then
		camLook = camLook.unit
		local currAngle = math.atan2(camLook.z, camLook.x)
		local newAngle = round((math.atan2(camLook.z, camLook.x) + rotateAngle) / roundAmount) * roundAmount
		return newAngle - currAngle
	end
	return 0
end

-- K is a tunable parameter that changes the shape of the S-curve
-- the larger K is the more straight/linear the curve gets
local k = 0.35
local lowerK = 0.8
local function SCurveTranform(t: number)
	t = math.clamp(t, -1, 1)
	if t >= 0 then
		return (k*t) / (k - t + 1)
	end
	return -((lowerK*-t) / (lowerK + t + 1))
end

local DEADZONE = 0.1
local function toSCurveSpace(t: number)
	return (1 + DEADZONE) * (2*math.abs(t) - 1) - DEADZONE
end

local function fromSCurveSpace(t: number)
	return t/2 + 0.5
end

function CameraUtils.GamepadLinearToCurve(thumbstickPosition: Vector2)
	local function onAxis(axisValue)
		local sign = 1
		if axisValue < 0 then
			sign = -1
		end
		local point = fromSCurveSpace(SCurveTranform(toSCurveSpace(math.abs(axisValue))))
		point = point * sign
		return math.clamp(point, -1, 1)
	end
	return Vector2.new(onAxis(thumbstickPosition.x), onAxis(thumbstickPosition.y))
end

-- This function converts 4 different, redundant enumeration types to one standard so the values can be compared
function CameraUtils.ConvertCameraModeEnumToStandard(enumValue: 
		Enum.TouchCameraMovementMode | 
		Enum.ComputerCameraMovementMode | 
		Enum.DevTouchCameraMovementMode |
		Enum.DevComputerCameraMovementMode): Enum.ComputerCameraMovementMode | Enum.DevComputerCameraMovementMode
	if enumValue == Enum.TouchCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Follow
	end

	if enumValue == Enum.ComputerCameraMovementMode.Default then
		return Enum.ComputerCameraMovementMode.Classic
	end

	if enumValue == Enum.TouchCameraMovementMode.Classic or
		enumValue == Enum.DevTouchCameraMovementMode.Classic or
		enumValue == Enum.DevComputerCameraMovementMode.Classic or
		enumValue == Enum.ComputerCameraMovementMode.Classic then
		return Enum.ComputerCameraMovementMode.Classic
	end

	if enumValue == Enum.TouchCameraMovementMode.Follow or
		enumValue == Enum.DevTouchCameraMovementMode.Follow or
		enumValue == Enum.DevComputerCameraMovementMode.Follow or
		enumValue == Enum.ComputerCameraMovementMode.Follow then
		return Enum.ComputerCameraMovementMode.Follow
	end

	if enumValue == Enum.TouchCameraMovementMode.Orbital or
		enumValue == Enum.DevTouchCameraMovementMode.Orbital or
		enumValue == Enum.DevComputerCameraMovementMode.Orbital or
		enumValue == Enum.ComputerCameraMovementMode.Orbital then
		return Enum.ComputerCameraMovementMode.Orbital
	end

	if enumValue == Enum.ComputerCameraMovementMode.CameraToggle or
		enumValue == Enum.DevComputerCameraMovementMode.CameraToggle then
		return Enum.ComputerCameraMovementMode.CameraToggle
	end

	-- Note: Only the Dev versions of the Enums have UserChoice as an option
	if enumValue == Enum.DevTouchCameraMovementMode.UserChoice or
		enumValue == Enum.DevComputerCameraMovementMode.UserChoice then
		return Enum.DevComputerCameraMovementMode.UserChoice
	end

	-- For any unmapped options return Classic camera
	return Enum.ComputerCameraMovementMode.Classic
end

return CameraUtils

]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX6a688006e5744448a70152b016d9bfbd">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ClassicCamera</string>
							<string name="ScriptGuid">{4faa49c4-4441-48a0-a217-0eb5aeb08b21}</string>
							<ProtectedString name="Source"><![CDATA[--[[
	ClassicCamera - Classic Roblox camera control module
	2018 Camera Update - AllYourBlox

	Note: This module also handles camera control types Follow and Track, the
	latter of which is currently not distinguished from Classic
--]]

-- Local private variables and constants
local ZERO_VECTOR2 = Vector2.new(0,0)

local tweenAcceleration = math.rad(220) -- Radians/Second^2
local tweenSpeed = math.rad(0)          -- Radians/Second
local tweenMaxSpeed = math.rad(250)     -- Radians/Second
local TIME_BEFORE_AUTO_ROTATE = 2       -- Seconds, used when auto-aligning camera with vehicles

local INITIAL_CAMERA_ANGLE = CFrame.fromOrientation(math.rad(-15), 0, 0)
local ZOOM_SENSITIVITY_CURVATURE = 0.5
local FIRST_PERSON_DISTANCE_MIN = 0.5

--[[ Services ]]--
local PlayersService = game:GetService("Players")
local VRService = game:GetService("VRService")

local CameraInput = require(script.Parent:WaitForChild("CameraInput"))
local Util = require(script.Parent:WaitForChild("CameraUtils"))

--[[ The Module ]]--
local BaseCamera = require(script.Parent:WaitForChild("BaseCamera"))
local ClassicCamera = setmetatable({}, BaseCamera)
ClassicCamera.__index = ClassicCamera

function ClassicCamera.new()
	local self = setmetatable(BaseCamera.new(), ClassicCamera)

	self.isFollowCamera = false
	self.isCameraToggle = false
	self.lastUpdate = tick()
	self.cameraToggleSpring = Util.Spring.new(5, 0)

	return self
end

function ClassicCamera:GetCameraToggleOffset(dt: number)
	if self.isCameraToggle then
		local zoom = self.currentSubjectDistance

		if CameraInput.getTogglePan() then
			self.cameraToggleSpring.goal = math.clamp(Util.map(zoom, 0.5, self.FIRST_PERSON_DISTANCE_THRESHOLD, 0, 1), 0, 1)
		else
			self.cameraToggleSpring.goal = 0
		end

		local distanceOffset: number = math.clamp(Util.map(zoom, 0.5, 64, 0, 1), 0, 1) + 1
		return Vector3.new(0, self.cameraToggleSpring:step(dt)*distanceOffset, 0)
	end

	return Vector3.new()
end

-- Movement mode standardized to Enum.ComputerCameraMovementMode values
function ClassicCamera:SetCameraMovementMode(cameraMovementMode: Enum.ComputerCameraMovementMode)
	BaseCamera.SetCameraMovementMode(self, cameraMovementMode)

	self.isFollowCamera = cameraMovementMode == Enum.ComputerCameraMovementMode.Follow
	self.isCameraToggle = cameraMovementMode == Enum.ComputerCameraMovementMode.CameraToggle
end

function ClassicCamera:Update()
	local now = tick()
	local timeDelta = now - self.lastUpdate

	local camera = workspace.CurrentCamera
	local newCameraCFrame = camera.CFrame
	local newCameraFocus = camera.Focus

	local overrideCameraLookVector = nil
	if self.resetCameraAngle then
		local rootPart: BasePart = self:GetHumanoidRootPart()
		if rootPart then
			overrideCameraLookVector = (rootPart.CFrame * INITIAL_CAMERA_ANGLE).lookVector
		else
			overrideCameraLookVector = INITIAL_CAMERA_ANGLE.lookVector
		end
		self.resetCameraAngle = false
	end

	local player = PlayersService.LocalPlayer
	local humanoid = self:GetHumanoid()
	local cameraSubject = camera.CameraSubject
	local isInVehicle = cameraSubject and cameraSubject:IsA("VehicleSeat")
	local isOnASkateboard = cameraSubject and cameraSubject:IsA("SkateboardPlatform")
	local isClimbing = humanoid and humanoid:GetState() == Enum.HumanoidStateType.Climbing

	if self.lastUpdate == nil or timeDelta > 1 then
		self.lastCameraTransform = nil
	end
	
	local rotateInput = CameraInput.getRotation()

	self:StepZoom()

	local cameraHeight = self:GetCameraHeight()

	-- Reset tween speed if user is panning
	if CameraInput.getRotation() ~= Vector2.new() then
		tweenSpeed = 0
		self.lastUserPanCamera = tick()
	end

	local userRecentlyPannedCamera = now - self.lastUserPanCamera < TIME_BEFORE_AUTO_ROTATE
	local subjectPosition: Vector3 = self:GetSubjectPosition()

	if subjectPosition and player and camera then
		local zoom = self:GetCameraToSubjectDistance()
		if zoom < 0.5 then
			zoom = 0.5
		end

		if self:GetIsMouseLocked() and not self:IsInFirstPerson() then
			-- We need to use the right vector of the camera after rotation, not before
			local newLookCFrame: CFrame = self:CalculateNewLookCFrameFromArg(overrideCameraLookVector, rotateInput)

			local offset: Vector3 = self:GetMouseLockOffset()
			local cameraRelativeOffset: Vector3 = offset.X * newLookCFrame.rightVector + offset.Y * newLookCFrame.upVector + offset.Z * newLookCFrame.lookVector

			--offset can be NAN, NAN, NAN if newLookVector has only y component
			if Util.IsFiniteVector3(cameraRelativeOffset) then
				subjectPosition = subjectPosition + cameraRelativeOffset
			end
		else
			local userPanningTheCamera = CameraInput.getRotation() ~= Vector2.new()

			if not userPanningTheCamera and self.lastCameraTransform then

				local isInFirstPerson = self:IsInFirstPerson()

				if (isInVehicle or isOnASkateboard or (self.isFollowCamera and isClimbing)) and self.lastUpdate and humanoid and humanoid.Torso then
					if isInFirstPerson then
						if self.lastSubjectCFrame and (isInVehicle or isOnASkateboard) and cameraSubject:IsA("BasePart") then
							local y = -Util.GetAngleBetweenXZVectors(self.lastSubjectCFrame.lookVector, cameraSubject.CFrame.lookVector)
							if Util.IsFinite(y) then
								rotateInput = rotateInput + Vector2.new(y, 0)
							end
							tweenSpeed = 0
						end
					elseif not userRecentlyPannedCamera then
						local forwardVector = humanoid.Torso.CFrame.lookVector
						tweenSpeed = math.clamp(tweenSpeed + tweenAcceleration * timeDelta, 0, tweenMaxSpeed)

						local percent = math.clamp(tweenSpeed * timeDelta, 0, 1)
						if self:IsInFirstPerson() and not (self.isFollowCamera and self.isClimbing) then
							percent = 1
						end

						local y = Util.GetAngleBetweenXZVectors(forwardVector, self:GetCameraLookVector())
						if Util.IsFinite(y) and math.abs(y) > 0.0001 then
							rotateInput = rotateInput + Vector2.new(y * percent, 0)
						end
					end

				elseif self.isFollowCamera and (not (isInFirstPerson or userRecentlyPannedCamera) and not VRService.VREnabled) then
					-- Logic that was unique to the old FollowCamera module
					local lastVec = -(self.lastCameraTransform.p - subjectPosition)

					local y = Util.GetAngleBetweenXZVectors(lastVec, self:GetCameraLookVector())

					-- This cutoff is to decide if the humanoid's angle of movement,
					-- relative to the camera's look vector, is enough that
					-- we want the camera to be following them. The point is to provide
					-- a sizable dead zone to allow more precise forward movements.
					local thetaCutoff = 0.4

					-- Check for NaNs
					if Util.IsFinite(y) and math.abs(y) > 0.0001 and math.abs(y) > thetaCutoff * timeDelta then
						rotateInput = rotateInput + Vector2.new(y, 0)
					end
				end
			end
		end

		if not self.isFollowCamera then
			local VREnabled = VRService.VREnabled

			if VREnabled then
				newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
			else
				newCameraFocus = CFrame.new(subjectPosition)
			end

			local cameraFocusP = newCameraFocus.p
			if VREnabled and not self:IsInFirstPerson() then
				local vecToSubject = (subjectPosition - camera.CFrame.p)
				local distToSubject = vecToSubject.magnitude

				local flaggedRotateInput = rotateInput

				-- Only move the camera if it exceeded a maximum distance to the subject in VR
				if distToSubject > zoom or flaggedRotateInput.x ~= 0 then
					local desiredDist = math.min(distToSubject, zoom)
					vecToSubject = self:CalculateNewLookVectorFromArg(nil, rotateInput) * desiredDist
					local newPos = cameraFocusP - vecToSubject
					local desiredLookDir = camera.CFrame.lookVector
					if flaggedRotateInput.x ~= 0 then
						desiredLookDir = vecToSubject
					end
					local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)

					newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
				end
			else
				local newLookVector = self:CalculateNewLookVectorFromArg(overrideCameraLookVector, rotateInput)
				newCameraCFrame = CFrame.new(cameraFocusP - (zoom * newLookVector), cameraFocusP)
			end
		else -- is FollowCamera
			local newLookVector = self:CalculateNewLookVectorFromArg(overrideCameraLookVector, rotateInput)

			if VRService.VREnabled then
				newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
			else
				newCameraFocus = CFrame.new(subjectPosition)
			end
			newCameraCFrame = CFrame.new(newCameraFocus.p - (zoom * newLookVector), newCameraFocus.p) + Vector3.new(0, cameraHeight, 0)
		end

		local toggleOffset = self:GetCameraToggleOffset(timeDelta)
		newCameraFocus = newCameraFocus + toggleOffset
		newCameraCFrame = newCameraCFrame + toggleOffset

		self.lastCameraTransform = newCameraCFrame
		self.lastCameraFocus = newCameraFocus
		if (isInVehicle or isOnASkateboard) and cameraSubject:IsA("BasePart") then
			self.lastSubjectCFrame = cameraSubject.CFrame
		else
			self.lastSubjectCFrame = nil
		end
	end

	self.lastUpdate = now
	return newCameraCFrame, newCameraFocus
end

function ClassicCamera:EnterFirstPerson()
	self.inFirstPerson = true
	self:UpdateMouseBehavior()
end

function ClassicCamera:LeaveFirstPerson()
	self.inFirstPerson = false
	self:UpdateMouseBehavior()
end

return ClassicCamera
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX5f45ba5605c141c985efb2f5c8e16398">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">client</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBXb0f90bf60b964d73b9dfc39c09260ca9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">controllers</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBXdab0a54edfa747d6ab4b09b7a4b565f7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">SpringCam</string>
							<string name="ScriptGuid">{24db3d11-a932-4de5-b189-f16c1894e19d}</string>
							<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local Config = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "Config")
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local Players = _services.Players
local RunService = _services.RunService
local UserInputService = _services.UserInputService
local Janitor = TS.import(script, TS.getModule(script, "@rbxts", "janitor").src).Janitor
local Spring = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "modules", "spring")
local Camera = game.Workspace.CurrentCamera
local Player = Players.LocalPlayer
--[[
	*
	* Manages the creation of a spring-based camera on a player's character
]]
local SpringCamera
do
	SpringCamera = setmetatable({}, {
		__tostring = function()
			return "SpringCamera"
		end,
	})
	SpringCamera.__index = SpringCamera
	function SpringCamera.new(...)
		local self = setmetatable({}, SpringCamera)
		return self:constructor(...) or self
	end
	function SpringCamera:constructor()
		self.janitor = Janitor.new()
	end
	function SpringCamera:onInit()
		if not Config.Elements.SpringCamera then
			return nil
		end
		if Player.Character then
			self:Create()
		end
		Player.CharacterAdded:Connect(function()
			return self:Create()
		end)
		Player.CharacterRemoving:Connect(function()
			return self:Destroy()
		end)
	end
	function SpringCamera:Create()
		if not Player.Character then
			error("character is required")
		end
		if not Camera then
			error("camera must be present")
		end
		local head = Player.Character:WaitForChild("Head")
		if not head:IsA("BasePart") then
			error("head has an incorrect type")
		end
		local subject = Instance.new("Part")
		subject.CanCollide = false
		subject.CanTouch = false
		subject.Transparency = 1
		subject.Size = Vector3.new(0.1, 0.1, 0.1)
		subject.Anchored = true
		subject.Parent = Player.Character
		self.janitor:Add(subject)
		subject.Position = head.Position
		Camera.CameraSubject = subject
		local spring = Spring.new(subject.Position)
		spring.Speed = 60
		spring.Damper = 1
		RunService:BindToRenderStep("UpdateSubject", Enum.RenderPriority.Camera.Value, function(deltaTime)
			return SpringCamera:UpdateCamera(deltaTime, spring, subject)
		end)
	end
	function SpringCamera:UpdateCamera(deltaTime, spring, subject)
		-- CHECKS & ASSIGNMENT
		if not Camera then
			error("camera must be present")
		end
		if not Player.Character then
			error("character is required")
		end
		if not subject then
			error("Subject is nil")
		end
		local head = Player.Character:FindFirstChild("Head")
		local rootPart = Player.Character:FindFirstChild("HumanoidRootPart")
		if not head or not rootPart or not head:IsA("BasePart") or not rootPart:IsA("BasePart") then
			error("player head or humanoidrootpart is of an incorrect value - head: " .. tostring(head) .. ",rootPart: " .. tostring(rootPart))
		end
		-- BODY
		local _position = Camera.CFrame.Position
		local _position_1 = subject.Position
		local _condition = (_position - _position_1).Magnitude < 1
		if not _condition then
			local _position_2 = Camera.CFrame.Position
			local _position_3 = head.Position
			_condition = (_position_2 - _position_3).Magnitude < 1
		end
		if _condition then
			Camera.CameraSubject = head
			subject.Position = head.Position
		else
			spring.Target = head.Position
			Camera.CameraSubject = subject
			subject.Position = spring.Position
			if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter then
				local lookXZ = Vector3.new(Camera.CFrame.LookVector.X, 0, Camera.CFrame.LookVector.Z)
				rootPart.CFrame = CFrame.lookAt(rootPart.Position, rootPart.Position + lookXZ)
			end
		end
	end
	function SpringCamera:Destroy()
		RunService:UnbindFromRenderStep("UpdateSubject")
		self.janitor:Cleanup()
	end
end
-- (Flamework) SpringCamera metadata
Reflect.defineMetadata(SpringCamera, "identifier", "client/controllers/SpringCam@SpringCamera")
Reflect.defineMetadata(SpringCamera, "flamework:isExternal", false)
Reflect.defineMetadata(SpringCamera, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(SpringCamera, "flamework:decorators", { "$:flamework@Controller" })
Reflect.defineMetadata(SpringCamera, "flamework:decorators.$:flamework@Controller", {
	type = "Controller",
})
return {
	SpringCamera = SpringCamera,
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4239b21e67574230955439837dd55984">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Direction</string>
							<string name="ScriptGuid">{8886eea6-af30-4b82-b552-37afa737c7ff}</string>
							<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local Players = _services.Players
local RunService = _services.RunService
local Events = TS.import(script, script.Parent.Parent, "events").Events
local Camera = game.Workspace.CurrentCamera
--[[
	*
	*
	* Manages the sending of what direction the player is facing (either "UP" or "DOWN") to the server thorugh the Direction event.
	*
	*
	* @example
	*
	* ```
	* WRITTEN: player rotates their camera up, fast enough to trigger the "if (this.prevX !== x && math.abs(this.prevX - x) >= 0.02)" to evaluate to true which sets the direction to "UP" and fires the direction event with the direction.
	* ```
	*
	* @category Required
]]
local Direction
do
	Direction = setmetatable({}, {
		__tostring = function()
			return "Direction"
		end,
	})
	Direction.__index = Direction
	function Direction.new(...)
		local self = setmetatable({}, Direction)
		return self:constructor(...) or self
	end
	function Direction:constructor()
		self.Direction = "DOWN"
		self.prevX = 0
	end
	function Direction:onInit()
		if not Camera then
			error("player camera for " .. Players.LocalPlayer.Name .. " not found")
		end
		RunService.Heartbeat:Connect(function()
			local x = Camera.CFrame:ToOrientation()
			if self.prevX ~= x and math.abs(self.prevX - x) >= 0.02 then
				local currentDirection = self.prevX < x and "DOWN" or "UP"
				if currentDirection ~= self.Direction then
					-- moving in different direction
					self.Direction = currentDirection
					Events.Direction(self.Direction)
				end
			end
			self.prevX = x
		end)
	end
end
-- (Flamework) Direction metadata
Reflect.defineMetadata(Direction, "identifier", "client/controllers/Direction@Direction")
Reflect.defineMetadata(Direction, "flamework:isExternal", false)
Reflect.defineMetadata(Direction, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(Direction, "flamework:decorators", { "$:flamework@Controller" })
Reflect.defineMetadata(Direction, "flamework:decorators.$:flamework@Controller", {
	type = "Controller",
})
return {
	Direction = Direction,
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX116fc94b3f9148cdb533833d3e2c8bef">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Rotation</string>
							<string name="ScriptGuid">{9f255cee-bc6d-46f7-b12e-c96c0db603dc}</string>
							<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local Janitor = TS.import(script, TS.getModule(script, "@rbxts", "janitor").src).Janitor
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local Players = _services.Players
local TweenService = _services.TweenService
local RunService = _services.RunService
local Events = TS.import(script, script.Parent.Parent, "events").Events
local Config = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "Config")
local Player = Players.LocalPlayer
local Camera = game.Workspace.CurrentCamera
local _binding = { math.asin, CFrame.Angles }
local asin = _binding[1]
local CFAng = _binding[2]
--[[
	*
	* Handles the rotation of a player's body to match the direction of their camera.
]]
local Rotation
do
	Rotation = setmetatable({}, {
		__tostring = function()
			return "Rotation"
		end,
	})
	Rotation.__index = Rotation
	function Rotation.new(...)
		local self = setmetatable({}, Rotation)
		return self:constructor(...) or self
	end
	function Rotation:constructor()
		self.Enabled = true
		self.janitor = Janitor.new()
		self.delay = 0.1
	end
	function Rotation:onInit()
		if not Config.Elements.Rotation then
			return nil
		end
		if Player.Character then
			self:Start(Player.Character)
		end
		Player.CharacterAdded:Connect(function(char)
			return self:Start(char)
		end)
		Events.UpdateRotation:connect(function(player, neckCFrame, waistCFrame, leftShoulderCFrame, rightShoulderCFrame)
			Rotation:UpdateOtherRotation(player, neckCFrame, waistCFrame, leftShoulderCFrame, rightShoulderCFrame)
		end)
	end
	function Rotation:Start(character)
		local humanoid = character:WaitForChild("Humanoid")
		if not humanoid:IsA("Humanoid") then
			error("incorrect humanoid type")
		end
		local deadConnection
		deadConnection = humanoid.Died:Connect(function()
			deadConnection:Disconnect()
			self:Stop()
		end)
		local Head = character:WaitForChild("Head")
		local UpperTorso = character:WaitForChild("UpperTorso")
		local RightUpperArm = character:WaitForChild("RightUpperArm")
		local LeftUpperArm = character:WaitForChild("LeftUpperArm")
		local Root = character:WaitForChild("HumanoidRootPart")
		local Waist = UpperTorso:WaitForChild("Waist")
		local Neck = Head:WaitForChild("Neck")
		local RightShoulder = RightUpperArm:WaitForChild("RightShoulder")
		local LeftShoulder = LeftUpperArm:WaitForChild("LeftShoulder")
		if not Head:IsA("BasePart") or not UpperTorso:IsA("BasePart") or not RightUpperArm:IsA("BasePart") or not LeftUpperArm:IsA("BasePart") or not Root:IsA("BasePart") then
			error("recieved an incorrect type for a player limb")
		end
		if not Waist:IsA("Motor6D") or not Neck:IsA("Motor6D") or not RightShoulder:IsA("Motor6D") or not LeftShoulder:IsA("Motor6D") then
			error("recieved an incorrect type for a player joint")
		end
		local NeckYOffset = Neck.C0.Y
		local RightShoulderXOffset = RightShoulder.C0.X
		local RightShoulderYOffset = RightShoulder.C0.Y
		local LeftShoulderXOffset = LeftShoulder.C0.X
		local LeftShoulderYOffset = LeftShoulder.C0.Y
		self.janitor:Add(RunService.RenderStepped:Connect(function()
			return self:UpdateOwnRotation(NeckYOffset, RightShoulderXOffset, RightShoulderYOffset, LeftShoulderXOffset, LeftShoulderYOffset)
		end))
		local run = true
		self.janitor:Add(function()
			run = false
		end)
		coroutine.resume(coroutine.create(function()
			while run and (TS.Promise.delay(self.delay):await()) do
				Events.UpdateRotation(Neck.C0, Waist.C0, LeftShoulder.C0, RightShoulder.C0)
			end
		end))
	end
	function Rotation:UpdateOwnRotation(NeckYOffset, RightShoulderXOffset, RightShoulderYOffset, LeftShoulderXOffset, LeftShoulderYOffset)
		if NeckYOffset == nil then
			NeckYOffset = 0
		end
		if RightShoulderXOffset == nil then
			RightShoulderXOffset = 0
		end
		if RightShoulderYOffset == nil then
			RightShoulderYOffset = 0
		end
		if LeftShoulderXOffset == nil then
			LeftShoulderXOffset = 0
		end
		if LeftShoulderYOffset == nil then
			LeftShoulderYOffset = 0
		end
		local factor = 0.8
		local character = Player.Character
		if not character then
			error("character required to update rotation")
		end
		local Head = character:WaitForChild("Head")
		local UpperTorso = character:WaitForChild("UpperTorso")
		local RightUpperArm = character:WaitForChild("RightUpperArm")
		local LeftUpperArm = character:WaitForChild("LeftUpperArm")
		local Root = character:WaitForChild("HumanoidRootPart")
		local Waist = UpperTorso:WaitForChild("Waist")
		local Neck = Head:WaitForChild("Neck")
		local RightShoulder = RightUpperArm:WaitForChild("RightShoulder")
		local LeftShoulder = LeftUpperArm:WaitForChild("LeftShoulder")
		if not Head:IsA("BasePart") or not UpperTorso:IsA("BasePart") or not RightUpperArm:IsA("BasePart") or not LeftUpperArm:IsA("BasePart") or not Root:IsA("BasePart") then
			error("recieved an incorrect type for a player limb")
		end
		if not Waist:IsA("Motor6D") or not Neck:IsA("Motor6D") or not RightShoulder:IsA("Motor6D") or not LeftShoulder:IsA("Motor6D") then
			error("recieved an incorrect type for a player joint")
		end
		if not self.Enabled then
			-- this disables all body rotation by tweening all joints to their normal position if they haven't been already
			if CFrame.new(0, 0, 0) ~= Waist.C0 then
				Rotation:Tween(Waist, CFrame.new(0, 0, 0), 0.5)
			end
			if CFrame.new(0, NeckYOffset, 0) ~= Neck.C0 then
				Rotation:Tween(Neck, CFrame.new(0, NeckYOffset, 0), 0.5)
			end
			if CFrame.new(LeftShoulderXOffset, LeftShoulderYOffset, 0) ~= LeftShoulder.C0 then
				Rotation:Tween(LeftShoulder, CFrame.new(LeftShoulderXOffset, LeftShoulderYOffset, 0), 0.5)
			end
			if CFrame.new(RightShoulderXOffset, RightShoulderYOffset, 0) ~= RightShoulder.C0 then
				Rotation:Tween(RightShoulder, CFrame.new(RightShoulderXOffset, RightShoulderYOffset, 0), 0.5)
			end
			return nil
		end
		if not Camera then
			error("camera required")
		end
		local CameraDirection = Root.CFrame:ToObjectSpace(Camera.CFrame).LookVector
		-- note - could probs refactor this later on
		local _cFrame = CFrame.new(0, 0, 0)
		local _arg0 = CFAng(0, -asin(Rotation:CapX(CameraDirection.X / factor)), 0)
		local _arg0_1 = CFAng(asin(Rotation:CapY(CameraDirection.Y / factor)), 0, 0)
		local newCFrame1 = _cFrame * _arg0 * _arg0_1
		if newCFrame1 ~= Waist.C0 then
			Rotation:Tween(Waist, newCFrame1)
		end
		local _cFrame_1 = CFrame.new(0, NeckYOffset, 0)
		local _arg0_2 = CFAng(0, asin(Rotation:CapX(CameraDirection.X / factor)), 0)
		local _arg0_3 = CFAng(-asin(Rotation:CapY(CameraDirection.Y / factor)), 0, 0)
		local newCFrame2 = _cFrame_1 * _arg0_2 * _arg0_3
		if newCFrame2 ~= Neck.C0 then
			Rotation:Tween(Neck, newCFrame2)
		end
		local _cFrame_2 = CFrame.new(LeftShoulderXOffset, LeftShoulderYOffset, 0)
		local _arg0_4 = CFAng(0, -asin(Rotation:CapX(CameraDirection.X / factor)), 0)
		local _arg0_5 = CFAng(asin(Rotation:CapY(CameraDirection.Y / factor)), 0, 0)
		local newCFrame3 = _cFrame_2 * _arg0_4 * _arg0_5
		if newCFrame3 ~= LeftShoulder.C0 then
			Rotation:Tween(LeftShoulder, newCFrame3)
		end
		local _cFrame_3 = CFrame.new(RightShoulderXOffset, RightShoulderYOffset, 0)
		local _arg0_6 = CFAng(0, -asin(Rotation:CapX(CameraDirection.X / factor)), 0)
		local _arg0_7 = CFAng(asin(Rotation:CapY(CameraDirection.Y / factor)), 0, 0)
		local newCFrame4 = _cFrame_3 * _arg0_6 * _arg0_7
		if newCFrame4 ~= RightShoulder.C0 then
			Rotation:Tween(RightShoulder, newCFrame4)
		end
	end
	function Rotation:UpdateOtherRotation(player, neckCFrame, waistCFrame, leftShoulderCFrame, rightShoulderCFrame)
		local character = player.Character
		if not character then
			error("character not found")
		end
		local Neck = character:WaitForChild("Head"):FindFirstChild("Neck")
		local Waist = character:WaitForChild("UpperTorso"):FindFirstChild("Waist")
		local LeftShoulder = character:WaitForChild("LeftUpperArm"):FindFirstChild("LeftShoulder")
		local RightShoulder = character:WaitForChild("RightUpperArm"):FindFirstChild("RightShoulder")
		if not Neck or not Neck:IsA("Motor6D") or not Waist or not Waist:IsA("Motor6D") or not LeftShoulder or not LeftShoulder:IsA("Motor6D") or not RightShoulder or not RightShoulder:IsA("Motor6D") then
			error("could not find the correct value for a player joint")
		end
		local TweenTime = 0.1
		TweenService:Create(Neck, TweenInfo.new(TweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {
			C0 = neckCFrame,
		}):Play()
		TweenService:Create(Waist, TweenInfo.new(TweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {
			C0 = waistCFrame,
		}):Play()
		TweenService:Create(LeftShoulder, TweenInfo.new(TweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {
			C0 = leftShoulderCFrame,
		}):Play()
		TweenService:Create(RightShoulder, TweenInfo.new(TweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {
			C0 = rightShoulderCFrame,
		}):Play()
	end
	function Rotation:Stop()
		self.janitor:Cleanup()
	end
	function Rotation:CapY(value)
		if value < 0 then
			value = value / 3
		end
		return math.clamp(value, -0.5, 0.5)
	end
	function Rotation:CapX(value)
		return math.clamp(value, -0.5, 0.5)
	end
	function Rotation:Tween(joint, NewCFrame, time)
		if time == nil then
			time = 0.25
		end
		TweenService:Create(joint, TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {
			C0 = NewCFrame,
		}):Play()
	end
end
-- (Flamework) Rotation metadata
Reflect.defineMetadata(Rotation, "identifier", "client/controllers/Rotation@Rotation")
Reflect.defineMetadata(Rotation, "flamework:isExternal", false)
Reflect.defineMetadata(Rotation, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(Rotation, "flamework:decorators", { "$:flamework@Controller" })
Reflect.defineMetadata(Rotation, "flamework:decorators.$:flamework@Controller", {
	type = "Controller",
})
return {
	Rotation = Rotation,
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX697529b34d214af4ac59ddc33417bae5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Input</string>
							<string name="ScriptGuid">{2f48a91a-b665-4414-8c3c-27726681d7e4}</string>
							<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local UserInputService = TS.import(script, TS.getModule(script, "@rbxts", "services")).UserInputService
local Events = TS.import(script, script.Parent.Parent, "events").Events
--[[
	*
	* Manages the sending of input events from the client to the server through the Input server event.
]]
local Input
do
	Input = setmetatable({}, {
		__tostring = function()
			return "Input"
		end,
	})
	Input.__index = Input
	function Input.new(...)
		local self = setmetatable({}, Input)
		return self:constructor(...) or self
	end
	function Input:constructor()
	end
	function Input:onInit()
		Input:createInputEvent(UserInputService.InputBegan)
		Input:createInputEvent(UserInputService.InputEnded)
	end
	function Input:createInputEvent(event)
		event:Connect(function(input, gameProcessedEvent)
			if gameProcessedEvent then
				return nil
			end
			Events.Input({
				UserInputState = input.UserInputState,
				UserInputType = input.UserInputType,
				KeyCode = input.KeyCode,
			})
		end)
	end
end
-- (Flamework) Input metadata
Reflect.defineMetadata(Input, "identifier", "client/controllers/Input@Input")
Reflect.defineMetadata(Input, "flamework:isExternal", false)
Reflect.defineMetadata(Input, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(Input, "flamework:decorators", { "$:flamework@Controller" })
Reflect.defineMetadata(Input, "flamework:decorators.$:flamework@Controller", {
	type = "Controller",
})
return {
	Input = Input,
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX7b8fc8e2b4cb4d8e8f59bd029a82e8fc">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Shake</string>
							<string name="ScriptGuid">{ea0d1899-0bc0-4226-ae0e-154598182155}</string>
							<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
-- TOGGLEABLE ELEMENT
local Config = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "Config")
local CameraShaker = TS.import(script, TS.getModule(script, "@rbxts", "camera-shaker").CameraShaker)
local Events = TS.import(script, script.Parent.Parent, "events").Events
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
local Camera = game.Workspace.CurrentCamera
--[[
	*
	* Listens to attack status signals (when the player swing theirs sword, hits a player, gets damaged, etc) then applies a camera shake effect accordingly.
]]
local Shake
do
	Shake = setmetatable({}, {
		__tostring = function()
			return "Shake"
		end,
	})
	Shake.__index = Shake
	function Shake.new(...)
		local self = setmetatable({}, Shake)
		return self:constructor(...) or self
	end
	function Shake:constructor()
		self.CameraShaker = CameraShaker.new(100, function(shakeCFrame)
			if not Camera then
				error("player camera for " .. Players.LocalPlayer.Name .. " not found")
			end
			Camera.CFrame = Camera.CFrame * shakeCFrame
		end)
	end
	function Shake:onInit()
		if not Config.Elements.CameraShake then
			return nil
		end
		Events.AttackStatus:connect(function(status)
			repeat
				if status == ("BLOCKED") then
					self.CameraShaker:Shake(CameraShaker.Presets.Bump)
					return self.CameraShaker:Shake(CameraShaker.Presets.Bump)
				end
				if status == ("DAMAGED") then
					self.CameraShaker:Shake(CameraShaker.Presets.Bump)
					return self.CameraShaker:Shake(CameraShaker.Presets.Bump)
				end
				if status == ("HIT") then
					return self.CameraShaker:Shake(CameraShaker.Presets.Bump)
				end
				if status == ("SWUNG") then
					return self.CameraShaker:Shake(CameraShaker.Presets.Bump)
				end
				do
					local _exhaustiveCheck = status
					error("exhaustive check failed!, got status: " .. tostring(status))
				end
			until true
		end)
	end
end
-- (Flamework) Shake metadata
Reflect.defineMetadata(Shake, "identifier", "client/controllers/Shake@Shake")
Reflect.defineMetadata(Shake, "flamework:isExternal", false)
Reflect.defineMetadata(Shake, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(Shake, "flamework:decorators", { "$:flamework@Controller" })
Reflect.defineMetadata(Shake, "flamework:decorators.$:flamework@Controller", {
	type = "Controller",
})
return {
	Shake = Shake,
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX09a62cfaa0664454a344080d34c986c1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">components</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX58935143e74f47f5bf024d66666dc26d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">keep</string>
							<string name="ScriptGuid">{74b16750-0945-4a6e-ac13-2f4d99210b3f}</string>
							<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
return nil
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX6acb398e2b084166998b1106fea83c06">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">runtime</string>
						<string name="ScriptGuid">{90b8cb01-eac3-41f3-acb7-121b6a674b2c}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Flamework = TS.import(script, TS.getModule(script, "@flamework", "core").out).Flamework
Flamework._addPaths({ "StarterPlayer", "StarterPlayerScripts", "client", "components" })
Flamework._addPaths({ "StarterPlayer", "StarterPlayerScripts", "client", "controllers" })
Flamework._addPaths({ "ReplicatedStorage", "shared", "components" })
Flamework.ignite()
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0a6583a39f5e43db93629aa9a39f2402">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">events</string>
						<string name="ScriptGuid">{e946db02-0983-44ba-9bc9-7e849b765cb0}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local GlobalEvents = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "events").GlobalEvents
local Events = GlobalEvents.client
return {
	Events = Events,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBXb0f9704bcb7f4e7bbb0dc21adda9275a">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="LocalScript" referent="RBXe3462c1a18fb49e2bb11b1876e7af725">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Animate</string>
					<string name="ScriptGuid">{6A2F5EEC-D84E-4F4E-9D18-3C22073C85F8}</string>
					<ProtectedString name="Source"><![CDATA[local Character = script.Parent
local Humanoid = Character:WaitForChild("Humanoid")
local pose = "Standing"

local userNoUpdateOnLoopSuccess, userNoUpdateOnLoopValue = pcall(function() return UserSettings():IsUserFeatureEnabled("UserNoUpdateOnLoop") end)
local userNoUpdateOnLoop = userNoUpdateOnLoopSuccess and userNoUpdateOnLoopValue

local userEmoteToRunThresholdChange do
	local success, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserEmoteToRunThresholdChange")
	end)
	userEmoteToRunThresholdChange = success and value
end

local userPlayEmoteByIdAnimTrackReturn do
	local success, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserPlayEmoteByIdAnimTrackReturn2")
	end)
	userPlayEmoteByIdAnimTrackReturn = success and value
end

local animateScriptEmoteHookFlagExists, animateScriptEmoteHookFlagEnabled = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserAnimateScriptEmoteHook")
end)
local FFlagAnimateScriptEmoteHook = animateScriptEmoteHookFlagExists and animateScriptEmoteHookFlagEnabled

local AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
local HumanoidHipHeight = 2

local EMOTE_TRANSITION_TIME = 0.1

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0

local runAnimTrack = nil
local runAnimKeyframeHandler = nil

local PreloadedAnims = {}

local animTable = {}
local walkAnim = require(game:GetService("ReplicatedStorage").shared.Config).Animations.Walk
local animNames = { 
	idle = 	{	
		{ id = "http://www.roblox.com/asset/?id=6530535130", weight = 1 },
		{ id = "http://www.roblox.com/asset/?id=6530535130", weight = 1 },
		{ id = "http://www.roblox.com/asset/?id=6530535130", weight = 9 }
			},
	walk = 	{ 	
		{ id = "http://www.roblox.com/asset/?id=" .. tostring(walkAnim), weight = 10 } 
			}, 
	run = 	{
		{ id = "http://www.roblox.com/asset/?id=".. tostring(walkAnim), weight = 10 } 
			}, 
	swim = 	{
				{ id = "http://www.roblox.com/asset/?id=507784897", weight = 10 } 
			}, 
	swimidle = 	{
				{ id = "http://www.roblox.com/asset/?id=507785072", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=507765000", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=507767968", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=507765644", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=2506281703", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=522635514", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=522638767", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=507770239", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=507770453", weight = 10 } 
			},
	dance = {
				{ id = "http://www.roblox.com/asset/?id=507771019", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507771955", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507772104", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=507776043", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507776720", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507776879", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=507777268", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507777451", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507777623", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=507770818", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=507770677", weight = 10 } 
			},
}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

math.randomseed(tick())

function findExistingAnimationInSet(set, anim)
	if set == nil or anim == nil then
		return 0
	end
	
	for idx = 1, set.count, 1 do 
		if set[idx].anim.AnimationId == anim.AnimationId then
			return idx
		end
	end
	
	return 0
end

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	local allowCustomAnimations = true

	local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
	if not success then
		allowCustomAnimations = true
	end

	-- check for config values
	local config = script:FindFirstChild(name)
	if (allowCustomAnimations and config ~= nil) then
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		
		local idx = 0
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				local newWeight = 1
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject ~= nil) then
					newWeight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				idx = animTable[name].count
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				animTable[name][idx].weight = newWeight
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				table.insert(animTable[name].connections, childPart.ChildAdded:connect(function(property) configureAnimationSet(name, fileList) end))
				table.insert(animTable[name].connections, childPart.ChildRemoved:connect(function(property) configureAnimationSet(name, fileList) end))
			end
		end
	end
	
	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
		end
	end
	
	-- preload anims
	for i, animType in pairs(animTable) do
		for idx = 1, animType.count, 1 do
			if PreloadedAnims[animType[idx].anim.AnimationId] == nil then
				Humanoid:LoadAnimation(animType[idx].anim)
				PreloadedAnims[animType[idx].anim.AnimationId] = true
			end				
		end
	end
end

------------------------------------------------------------------------------------------------------------

function configureAnimationSetOld(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	local allowCustomAnimations = true

	local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
	if not success then
		allowCustomAnimations = true
	end

	-- check for config values
	local config = script:FindFirstChild(name)
	if (allowCustomAnimations and config ~= nil) then
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
			-- print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
	
	-- preload anims
	for i, animType in pairs(animTable) do
		for idx = 1, animType.count, 1 do 
			Humanoid:LoadAnimation(animType[idx].anim)
		end
	end
end

-- Setup animation objects
function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.31

local toolTransitionTime = 0.1
local fallTransitionTime = 0.2

local currentlyPlayingEmote = false

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end
	
	if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
		oldAnim = "idle"
		currentlyPlayingEmote = false
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end

	-- clean up walk if there is one
	if (runAnimKeyframeHandler ~= nil) then
		runAnimKeyframeHandler:disconnect()
	end
	
	if (runAnimTrack ~= nil) then
		runAnimTrack:Stop()
		runAnimTrack:Destroy()
		runAnimTrack = nil
	end
	
	return oldAnim
end

function getHeightScale()
	if Humanoid then
		if not Humanoid.AutomaticScalingEnabled then
			return 1
		end
		
		local scale = Humanoid.HipHeight / HumanoidHipHeight
		if AnimationSpeedDampeningObject == nil then
			AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
		end
		if AnimationSpeedDampeningObject ~= nil then
			scale = 1 + (Humanoid.HipHeight - HumanoidHipHeight) * AnimationSpeedDampeningObject.Value / HumanoidHipHeight
		end
		return scale
	end	
	return 1
end

local function rootMotionCompensation(speed)
	local speedScaled = speed * 1.25
	local heightScale = getHeightScale()
	local runSpeed = speedScaled / heightScale
	return runSpeed
end

local smallButNotZero = 0.0001
local function setRunSpeed(speed)
	local normalizedWalkSpeed = 0.5 -- established empirically using current `913402848` walk animation
	local normalizedRunSpeed  = 1
	local runSpeed = rootMotionCompensation(speed)

	local walkAnimationWeight = smallButNotZero
	local runAnimationWeight = smallButNotZero
	local walkAnimationTimewarp = runSpeed/normalizedWalkSpeed
	local runAnimationTimerwarp = runSpeed/normalizedRunSpeed

	if runSpeed <= normalizedWalkSpeed then
		walkAnimationWeight = 1
	elseif runSpeed < normalizedRunSpeed then
		local fadeInRun = (runSpeed - normalizedWalkSpeed)/(normalizedRunSpeed - normalizedWalkSpeed)
		walkAnimationWeight = 1 - fadeInRun
		runAnimationWeight  = fadeInRun
		walkAnimationTimewarp = 1
		runAnimationTimerwarp = 1
	else
		runAnimationWeight = 1
	end
	currentAnimTrack:AdjustWeight(walkAnimationWeight)
	runAnimTrack:AdjustWeight(runAnimationWeight)
	currentAnimTrack:AdjustSpeed(walkAnimationTimewarp)
	runAnimTrack:AdjustSpeed(runAnimationTimerwarp)
end

function setAnimationSpeed(speed)
	if currentAnim == "walk" then
			setRunSpeed(speed)
	else
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then
		if currentAnim == "walk" then
			if userNoUpdateOnLoop == true then
				if runAnimTrack.Looped ~= true then
					runAnimTrack.TimePosition = 0.0
				end
				if currentAnimTrack.Looped ~= true then
					currentAnimTrack.TimePosition = 0.0
				end
			else
				runAnimTrack.TimePosition = 0.0
				currentAnimTrack.TimePosition = 0.0
			end
		else
			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end
			
			if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
				if currentAnimTrack.Looped then
					-- Allow the emote to loop
					return
				end
				
				repeatAnim = "idle"
				currentlyPlayingEmote = false
			end
			
			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.15, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end
end

function rollAnimation(animName)
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
	return idx
end

local function switchToAnim(anim, animName, transitionTime, humanoid)
	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		if (runAnimTrack ~= nil) then
			runAnimTrack:Stop(transitionTime)
			runAnimTrack:Destroy()
			if userNoUpdateOnLoop == true then
				runAnimTrack = nil
			end
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		currentAnimTrack.Priority = Enum.AnimationPriority.Core
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
		-- check to see if we need to blend a walk/run animation
		if animName == "walk" then
			local runAnimName = "run"
			local runIdx = rollAnimation(runAnimName)

			runAnimTrack = humanoid:LoadAnimation(animTable[runAnimName][runIdx].anim)
			runAnimTrack.Priority = Enum.AnimationPriority.Core
			runAnimTrack:Play(transitionTime)		
			
			if (runAnimKeyframeHandler ~= nil) then
				runAnimKeyframeHandler:disconnect()
			end
			runAnimKeyframeHandler = runAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)	
		end
	end
end

function playAnimation(animName, transitionTime, humanoid) 	
	local idx = rollAnimation(animName)
	local anim = animTable[animName][idx].anim

	switchToAnim(anim, animName, transitionTime, humanoid)
	currentlyPlayingEmote = false
end

function playEmote(emoteAnim, transitionTime, humanoid)
	switchToAnim(emoteAnim, emoteAnim.Name, transitionTime, humanoid)
	currentlyPlayingEmote = true
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid, priority)	 		
		local idx = rollAnimation(animName)
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			if priority then
				toolAnimTrack.Priority = priority
			end
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end

	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-- STATE CHANGE HANDLERS

function onRunning(speed)
	local movedDuringEmote =
		userEmoteToRunThresholdChange and currentlyPlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local speedThreshold = movedDuringEmote and Humanoid.WalkSpeed or 0.75
	if speed > speedThreshold then
		local scale = 16.0
		playAnimation("walk", 0.2, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = "Running"
	else
		if emoteNames[currentAnim] == nil and not currentlyPlayingEmote then
			playAnimation("idle", 0.2, Humanoid)
			pose = "Standing"
		end
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	local scale = 5.0
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / scale)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

function onSwimming(speed)
	if speed > 1.00 then
		local scale = 10.0
		playAnimation("swim", 0.4, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = "Swimming"
	else
		playAnimation("swimidle", 0.4, Humanoid)
		pose = "Standing"
	end
end

function animateTool()
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

local lastTick = 0

function stepAnimate(currentTime)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = currentTime - lastTick
  	lastTick = currentTime

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.2, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	-- Tool Animation handling
	local tool = Character:FindFirstChildOfClass("Tool")
	if tool and tool:FindFirstChild("Handle") then
		local animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = currentTime + .3
		end

		if currentTime > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
	end
end)

-- emote bindable hook
if FFlagAnimateScriptEmoteHook then
	script:WaitForChild("PlayEmote").OnInvoke = function(emote)
		-- Only play emotes when idling
		if pose ~= "Standing" then
			return
		end
	
		if emoteNames[emote] ~= nil then
			-- Default emotes
			playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
			
			if userPlayEmoteByIdAnimTrackReturn then
				return true, currentAnimTrack
			else
				return true
			end
		elseif typeof(emote) == "Instance" and emote:IsA("Animation") then
			-- Non-default emotes
			playEmote(emote, EMOTE_TRANSITION_TIME, Humanoid)

			if userPlayEmoteByIdAnimTrackReturn then
				return true, currentAnimTrack
			else
				return true
			end
		end
		
		-- Return false to indicate that the emote could not be played
		return false
	end
end

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

-- loop to handle timed state transitions and tool animations
while Character.Parent ~= nil do
	local _, currentGameTime = wait(0.1)
	stepAnimate(currentGameTime)
end

]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="BindableFunction" referent="RBXedc9a541879c47ff951c1b3696de03d3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">PlayEmote</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX942fa7f88f2d4e02aa37b96e438b2afb">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Model" referent="RBX9802a6186d2a4e9a9a92273c41d48018">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<string name="Name">Kopis</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterGui" referent="RBX9f1fffe213b4461a822d77d9a789c856">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="VirtualCursorMode">0</token>
		</Properties>
	</Item>
	<Item class="LocalizationService" referent="RBXda8177e3feea4defa6a16d72949660b5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBXb3c451ceca0b4981a9df3c93d6a1e859">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXf0749454f8ab4ab39a281e3b520737d1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXc6c5eabd28114e15a00997e111970a1c">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX793503343e2d4ff6bf5e5d13a03df96f">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Geometry</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBXc3968b0e97504bff8c18794c9b633ef8">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="StringValue" referent="RBXba3e16ef9ab44c45b7220fca69d9a1cd">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<string name="Value">{2ab0fca1-c0f1-4eae-8e4d-01dc67e5860d}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBX98fdaab7e5b648c7a18fba0d4987f2d9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX2ac382f14b264ba9b01026bc2c22b1f2">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBXab56730dd8b3441eb969e68ac806c302">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXb05e82da39024c3e8607e984c6ace4c8">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX1c30ab5e985444619f7f7c4579db381e">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX958c847737014d89a6b3d8321098c440">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX55b57d9e477444d4b1a13fda69987b91">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBXa3d48f69289a4fcd9cad61a5e183dce6">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="AnalyticsService" referent="RBX74ff7b15648748019ca0efce52e3ca94">
		<Properties>
			<string name="ApiKey"></string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AnalyticsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ModuleScript" referent="RBX8c99843a604547a5842a84daaee6f6fe">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RobloxLSP_Settings</string>
				<string name="ScriptGuid">{27B332B6-FD7B-496A-93A0-33623708C9DC}</string>
				<ProtectedString name="Source"><![CDATA[return {
	port = 27843,
	startAutomatically = false,
	exclude = {
		game:GetService("Workspace")
	}
}]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
	<Item class="Selection" referent="RBXd1e38a61a348490b8fa3341462e63502">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX04326359676f4648912b363a365f49c1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Folder" referent="RBXf588602c58ad48e8b1ef32454a0927d0">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">server</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Folder" referent="RBX794ba218535740a397f8d8a0cdbeb1da">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">components</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBXb0a2ed37917e4511864b13c779363578">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Tool</string>
						<string name="ScriptGuid">{d7d56d28-3aae-416b-9688-a96238f6641a}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local t = TS.import(script, TS.getModule(script, "@rbxts", "t").lib.ts).t
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
-- eslint-disable roblox-ts/lua-truthiness
local BaseComponent = TS.import(script, TS.getModule(script, "@flamework", "components").out).BaseComponent
local Signal = TS.import(script, TS.getModule(script, "@rbxts", "signal"))
local HttpService = TS.import(script, TS.getModule(script, "@rbxts", "services")).HttpService
local Events = TS.import(script, game:GetService("ServerScriptService"), "server", "events").Events
local Janitor = TS.import(script, TS.getModule(script, "@rbxts", "janitor").src).Janitor
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
local ParseInput = TS.import(script, game:GetService("ServerScriptService"), "server", "modules", "InputParser").ParseInput
local Defer = TS.import(script, game:GetService("ServerScriptService"), "server", "modules", "Defer").Defer
local ToolAdded = Signal.new()
local Tool
do
	local super = BaseComponent
	Tool = setmetatable({}, {
		__tostring = function()
			return "Tool"
		end,
		__index = super,
	})
	Tool.__index = Tool
	function Tool:constructor(...)
		super.constructor(self, ...)
	end
	function Tool:getState()
		return self.state
	end
	function Tool:setState(state)
		self.state = state
		self.stateChanged:Fire(state)
		print("STATE:", state)
	end
	function Tool:onStart()
		-- Property Declarations
		self.janitor = Janitor.new()
		self.id = HttpService:GenerateGUID()
		self.state = "nil"
		self.timeCreated = tick()
		self.stateChanged = Signal.new()
		-- Not sure if using promise.defer is a hacky way or a legit way to acces the abstract methods and properties. Trying to access in onStart() without deferring will result in a nil value.
		-- OnStart Event
		Defer(function()
			self.maid:GiveTask(self.janitor)
			self:ManageButtons()
			self:ManageAncestry()
			ToolAdded:Fire(self)
			if self.Init ~= nil then
				self:Init()
			end
		end)
	end
	function Tool:ManageButtons()
		for key, value in pairs(self.attributes) do
			if self:isButton(key) then
				self:onAttributeChanged(key, function(name)
					self:UpdateButtons()
				end)
			end
		end
		self:UpdateButtons()
	end
	function Tool:ManageAncestry()
		self:UpdateAncestry()
		self.instance.AncestryChanged:Connect(function()
			return self:UpdateAncestry()
		end)
	end
	function Tool:UpdateAncestry()
		if not self.instance:IsDescendantOf(game) then
			pcall(function()
				self.instance:Destroy()
			end)
		elseif Players:GetPlayerFromCharacter(self.instance.Parent) ~= self.Player then
			self.janitor:Cleanup()
			self:InitPlayer()
		else
			self.janitor:Cleanup()
			self:InitWorkspace()
		end
	end
	function Tool:RequirePlayer()
		local Player = Players:GetPlayerFromCharacter(self.instance.Parent)
		if not Player then
			error("attempting to call a function which requires the tool to be under a player")
		end
		return Player
	end
	function Tool:InitPlayer()
		self.Player = self:RequirePlayer()
		self.janitor:Add(self:SetupInput())
		self:Input("INIT", {
			Input = "None",
			State = "None",
		})
		if self.PlayerInit ~= nil then
			self:PlayerInit()
		end
	end
	function Tool:InitWorkspace()
		warn("this section // for dropping items // has not yet been implemented, did you mean to do this?")
	end
	function Tool:SetupInput()
		self:RequirePlayer()
		return Events.Input:connect(function(player, inputobject)
			if self.Player == player then
				local Input = ParseInput(inputobject)
				self:Input(self:getState(), Input)
			end
		end)
	end
	function Tool:Input(state, input)
		self:RequirePlayer()
		local ActionInfo = self:GetActionInfo(state, input)
		if ActionInfo == nil then
			return nil
		end
		local Action = self.Actions[ActionInfo.Action]
		if not Action then
			error("action " .. ActionInfo.Action .. " does not exist")
		end
		self:AddAction(Action)
	end
	function Tool:AddAction(Action)
		Action:Start()
	end
	function Tool:GetActionInfo(toolState, input)
		local InputInfo = self.ButtonedInputInfo
		if not (InputInfo ~= 0 and InputInfo == InputInfo and InputInfo ~= "" and InputInfo) then
			error()
		end
		local _value = InputInfo[toolState]
		local _condition = not (_value ~= 0 and _value == _value and _value ~= "" and _value)
		if not _condition then
			local _value_1 = InputInfo[toolState][input.State]
			_condition = not (_value_1 ~= 0 and _value_1 == _value_1 and _value_1 ~= "" and _value_1)
			if not _condition then
				_condition = not InputInfo[toolState][input.State][input.Input]
			end
		end
		if _condition then
			return nil
		end
		return InputInfo[toolState][input.State][input.Input]
	end
	function Tool:UpdateButtons()
		self.ButtonedInputInfo = self:fillButtonsInTable(self.InputInfo)
	end
	function Tool:fillButtonsInTable(Table)
		local newTable = {}
		for key, value in pairs(Table) do
			-- EXAMPLE: key might equal "CUSTOM_TOGGLE" and this.attributes might equal {"CUSTOM_TOGGLE": "MouseButton1"}
			if self:isButton(key) then
				if not self.attributes[key] then
					error("could not find button for " .. tostring(key))
				end
				key = self.attributes[key]
			end
			local _value = value
			if type(_value) == "table" then
				value = self:fillButtonsInTable(value)
			end
			newTable[key] = value
		end
		return newTable
	end
	function Tool:isButton(str)
		return string.sub(str, 0, 7) == "BUTTON_"
	end
end
-- (Flamework) Tool metadata
Reflect.defineMetadata(Tool, "identifier", "server/components/Tool@Tool")
Reflect.defineMetadata(Tool, "flamework:isExternal", false)
Reflect.defineMetadata(Tool, "flamework:implements", { "$:flamework@OnStart" })
Reflect.defineMetadata(Tool, "flamework:decorators", { "$c:init@Component" })
Reflect.defineMetadata(Tool, "flamework:decorators.$c:init@Component", {
	type = "Component",
	attributes = {
		BUTTON_TOGGLE = t.string,
	},
	instanceGuard = t.intersection(t.instanceIsA("Model"), t.children({
		BodyAttach = t.instanceIsA("BasePart"),
	})),
})
return {
	ToolAdded = ToolAdded,
	Tool = Tool,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX66687d21f322456ea3304ecd861d73ac">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Sword</string>
						<string name="ScriptGuid">{8b1e5965-6926-4b59-9633-419a186f761c}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local Config = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "Config")
local Weapon = TS.import(script, game:GetService("ServerScriptService"), "server", "components", "Weapon").Weapon
local Sword
do
	local super = Weapon
	Sword = setmetatable({}, {
		__tostring = function()
			return "Sword"
		end,
		__index = super,
	})
	Sword.__index = Sword
	function Sword.new(...)
		local self = setmetatable({}, Sword)
		return self:constructor(...) or self
	end
	function Sword:constructor(...)
		super.constructor(self, ...)
	end
	function Sword:onStart()
		super.onStart(self)
		-- Property Declarations
		self.EnableAnimation = Config.Animations.Sword.Equip
		self.DisableAnimation = Config.Animations.Sword.Holster
		self.EnabledLimb = "RightHand"
		self.DisabledLimb = "LowerTorso"
	end
	function Sword:GetDirection(playerDirection, direction)
		if direction == "@@INIT" then
			return "RIGHT"
		elseif playerDirection == "UP" then
			return "STAB"
		else
			if direction == "RIGHT" then
				return "LEFT"
			else
				return "RIGHT"
			end
		end
	end
	function Sword:GetAnimation(direction)
		local anims = Config.Animations.Sword
		if direction == "STAB" then
			return anims.Stab
		elseif direction == "RIGHT" then
			return anims.Right
		elseif direction == "LEFT" then
			return anims.Left
		else
			error("could not get an animation for direction - " .. direction .. " ")
		end
	end
end
-- (Flamework) Sword metadata
Reflect.defineMetadata(Sword, "identifier", "server/components/Sword@Sword")
Reflect.defineMetadata(Sword, "flamework:isExternal", false)
Reflect.defineMetadata(Sword, "flamework:implements", { "$:flamework@OnStart" })
Reflect.defineMetadata(Sword, "flamework:decorators", { "$c:init@Component" })
Reflect.defineMetadata(Sword, "flamework:decorators.$c:init@Component", {
	type = "Component",
	tag = "Sword",
	defaults = {
		BUTTON_TOGGLE = "One",
	},
	attributes = {},
})
return nil
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXc529e6388b5c45ada151005d5f5f4f6c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Weapon</string>
						<string name="ScriptGuid">{97c230f0-bb2f-47e4-98f2-caafb787c85a}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local t = TS.import(script, TS.getModule(script, "@rbxts", "t").lib.ts).t
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local RaycastHitbox = TS.import(script, TS.getModule(script, "@rbxts", "raycast-hitbox").src).default
local Essential = TS.import(script, game:GetService("ServerScriptService"), "server", "components", "Essential").Essential
local Config = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "Config")
local Action = TS.import(script, game:GetService("ServerScriptService"), "server", "modules", "Action").Action
local Events = TS.import(script, game:GetService("ServerScriptService"), "server", "events").Events
local playAnim = TS.import(script, game:GetService("ServerScriptService"), "server", "modules", "AnimPlayer").playAnim
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
local HitMiddleWare = {}
local function AddHitMiddleware(func)
	-- ▼ Array.push ▼
	HitMiddleWare[#HitMiddleWare + 1] = func
	-- ▲ Array.push ▲
end
local ReleasePosition = 5
local BaseDamage = 20
local MaxDamage = 60
local secToMax = 5
local Weapon
do
	local super = Essential
	Weapon = setmetatable({}, {
		__tostring = function()
			return "Weapon"
		end,
		__index = super,
	})
	Weapon.__index = Weapon
	function Weapon:constructor()
		super.constructor(self)
	end
	function Weapon:onStart()
		super.onStart(self)
		-- Property Declarations
		self.PlayerDirection = "DOWN"
		self.Direction = "@@INIT"
		self.Damage = 0
		self.Hitbox = RaycastHitbox.new(self.instance.DmgPart)
		self.StoredAnimations = {}
		-- Constructor Body
		do
			self.InputInfo.Enabled.Begin = {
				MouseButton1 = {
					Action = "Draw",
				},
			}
			self.InputInfo.Drawing = {
				End = {
					MouseButton1 = {
						Action = "Release",
					},
				},
			}
			self.Actions.Draw = Action.new(function(End, janitor)
				return self:Draw(End, janitor)
			end)
			self.Actions.Release = Action.new(function(End, janitor)
				return self:Release(End, janitor)
			end)
		end
	end
	function Weapon:Init()
		if not Config.Elements.Direction then
			return nil
		end
		local Start = self.instance.DmgPart.Start
		local End = self.instance.DmgPart.End
		if Start.Position.Y > End.Position.Y then
			local _binding = { End, Start }
			Start = _binding[1]
			End = _binding[2]
		end
		local Points = {}
		do
			local i = Start.Position.Y
			local _shouldIncrement = false
			while true do
				if _shouldIncrement then
					i += 0.1
				else
					_shouldIncrement = true
				end
				if not (i < End.Position.Y) then
					break
				end
				local _vector3 = Vector3.new(0, i, 0)
				-- ▼ Array.push ▼
				Points[#Points + 1] = _vector3
				-- ▲ Array.push ▲
			end
		end
		self.Hitbox:SetPoints(self.instance.DmgPart, Points)
		local Trail = Instance.new("Trail")
		Trail.Parent = self.instance.DmgPart
		Trail.Attachment0 = Start
		Trail.Attachment1 = End
		Trail.Transparency = NumberSequence.new({ NumberSequenceKeypoint.new(0, 0.925), NumberSequenceKeypoint.new(0.25, 0.95), NumberSequenceKeypoint.new(0.5, 0.975), NumberSequenceKeypoint.new(0.75, 0.985), NumberSequenceKeypoint.new(1, 1) })
		Trail.Lifetime = 0.2
	end
	function Weapon:PlayerInit()
		local Params = RaycastParams.new()
		local Player = self.Player
		if not Player then
			error()
		end
		local Character = Player.Character
		if not Character then
			error()
		end
		Params.FilterDescendantsInstances = { Character, self.instance }
		Params.FilterType = Enum.RaycastFilterType.Blacklist
		self.Hitbox.RaycastParams = Params
		self.janitor:Add(Events.Direction:connect(function(player, direction)
			if player == self.Player then
				self.PlayerDirection = direction
			end
		end))
		self.Hitbox.DetectionMode = 2
		self.Hitbox.Visualizer = false
	end
	function Weapon:Draw(End, janitor)
		self:setState("Drawing")
		self.Direction = self:GetDirection(self.PlayerDirection, self.Direction)
		print(self.Direction, self.PlayerDirection)
		self.ActiveAnimation = playAnim(self.Player, self:GetAnimation(self.Direction))
		janitor:Add(self.ActiveAnimation:GetMarkerReachedSignal("DrawEnd"):Connect(function()
			local _result = self.ActiveAnimation
			if _result ~= nil then
				_result:AdjustSpeed(0)
			end
		end))
		self.Damage = 0
		local IncreaseDamage = true
		janitor:Add(function()
			IncreaseDamage = false
		end)
		local timePassed = 0
		local time = secToMax / 20
		while IncreaseDamage do
			task.wait(time)
			timePassed += time
			self.Damage = math.min(timePassed / secToMax, 1) * (MaxDamage - BaseDamage) + BaseDamage
			if timePassed >= secToMax then
				IncreaseDamage = false
			end
		end
	end
	function Weapon:Release(End, janitor)
		self:setState("Releasing")
		if not self.Actions.Draw.Status or self.Actions.Draw.Status == "ENDED" then
			error("attempting to release sword when the sword hasn't drawn")
		end
		self.Actions.Draw:End()
		if not self.ActiveAnimation then
			error("Active Animation Required From Draw")
		end
		self.ActiveAnimation.TimePosition = ReleasePosition
		self.ActiveAnimation:AdjustSpeed(1)
		self.Hitbox:HitStart(self.ActiveAnimation.Length - ReleasePosition - 0.05)
		self.Hitbox.OnHit:Connect(function(hit)
			for _, middleware in ipairs(HitMiddleWare) do
				middleware(self, hit)
			end
			local Player = Players:GetPlayerFromCharacter(hit.Parent)
			if Player ~= nil then
				local Character = hit.Parent
				if not Character then
					error()
				end
				local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
				if not Humanoid then
					error()
				end
				print(Player, Character)
			end
		end)
		-- janitor.Add(this.Hitbox.OnHit.Connect((hit, humanoid) => {}));
		janitor:Add(function()
			self:setState("Enabled")
			self.Hitbox:HitStop()
		end)
		task.wait(self.ActiveAnimation.Length - ReleasePosition - 0.05)
		End()
	end
end
-- (Flamework) Weapon metadata
Reflect.defineMetadata(Weapon, "identifier", "server/components/Weapon@Weapon")
Reflect.defineMetadata(Weapon, "flamework:isExternal", false)
Reflect.defineMetadata(Weapon, "flamework:implements", { "$:flamework@OnStart" })
Reflect.defineMetadata(Weapon, "flamework:decorators", { "$c:init@Component" })
Reflect.defineMetadata(Weapon, "flamework:decorators.$c:init@Component", {
	type = "Component",
	attributes = {},
	instanceGuard = t.intersection(t.instanceIsA("Model"), t.children({
		DmgPart = t.intersection(t.instanceIsA("BasePart"), t.children({
			End = t.instanceIsA("Attachment"),
			Start = t.instanceIsA("Attachment"),
		})),
		BodyAttach = t.instanceIsA("BasePart"),
	})),
})
return {
	AddHitMiddleware = AddHitMiddleware,
	Weapon = Weapon,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXe69397f3009f4632a132940dca6ffe3c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Essential</string>
						<string name="ScriptGuid">{6ba4eafa-6f20-467b-9dc8-2b9841594887}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local t = TS.import(script, TS.getModule(script, "@rbxts", "t").lib.ts).t
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local Tool = TS.import(script, game:GetService("ServerScriptService"), "server", "components", "Tool").Tool
local Action = TS.import(script, game:GetService("ServerScriptService"), "server", "modules", "Action").Action
local playAnim = TS.import(script, game:GetService("ServerScriptService"), "server", "modules", "AnimPlayer").playAnim
local Essential
do
	local super = Tool
	Essential = setmetatable({}, {
		__tostring = function()
			return "Essential"
		end,
		__index = super,
	})
	Essential.__index = Essential
	function Essential:constructor(...)
		super.constructor(self, ...)
	end
	function Essential:onStart()
		super.onStart(self)
		-- Property Declarations
		self.InputInfo = {
			INIT = {
				None = {
					None = {
						Action = "Disable",
					},
				},
			},
			Disabled = {
				End = {
					BUTTON_TOGGLE = {
						Action = "Enable",
					},
				},
			},
			Enabled = {
				End = {
					BUTTON_TOGGLE = {
						Action = "Disable",
					},
				},
			},
		}
		self.Enable = self:create("Enable")
		self.Disable = self:create("Disable")
		self.Actions = {
			Enable = Action.new(function(End)
				return self.Enable(End)
			end),
			Disable = Action.new(function(End)
				return self.Disable(End)
			end),
		}
	end
	function Essential:GetLimb(limbName)
		local Player = self.Player
		if not Player then
			error("player required")
		end
		local Character = Player.Character
		if not Character then
			error("character required")
		end
		local Limb = Character:FindFirstChild(limbName)
		if not Limb then
			error("Most likely got incorrect value")
		end
		if not Limb:IsA("BasePart") then
			error("expected basepart")
		end
		return Limb
	end
	function Essential:SetMotor6D(limb)
		if not self.Motor6D then
			error("Motor6D required")
		end
		self.Motor6D.Part0 = limb
		self.Motor6D.Part1 = self.instance.BodyAttach
		self.Motor6D.Parent = limb
	end
	function Essential:Setup()
		local model = self.instance
		local Limb = self:GetLimb(self.DisabledLimb)
		self.Motor6D = Instance.new("Motor6D")
		self.Motor6D.Name = model.Name .. "Grip"
		self:SetMotor6D(Limb)
	end
	function Essential:create(option)
		return function(End)
			local Limb
			local Animation
			if option == "Enable" then
				Limb = self.EnabledLimb
				Animation = self.EnableAnimation
			else
				Limb = self.DisabledLimb
				Animation = self.DisableAnimation
			end
			if not self.Motor6D then
				self:Setup()
			end
			self:SetMotor6D(self:GetLimb(Limb))
			if self.EssentialAnimation then
				self.EssentialAnimation:Stop()
			end
			self.EssentialAnimation = playAnim(self.Player, Animation, {
				Looped = true,
			})
			print(self.EssentialAnimation)
			self:setState(option .. "d")
			End()
		end
	end
end
-- (Flamework) Essential metadata
Reflect.defineMetadata(Essential, "identifier", "server/components/Essential@Essential")
Reflect.defineMetadata(Essential, "flamework:isExternal", false)
Reflect.defineMetadata(Essential, "flamework:implements", { "$:flamework@OnStart" })
Reflect.defineMetadata(Essential, "flamework:decorators", { "$c:init@Component" })
Reflect.defineMetadata(Essential, "flamework:decorators.$c:init@Component", {
	type = "Component",
	attributes = {},
	instanceGuard = t.intersection(t.instanceIsA("Model"), t.children({
		BodyAttach = t.instanceIsA("BasePart"),
	})),
})
return {
	Essential = Essential,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXf19d2a39e7f14c7d941e6bd4373aedc8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Shield</string>
						<string name="ScriptGuid">{2c6a6f13-5b9e-4976-b071-7e811027b289}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local Config = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "Config")
local Essential = TS.import(script, game:GetService("ServerScriptService"), "server", "components", "Essential").Essential
local AddHitMiddleware = TS.import(script, game:GetService("ServerScriptService"), "server", "components", "Weapon").AddHitMiddleware
AddHitMiddleware(function(tool, hit)
	if hit.Name == "Blocker" then
	end
end)
local Shield
do
	local super = Essential
	Shield = setmetatable({}, {
		__tostring = function()
			return "Shield"
		end,
		__index = super,
	})
	Shield.__index = Shield
	function Shield.new(...)
		local self = setmetatable({}, Shield)
		return self:constructor(...) or self
	end
	function Shield:constructor(...)
		super.constructor(self, ...)
	end
	function Shield:onStart()
		super.onStart(self)
		-- Property Declarations
		self.EnableAnimation = Config.Animations.Shield.Equip
		self.DisableAnimation = Config.Animations.Shield.Holster
		self.EnabledLimb = "LeftUpperArm"
		self.DisabledLimb = "UpperTorso"
	end
	function Shield:Init()
	end
	function Shield:PlayerInit()
	end
end
-- (Flamework) Shield metadata
Reflect.defineMetadata(Shield, "identifier", "server/components/Shield@Shield")
Reflect.defineMetadata(Shield, "flamework:isExternal", false)
Reflect.defineMetadata(Shield, "flamework:implements", { "$:flamework@OnStart" })
Reflect.defineMetadata(Shield, "flamework:decorators", { "$c:init@Component" })
Reflect.defineMetadata(Shield, "flamework:decorators.$c:init@Component", {
	type = "Component",
	tag = "Shield",
	defaults = {
		BUTTON_TOGGLE = "Two",
	},
	attributes = {},
})
return {
	Shield = Shield,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX2b222d8463a4461585f569646cad2f2b">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">services</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX82553e3419ae4e6ab56fb348d7d91c48">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Rotation</string>
						<string name="ScriptGuid">{c7096af9-002b-4c49-b303-50f1a8afa245}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local t = TS.import(script, TS.getModule(script, "@rbxts", "t").lib.ts).t
local Events = TS.import(script, game:GetService("ServerScriptService"), "server", "events").Events
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
--[[
	*
	* Serves to replicate body rotation from the client to other clients by having the client send their joint CFrame info through a server event and then have that info sent to other clients within a distance of them back through a client event.
]]
local Rotation
do
	Rotation = setmetatable({}, {
		__tostring = function()
			return "Rotation"
		end,
	})
	Rotation.__index = Rotation
	function Rotation.new(...)
		local self = setmetatable({}, Rotation)
		return self:constructor(...) or self
	end
	function Rotation:constructor()
	end
	function Rotation:onInit()
		Events.UpdateRotation:connect(function(player, waist, neck, leftshoulder, rightshoulder)
			Rotation:UpdateRotation(player, waist, neck, leftshoulder, rightshoulder)
		end, { t.CFrame, t.CFrame, t.CFrame, t.CFrame })
	end
	function Rotation:UpdateRotation(player, waist, neck, leftshoulder, rightshoulder)
		local character = player.Character
		if not character then
			error("character needed")
		end
		Events.UpdateRotation:fire(Rotation:GetPlayersWithinDist(player, 20), player, waist, neck, leftshoulder, rightshoulder)
	end
	function Rotation:GetPlayersWithinDist(player, distance)
		local character = player.Character
		if not character then
			error("character needed")
		end
		local root = character:FindFirstChild("HumanoidRootPart")
		if not root or not root:IsA("BasePart") then
			error("root needed")
		end
		local players = {}
		for _, Player in ipairs(Players:GetPlayers()) do
			if Player == player then
				continue
			elseif Player.Character then
				local otherRoot = Player.Character:FindFirstChild("HumanoidRootPart")
				if otherRoot and otherRoot:IsA("BasePart") then
					local _position = root.Position
					local _position_1 = otherRoot.Position
					if (_position - _position_1).Magnitude <= distance then
						-- ▼ Array.push ▼
						players[#players + 1] = Player
						-- ▲ Array.push ▲
					end
				end
			end
		end
		return players
	end
end
-- (Flamework) Rotation metadata
Reflect.defineMetadata(Rotation, "identifier", "server/services/Rotation@Rotation")
Reflect.defineMetadata(Rotation, "flamework:isExternal", false)
Reflect.defineMetadata(Rotation, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(Rotation, "flamework:decorators", { "$:flamework@Service" })
Reflect.defineMetadata(Rotation, "flamework:decorators.$:flamework@Service", {
	type = "Service",
})
return {
	Rotation = Rotation,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX8ab9e2d0638e442fb0ad658ae749253f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ToolService</string>
						<string name="ScriptGuid">{a7e970ee-69c6-4e60-af96-83d9ccb99385}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local Config = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "Config")
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local ReplicatedStorage = _services.ReplicatedStorage
local CollectionService = _services.CollectionService
local Players = _services.Players
local ToolAdded = TS.import(script, game:GetService("ServerScriptService"), "server", "components", "Tool").ToolAdded
local Store = TS.import(script, TS.getModule(script, "@rbxts", "rodux").src).Store
local Signal = TS.import(script, TS.getModule(script, "@rbxts", "signal"))
local store_PlayerAdded = Signal.new()
local store_PlayerRemoved = Signal.new()
local store_ToolAdded = Signal.new()
local store_ToolRemoved = Signal.new()
local Reducer = function(state, action)
	local _exp = action.type
	repeat
		if _exp == ("@@INIT") then
			return {
				Workspace = {},
			}
		end
		if _exp == ("TOOL_ADDED") then
			local tools = state[action.parent]
			if not tools then
				error("attempting to add tool " .. tostring(action.tool) .. " to parent " .. action.parent .. " which does not exist")
			end
			local _tool = action.tool
			-- ▼ Array.push ▼
			tools[#tools + 1] = _tool
			-- ▲ Array.push ▲
			store_ToolAdded:Fire(state, action.parent, action.tool)
			return state
		end
		if _exp == ("TOOL_REMOVED") then
			local tools = state[action.parent]
			if not tools then
				return state
			end
			local _arg0 = function(tool)
				return tool == action.tool
			end
			-- ▼ ReadonlyArray.findIndex ▼
			local _result = -1
			for _i, _v in ipairs(tools) do
				if _arg0(_v, _i - 1, tools) == true then
					_result = _i - 1
					break
				end
			end
			-- ▲ ReadonlyArray.findIndex ▲
			table.remove(tools, _result + 1)
			store_ToolRemoved:Fire(state, action.parent, action.tool)
			return state
		end
		if _exp == ("PLAYER_ADDED") then
			state[action.playerName] = {}
			store_PlayerAdded:Fire(state, action.playerName)
			return state
		end
		if _exp == ("PLAYER_REMOVED") then
			state[action.playerName] = nil
			store_PlayerRemoved:Fire(state, action.playerName)
			return state
		end
		do
			local _exhaustiveCheck = action
		end
	until true
	return state
end
local ToolService
do
	ToolService = setmetatable({}, {
		__tostring = function()
			return "ToolService"
		end,
	})
	ToolService.__index = ToolService
	function ToolService.new(...)
		local self = setmetatable({}, ToolService)
		return self:constructor(...) or self
	end
	function ToolService:constructor()
		self.store = Store.new(Reducer)
	end
	function ToolService:onInit()
		self:InitStore()
	end
	function ToolService:InitStore()
		for _, player in ipairs(Players:GetPlayers()) do
			print(player)
			self.store:dispatch({
				type = "PLAYER_ADDED",
				playerName = player.Name,
			})
		end
		Players.PlayerAdded:Connect(function(player)
			print(player)
			self.store:dispatch({
				type = "PLAYER_ADDED",
				playerName = player.Name,
			})
		end)
		Players.PlayerRemoving:Connect(function(player)
			self.store:dispatch({
				type = "PLAYER_REMOVED",
				playerName = player.Name,
			})
		end)
		ToolAdded:Connect(function(tool)
			self:InitTool(tool)
		end)
	end
	function ToolService:InitTool(tool)
		local Player = Players:GetPlayerFromCharacter(tool.instance.Parent)
		local ParentInstance = tool.instance.Parent
		local Parent
		if Player then
			Parent = Player.Name
		else
			Parent = "Workspace"
		end
		self.store:dispatch({
			type = "TOOL_ADDED",
			parent = Parent,
			tool = tool,
		})
		local AncestryChanged
		AncestryChanged = tool.instance.AncestryChanged:Connect(function()
			if tool.instance.Parent == ParentInstance then
				return nil
			end
			AncestryChanged:Disconnect()
			self.store:dispatch({
				type = "TOOL_REMOVED",
				parent = Parent,
				tool = tool,
			})
			if tool.instance:IsDescendantOf(game) then
				self:InitTool(tool)
			end
		end)
	end
	function ToolService:addTool(toolName, parent)
		local Tag = Config.Tools[toolName]
		if Tag == nil then
			error("tool name proived: " .. toolName .. " was not found in the config ")
		end
		local ToolModel = ReplicatedStorage.Assets.Tools:FindFirstChild(toolName)
		if not ToolModel then
			error("Tool model for tool " .. toolName .. " not found in replicated storage/assets/tools")
		end
		if parent and parent:IsA("Player") then
			local Character = parent.Character
			if not Character then
				error("attempting to give tool " .. toolName .. " to player " .. parent.Name .. " whose character has not spawned in")
			end
			ToolModel.Parent = Character
		else
			ToolModel.Parent = parent
		end
		CollectionService:AddTag(ToolModel, Tag)
	end
end
-- (Flamework) ToolService metadata
Reflect.defineMetadata(ToolService, "identifier", "server/services/ToolService@ToolService")
Reflect.defineMetadata(ToolService, "flamework:isExternal", false)
Reflect.defineMetadata(ToolService, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(ToolService, "flamework:decorators", { "$:flamework@Service" })
Reflect.defineMetadata(ToolService, "flamework:decorators.$:flamework@Service", {
	type = "Service",
})
return {
	PlayerAdded = store_PlayerAdded,
	PlayerRemoved = store_PlayerRemoved,
	ToolAdded = store_ToolAdded,
	ToolRemoved = store_ToolRemoved,
	ToolService = ToolService,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXfda7ddfee01741fe8c763f5d033ec865">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ToggleButton</string>
						<string name="ScriptGuid">{61dd33b7-414a-4c2a-a4b7-60b94425fd34}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Reflect = TS.import(script, TS.getModule(script, "@flamework", "core").out).Reflect
local Events = TS.import(script, game:GetService("ServerScriptService"), "server", "events").Events
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local CollectionService = _services.CollectionService
local Players = _services.Players
local _ToolService = TS.import(script, game:GetService("ServerScriptService"), "server", "services", "ToolService")
local ToolAdded = _ToolService.ToolAdded
local ToolRemoved = _ToolService.ToolRemoved
local ToggleButton
do
	ToggleButton = setmetatable({}, {
		__tostring = function()
			return "ToggleButton"
		end,
	})
	ToggleButton.__index = ToggleButton
	function ToggleButton.new(...)
		local self = setmetatable({}, ToggleButton)
		return self:constructor(...) or self
	end
	function ToggleButton:constructor()
	end
	function ToggleButton:onInit()
		ToolAdded:Connect(function(store, parent)
			return self:ConfigureToggleButtons(store, parent)
		end)
		ToolRemoved:Connect(function(store, parent)
			return self:ConfigureToggleButtons(store, parent)
		end)
	end
	function ToggleButton:ConfigureToggleButtons(state, parent)
		local player = self:GetPlayerFromUserName(parent)
		if player == nil then
			error("parent must be a player's username")
		end
		local playerTools = state[parent]
		if not playerTools then
			error("tools for player " .. parent .. " not found")
		end
		local _arg0 = function(a, b)
			local aOrder = self:getOrder(a)
			local bOrder = self:getOrder(b)
			if aOrder ~= bOrder then
				return aOrder > bOrder
			else
				return a.timeCreated < b.timeCreated
			end
		end
		-- ▼ Array.sort ▼
		table.sort(playerTools, _arg0)
		-- ▲ Array.sort ▲
		local getNum = { "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine" }
		local index = 0
		local _arg0_1 = function(tool)
			if index > 8 then
				error("a player can only have 9 tools maximum!")
			end
			tool:setAttribute("BUTTON_TOGGLE", getNum[index + 1])
			Events.ButtonChanged(player, tool.instance, index + 1)
			index += 1
		end
		-- ▼ ReadonlyArray.forEach ▼
		for _k, _v in ipairs(playerTools) do
			_arg0_1(_v, _k - 1, playerTools)
		end
		-- ▲ ReadonlyArray.forEach ▲
	end
	function ToggleButton:getOrder(tool)
		if CollectionService:HasTag(tool.instance, "Weapon") then
			return 1
		end
		return 0
	end
	function ToggleButton:GetPlayerFromUserName(playerName)
		-- eslint-disable-next-line roblox-ts/no-array-pairs
		for _, player in ipairs(Players:GetChildren()) do
			if player.Name == playerName then
				return player
			end
		end
		return nil
	end
end
-- (Flamework) ToggleButton metadata
Reflect.defineMetadata(ToggleButton, "identifier", "server/services/ToggleButton@ToggleButton")
Reflect.defineMetadata(ToggleButton, "flamework:isExternal", false)
Reflect.defineMetadata(ToggleButton, "flamework:implements", { "$:flamework@OnInit" })
Reflect.defineMetadata(ToggleButton, "flamework:decorators", { "$:flamework@Service" })
Reflect.defineMetadata(ToggleButton, "flamework:decorators.$:flamework@Service", {
	type = "Service",
})
return {
	ToggleButton = ToggleButton,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXb23206fd50b643a494ad7b829f683956">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">modules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX14006017e7c944ed898ec24b90dce4bc">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Action</string>
						<string name="ScriptGuid">{8a37f601-5198-42fd-a7ad-534e23554618}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Signal = TS.import(script, TS.getModule(script, "@rbxts", "signal"))
local Janitor = TS.import(script, TS.getModule(script, "@rbxts", "janitor").src).Janitor
--[[
	*
	*
	* Groups a start and end function into an action which is utilized through the .Started and .Ended connections to track the state of the action.
	*
	* @typeParm T - The tool that this action will be used on.
	*
]]
local Action
do
	Action = setmetatable({}, {
		__tostring = function()
			return "Action"
		end,
	})
	Action.__index = Action
	function Action.new(...)
		local self = setmetatable({}, Action)
		return self:constructor(...) or self
	end
	function Action:constructor(Start, End)
		self.Started = Signal.new()
		self.Ended = Signal.new()
		self.janitor = Janitor.new()
		self._start = Start
		self._end = End
	end
	function Action:Start()
		if self.Status == "STARTED" then
			error("attempted to start an action that has already been started")
		end
		self.Status = "STARTED"
		self.Started:Fire()
		self._start(function()
			return self:End()
		end, self.janitor)
	end
	function Action:End()
		if self.Status == "ENDED" or self.Status == nil then
			error("attempted to end an action which hasn't been started or has already ended")
		end
		self.Status = "ENDED"
		self.Ended:Fire()
		if self._end then
			self._end()
		end
		self.janitor:Cleanup()
	end
end
return {
	Action = Action,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXc31d0f81011d46a4a7aaccbb751c60b4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">InputParser</string>
						<string name="ScriptGuid">{d1286f9e-d00c-43df-870b-e9cd8d3b69dd}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local function ParseInput(input)
	if typeof(input) == "EnumItem" then
		local str = tostring(input)
		if string.sub(str, 0, 20) == "Enum.UserInputState." then
			return string.sub(str, 21, -1)
		elseif string.sub(str, 0, 19) == "Enum.UserInputType." then
			return string.sub(str, 20, -1)
		elseif string.sub(str, 0, 13) == "Enum.KeyCode." then
			return string.sub(str, 14, -1)
		else
			error("got invalid value: " .. tostring(input))
		end
	else
		local KeyCode = ParseInput(input.KeyCode)
		local Type = ParseInput(input.UserInputType)
		local State = ParseInput(input.UserInputState)
		local Input = KeyCode == "Unknown" and Type or KeyCode
		return {
			Input = Input,
			State = State,
		}
	end
end
return {
	ParseInput = ParseInput,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX72b31d13653a4acf8692220fdcc47420">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Defer</string>
						<string name="ScriptGuid">{0ee1684c-74bb-4ef2-a61e-5265a3b4a37a}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local function Defer(func)
	local _exp = TS.Promise.defer(function(resolve, reject)
		return resolve()
	end)
	local _arg0 = function()
		return func()
	end
	_exp:andThen(_arg0)
end
return {
	Defer = Defer,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX7ddd4a5f38a0462090483816c3c43798">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AnimPlayer</string>
						<string name="ScriptGuid">{d9f8a4dc-8692-4be6-8894-67ae5c9198d1}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local function playAnim(character, animation, info)
	if not character then
		error()
	end
	if character:IsA("Player") then
		character = character.Character
		if not character then
			error()
		end
	end
	if type(animation) == "number" then
		animation = tostring(animation)
	end
	if string.sub(animation, 0, 12) ~= "rbxassetid://" then
		animation = "rbxassetid://" .. animation
	end
	local humanoid = character:FindFirstChildWhichIsA("Humanoid")
	if not humanoid then
		error()
	end
	local animator = humanoid:FindFirstChildWhichIsA("Animator")
	if not animator then
		error()
	end
	local newAnimation = Instance.new("Animation")
	newAnimation.AnimationId = animation
	print(animator, animation, newAnimation)
	local AnimationTrack = animator:LoadAnimation(newAnimation)
	if info and info.Looped then
		AnimationTrack.Looped = true
	else
		AnimationTrack.Looped = false
	end
	AnimationTrack.Looped = true
	AnimationTrack:Play(info and info.Fade)
	return AnimationTrack
end
return {
	playAnim = playAnim,
}
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX71e13c6237cb4bb19abea0ecb2e88933">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">runtime</string>
					<string name="ScriptGuid">{a3add4e5-03b0-4a2c-be98-da35289d8730}</string>
					<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Flamework = TS.import(script, TS.getModule(script, "@flamework", "core").out).Flamework
Flamework._addPaths({ "ServerScriptService", "server", "components" })
Flamework._addPaths({ "ServerScriptService", "server", "services" })
Flamework._addPaths({ "ReplicatedStorage", "shared", "components" })
Flamework.ignite()
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX6dc8f2ba4e3840adae8edd6c276249b2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">events</string>
					<string name="ScriptGuid">{160d9e44-9373-4451-8410-04c0d404a955}</string>
					<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local GlobalEvents = TS.import(script, game:GetService("ReplicatedStorage"), "shared", "events").GlobalEvents
local Events = GlobalEvents.server
return {
	Events = Events,
}
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX426f06346be54a05b72798e8efc996f6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">testing</string>
					<string name="ScriptGuid">{0f5ecc5e-50ca-4777-a4d8-b8ee80c7bc41}</string>
					<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local Flamework = TS.import(script, TS.getModule(script, "@flamework", "core").out).Flamework
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
if #Players:GetPlayers() == 0 then
	Players.PlayerAdded:Wait()
end
local Player = Players:GetPlayers()[1]
if not Player.Character then
	Player.CharacterAdded:Wait()
end
local toolService = Flamework.resolveDependency("server/services/ToolService@ToolService")
toolService:addTool("Kopis", Player)
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBXb02b59265eda40bba4932f0ecd7d7abc">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBX17b51264d28940da9096df107b98356d">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Folder" referent="RBX8df576a62eb444e7a70c77c3aee7c289">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">rbxts_include</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBX45e8f7338d7d44329cebca41b3a4591a">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Promise</string>
					<string name="ScriptGuid">{ce358d9f-00c7-4a67-8dd1-6b6c2435ecbb}</string>
					<ProtectedString name="Source"><![CDATA[--[[
	An implementation of Promises similar to Promise/A+.
]]

local ERROR_NON_PROMISE_IN_LIST = "Non-promise value passed into %s at index %s"
local ERROR_NON_LIST = "Please pass a list of promises to %s"
local ERROR_NON_FUNCTION = "Please pass a handler function to %s!"
local MODE_KEY_METATABLE = {__mode = "k"}

--[[
	Creates an enum dictionary with some metamethods to prevent common mistakes.
]]
local function makeEnum(enumName, members)
	local enum = {}

	for _, memberName in ipairs(members) do
		enum[memberName] = memberName
	end

	return setmetatable(enum, {
		__index = function(_, k)
			error(string.format("%s is not in %s!", k, enumName), 2)
		end,
		__newindex = function()
			error(string.format("Creating new members in %s is not allowed!", enumName), 2)
		end,
	})
end

--[[
	An object to represent runtime errors that occur during execution.
	Promises that experience an error like this will be rejected with
	an instance of this object.
]]
local Error do
	Error = {
		Kind = makeEnum("Promise.Error.Kind", {
			"ExecutionError",
			"AlreadyCancelled",
			"NotResolvedInTime",
			"TimedOut",
		}),
	}
	Error.__index = Error

	function Error.new(options, parent)
		options = options or {}
		return setmetatable({
			error = tostring(options.error) or "[This error has no error text.]",
			trace = options.trace,
			context = options.context,
			kind = options.kind,
			parent = parent,
			createdTick = os.clock(),
			createdTrace = debug.traceback(),
		}, Error)
	end

	function Error.is(anything)
		if type(anything) == "table" then
			local metatable = getmetatable(anything)

			if type(metatable) == "table" then
				return rawget(anything, "error") ~= nil and type(rawget(metatable, "extend")) == "function"
			end
		end

		return false
	end

	function Error.isKind(anything, kind)
		assert(kind ~= nil, "Argument #2 to Promise.Error.isKind must not be nil")

		return Error.is(anything) and anything.kind == kind
	end

	function Error:extend(options)
		options = options or {}

		options.kind = options.kind or self.kind

		return Error.new(options, self)
	end

	function Error:getErrorChain()
		local runtimeErrors = { self }

		while runtimeErrors[#runtimeErrors].parent do
			table.insert(runtimeErrors, runtimeErrors[#runtimeErrors].parent)
		end

		return runtimeErrors
	end

	function Error:__tostring()
		local errorStrings = {
			string.format("-- Promise.Error(%s) --", self.kind or "?"),
		}

		for _, runtimeError in ipairs(self:getErrorChain()) do
			table.insert(errorStrings, table.concat({
				runtimeError.trace or runtimeError.error,
				runtimeError.context,
			}, "\n"))
		end

		return table.concat(errorStrings, "\n")
	end
end

--[[
	Packs a number of arguments into a table and returns its length.

	Used to cajole varargs without dropping sparse values.
]]
local function pack(...)
	return select("#", ...), { ... }
end

--[[
	Returns first value (success), and packs all following values.
]]
local function packResult(success, ...)
	return success, select("#", ...), { ... }
end


local function makeErrorHandler(traceback)
	assert(traceback ~= nil)

	return function(err)
		-- If the error object is already a table, forward it directly.
		-- Should we extend the error here and add our own trace?

		if type(err) == "table" then
			return err
		end

		return Error.new({
			error = err,
			kind = Error.Kind.ExecutionError,
			trace = debug.traceback(tostring(err), 2),
			context = "Promise created at:\n\n" .. traceback,
		})
	end
end

--[[
	Calls a Promise executor with error handling.
]]
local function runExecutor(traceback, callback, ...)
	return packResult(xpcall(callback, makeErrorHandler(traceback), ...))
end

--[[
	Creates a function that invokes a callback with correct error handling and
	resolution mechanisms.
]]
local function createAdvancer(traceback, callback, resolve, reject)
	return function(...)
		local ok, resultLength, result = runExecutor(traceback, callback, ...)

		if ok then
			resolve(unpack(result, 1, resultLength))
		else
			reject(result[1])
		end
	end
end

local function isEmpty(t)
	return next(t) == nil
end

local Promise = {
	Error = Error,
	Status = makeEnum("Promise.Status", {"Started", "Resolved", "Rejected", "Cancelled"}),
	_getTime = os.clock,
	_timeEvent = game:GetService("RunService").Heartbeat,
}
Promise.prototype = {}
Promise.__index = Promise.prototype

--[[
	Constructs a new Promise with the given initializing callback.

	This is generally only called when directly wrapping a non-promise API into
	a promise-based version.

	The callback will receive 'resolve' and 'reject' methods, used to start
	invoking the promise chain.

	Second parameter, parent, is used internally for tracking the "parent" in a
	promise chain. External code shouldn't need to worry about this.
]]
function Promise._new(traceback, callback, parent)
	if parent ~= nil and not Promise.is(parent) then
		error("Argument #2 to Promise.new must be a promise or nil", 2)
	end

	local self = {
		-- Used to locate where a promise was created
		_source = traceback,

		_status = Promise.Status.Started,

		-- A table containing a list of all results, whether success or failure.
		-- Only valid if _status is set to something besides Started
		_values = nil,

		-- Lua doesn't like sparse arrays very much, so we explicitly store the
		-- length of _values to handle middle nils.
		_valuesLength = -1,

		-- Tracks if this Promise has no error observers..
		_unhandledRejection = true,

		-- Queues representing functions we should invoke when we update!
		_queuedResolve = {},
		_queuedReject = {},
		_queuedFinally = {},

		-- The function to run when/if this promise is cancelled.
		_cancellationHook = nil,

		-- The "parent" of this promise in a promise chain. Required for
		-- cancellation propagation upstream.
		_parent = parent,

		-- Consumers are Promises that have chained onto this one.
		-- We track them for cancellation propagation downstream.
		_consumers = setmetatable({}, MODE_KEY_METATABLE),
	}

	if parent and parent._status == Promise.Status.Started then
		parent._consumers[self] = true
	end

	setmetatable(self, Promise)

	local function resolve(...)
		self:_resolve(...)
	end

	local function reject(...)
		self:_reject(...)
	end

	local function onCancel(cancellationHook)
		if cancellationHook then
			if self._status == Promise.Status.Cancelled then
				cancellationHook()
			else
				self._cancellationHook = cancellationHook
			end
		end

		return self._status == Promise.Status.Cancelled
	end

	coroutine.wrap(function()
		local ok, _, result = runExecutor(
			self._source,
			callback,
			resolve,
			reject,
			onCancel
		)

		if not ok then
			reject(result[1])
		end
	end)()

	return self
end

function Promise.new(executor)
	return Promise._new(debug.traceback(nil, 2), executor)
end

function Promise:__tostring()
	return string.format("Promise(%s)", self:getStatus())
end

--[[
	Promise.new, except pcall on a new thread is automatic.
]]
function Promise.defer(callback)
	local traceback = debug.traceback(nil, 2)
	local promise
	promise = Promise._new(traceback, function(resolve, reject, onCancel)
		local connection
		connection = Promise._timeEvent:Connect(function()
			connection:Disconnect()
			local ok, _, result = runExecutor(traceback, callback, resolve, reject, onCancel)

			if not ok then
				reject(result[1])
			end
		end)
	end)

	return promise
end

-- Backwards compatibility
Promise.async = Promise.defer

--[[
	Create a promise that represents the immediately resolved value.
]]
function Promise.resolve(...)
	local length, values = pack(...)
	return Promise._new(debug.traceback(nil, 2), function(resolve)
		resolve(unpack(values, 1, length))
	end)
end

--[[
	Create a promise that represents the immediately rejected value.
]]
function Promise.reject(...)
	local length, values = pack(...)
	return Promise._new(debug.traceback(nil, 2), function(_, reject)
		reject(unpack(values, 1, length))
	end)
end

--[[
	Runs a non-promise-returning function as a Promise with the
  given arguments.
]]
function Promise._try(traceback, callback, ...)
	local valuesLength, values = pack(...)

	return Promise._new(traceback, function(resolve)
		resolve(callback(unpack(values, 1, valuesLength)))
	end)
end

--[[
	Begins a Promise chain, turning synchronous errors into rejections.
]]
function Promise.try(...)
	return Promise._try(debug.traceback(nil, 2), ...)
end

--[[
	Returns a new promise that:
		* is resolved when all input promises resolve
		* is rejected if ANY input promises reject
]]
function Promise._all(traceback, promises, amount)
	if type(promises) ~= "table" then
		error(string.format(ERROR_NON_LIST, "Promise.all"), 3)
	end

	-- We need to check that each value is a promise here so that we can produce
	-- a proper error rather than a rejected promise with our error.
	for i, promise in pairs(promises) do
		if not Promise.is(promise) then
			error(string.format(ERROR_NON_PROMISE_IN_LIST, "Promise.all", tostring(i)), 3)
		end
	end

	-- If there are no values then return an already resolved promise.
	if #promises == 0 or amount == 0 then
		return Promise.resolve({})
	end

	return Promise._new(traceback, function(resolve, reject, onCancel)
		-- An array to contain our resolved values from the given promises.
		local resolvedValues = {}
		local newPromises = {}

		-- Keep a count of resolved promises because just checking the resolved
		-- values length wouldn't account for promises that resolve with nil.
		local resolvedCount = 0
		local rejectedCount = 0
		local done = false

		local function cancel()
			for _, promise in ipairs(newPromises) do
				promise:cancel()
			end
		end

		-- Called when a single value is resolved and resolves if all are done.
		local function resolveOne(i, ...)
			if done then
				return
			end

			resolvedCount = resolvedCount + 1

			if amount == nil then
				resolvedValues[i] = ...
			else
				resolvedValues[resolvedCount] = ...
			end

			if resolvedCount >= (amount or #promises) then
				done = true
				resolve(resolvedValues)
				cancel()
			end
		end

		onCancel(cancel)

		-- We can assume the values inside `promises` are all promises since we
		-- checked above.
		for i, promise in ipairs(promises) do
			newPromises[i] = promise:andThen(
				function(...)
					resolveOne(i, ...)
				end,
				function(...)
					rejectedCount = rejectedCount + 1

					if amount == nil or #promises - rejectedCount < amount then
						cancel()
						done = true

						reject(...)
					end
				end
			)
		end

		if done then
			cancel()
		end
	end)
end

function Promise.all(promises)
	return Promise._all(debug.traceback(nil, 2), promises)
end

function Promise.fold(list, callback, initialValue)
	assert(type(list) == "table", "Bad argument #1 to Promise.fold: must be a table")
	assert(type(callback) == "function", "Bad argument #2 to Promise.fold: must be a function")

	local accumulator = Promise.resolve(initialValue)
	return Promise.each(list, function(resolvedElement, i)
		accumulator = accumulator:andThen(function(previousValueResolved)
			return callback(previousValueResolved, resolvedElement, i)
		end)
	end):andThenReturn(accumulator)
end

function Promise.some(promises, amount)
	assert(type(amount) == "number", "Bad argument #2 to Promise.some: must be a number")

	return Promise._all(debug.traceback(nil, 2), promises, amount)
end

function Promise.any(promises)
	return Promise._all(debug.traceback(nil, 2), promises, 1):andThen(function(values)
		return values[1]
	end)
end

function Promise.allSettled(promises)
	if type(promises) ~= "table" then
		error(string.format(ERROR_NON_LIST, "Promise.allSettled"), 2)
	end

	-- We need to check that each value is a promise here so that we can produce
	-- a proper error rather than a rejected promise with our error.
	for i, promise in pairs(promises) do
		if not Promise.is(promise) then
			error(string.format(ERROR_NON_PROMISE_IN_LIST, "Promise.allSettled", tostring(i)), 2)
		end
	end

	-- If there are no values then return an already resolved promise.
	if #promises == 0 then
		return Promise.resolve({})
	end

	return Promise._new(debug.traceback(nil, 2), function(resolve, _, onCancel)
		-- An array to contain our resolved values from the given promises.
		local fates = {}
		local newPromises = {}

		-- Keep a count of resolved promises because just checking the resolved
		-- values length wouldn't account for promises that resolve with nil.
		local finishedCount = 0

		-- Called when a single value is resolved and resolves if all are done.
		local function resolveOne(i, ...)
			finishedCount = finishedCount + 1

			fates[i] = ...

			if finishedCount >= #promises then
				resolve(fates)
			end
		end

		onCancel(function()
			for _, promise in ipairs(newPromises) do
				promise:cancel()
			end
		end)

		-- We can assume the values inside `promises` are all promises since we
		-- checked above.
		for i, promise in ipairs(promises) do
			newPromises[i] = promise:finally(
				function(...)
					resolveOne(i, ...)
				end
			)
		end
	end)
end

--[[
	Races a set of Promises and returns the first one that resolves,
	cancelling the others.
]]
function Promise.race(promises)
	assert(type(promises) == "table", string.format(ERROR_NON_LIST, "Promise.race"))

	for i, promise in pairs(promises) do
		assert(Promise.is(promise), string.format(ERROR_NON_PROMISE_IN_LIST, "Promise.race", tostring(i)))
	end

	return Promise._new(debug.traceback(nil, 2), function(resolve, reject, onCancel)
		local newPromises = {}
		local finished = false

		local function cancel()
			for _, promise in ipairs(newPromises) do
				promise:cancel()
			end
		end

		local function finalize(callback)
			return function (...)
				cancel()
				finished = true
				return callback(...)
			end
		end

		if onCancel(finalize(reject)) then
			return
		end

		for i, promise in ipairs(promises) do
			newPromises[i] = promise:andThen(finalize(resolve), finalize(reject))
		end

		if finished then
			cancel()
		end
	end)
end

--[[
	Iterates serially over the given an array of values, calling the predicate callback on each before continuing.
	If the predicate returns a Promise, we wait for that Promise to resolve before continuing to the next item
	in the array. If the Promise the predicate returns rejects, the Promise from Promise.each is also rejected with
	the same value.

	Returns a Promise containing an array of the return values from the predicate for each item in the original list.
]]
function Promise.each(list, predicate)
	assert(type(list) == "table", string.format(ERROR_NON_LIST, "Promise.each"))
	assert(type(predicate) == "function", string.format(ERROR_NON_FUNCTION, "Promise.each"))

	return Promise._new(debug.traceback(nil, 2), function(resolve, reject, onCancel)
		local results = {}
		local promisesToCancel = {}

		local cancelled = false

		local function cancel()
			for _, promiseToCancel in ipairs(promisesToCancel) do
				promiseToCancel:cancel()
			end
		end

		onCancel(function()
			cancelled = true

			cancel()
		end)

		-- We need to preprocess the list of values and look for Promises.
		-- If we find some, we must register our andThen calls now, so that those Promises have a consumer
		-- from us registered. If we don't do this, those Promises might get cancelled by something else
		-- before we get to them in the series because it's not possible to tell that we plan to use it
		-- unless we indicate it here.

		local preprocessedList = {}

		for index, value in ipairs(list) do
			if Promise.is(value) then
				if value:getStatus() == Promise.Status.Cancelled then
					cancel()
					return reject(Error.new({
						error = "Promise is cancelled",
						kind = Error.Kind.AlreadyCancelled,
						context = string.format(
							"The Promise that was part of the array at index %d passed into Promise.each was already cancelled when Promise.each began.\n\nThat Promise was created at:\n\n%s",
							index,
							value._source
						),
					}))
				elseif value:getStatus() == Promise.Status.Rejected then
					cancel()
					return reject(select(2, value:await()))
				end

				-- Chain a new Promise from this one so we only cancel ours
				local ourPromise = value:andThen(function(...)
					return ...
				end)

				table.insert(promisesToCancel, ourPromise)
				preprocessedList[index] = ourPromise
			else
				preprocessedList[index] = value
			end
		end

		for index, value in ipairs(preprocessedList) do
			if Promise.is(value) then
				local success
				success, value = value:await()

				if not success then
					cancel()
					return reject(value)
				end
			end

			if cancelled then
				return
			end

			local predicatePromise = Promise.resolve(predicate(value, index))

			table.insert(promisesToCancel, predicatePromise)

			local success, result = predicatePromise:await()

			if not success then
				cancel()
				return reject(result)
			end

			results[index] = result
		end

		resolve(results)
	end)
end

--[[
	Is the given object a Promise instance?
]]
function Promise.is(object)
	if type(object) ~= "table" then
		return false
	end

	local objectMetatable = getmetatable(object)

	if objectMetatable == Promise then
		-- The Promise came from this library.
		return true
	elseif objectMetatable == nil then
		-- No metatable, but we should still chain onto tables with andThen methods
		return type(object.andThen) == "function"
	elseif
		type(objectMetatable) == "table"
		and type(rawget(objectMetatable, "__index")) == "table"
		and type(rawget(rawget(objectMetatable, "__index"), "andThen")) == "function"
	then
		-- Maybe this came from a different or older Promise library.
		return true
	end

	return false
end

--[[
	Converts a yielding function into a Promise-returning one.
]]
function Promise.promisify(callback)
	return function(...)
		return Promise._try(debug.traceback(nil, 2), callback, ...)
	end
end

--[[
	Creates a Promise that resolves after given number of seconds.
]]
do
	-- uses a sorted doubly linked list (queue) to achieve O(1) remove operations and O(n) for insert

	-- the initial node in the linked list
	local first
	local connection

	function Promise.delay(seconds)
		assert(type(seconds) == "number", "Bad argument #1 to Promise.delay, must be a number.")
		-- If seconds is -INF, INF, NaN, or less than 1 / 60, assume seconds is 1 / 60.
		-- This mirrors the behavior of wait()
		if not (seconds >= 1 / 60) or seconds == math.huge then
			seconds = 1 / 60
		end

		return Promise._new(debug.traceback(nil, 2), function(resolve, _, onCancel)
			local startTime = Promise._getTime()
			local endTime = startTime + seconds

			local node = {
				resolve = resolve,
				startTime = startTime,
				endTime = endTime,
			}

			if connection == nil then -- first is nil when connection is nil
				first = node
				connection = Promise._timeEvent:Connect(function()
					local threadStart = Promise._getTime()

					while first ~= nil and first.endTime < threadStart do
						local current = first
						first = current.next

						if first == nil then
							connection:Disconnect()
							connection = nil
						else
							first.previous = nil
						end

						current.resolve(Promise._getTime() - current.startTime)
					end
				end)
			else -- first is non-nil
				if first.endTime < endTime then -- if `node` should be placed after `first`
					-- we will insert `node` between `current` and `next`
					-- (i.e. after `current` if `next` is nil)
					local current = first
					local next = current.next

					while next ~= nil and next.endTime < endTime do
						current = next
						next = current.next
					end

					-- `current` must be non-nil, but `next` could be `nil` (i.e. last item in list)
					current.next = node
					node.previous = current

					if next ~= nil then
						node.next = next
						next.previous = node
					end
				else
					-- set `node` to `first`
					node.next = first
					first.previous = node
					first = node
				end
			end

			onCancel(function()
				-- remove node from queue
				local next = node.next

				if first == node then
					if next == nil then -- if `node` is the first and last
						connection:Disconnect()
						connection = nil
					else -- if `node` is `first` and not the last
						next.previous = nil
					end
					first = next
				else
					local previous = node.previous
					-- since `node` is not `first`, then we know `previous` is non-nil
					previous.next = next

					if next ~= nil then
						next.previous = previous
					end
				end
			end)
		end)
	end
end

--[[
	Rejects the promise after `seconds` seconds.
]]
function Promise.prototype:timeout(seconds, rejectionValue)
	local traceback = debug.traceback(nil, 2)

	return Promise.race({
		Promise.delay(seconds):andThen(function()
			return Promise.reject(rejectionValue == nil and Error.new({
				kind = Error.Kind.TimedOut,
				error = "Timed out",
				context = string.format(
					"Timeout of %d seconds exceeded.\n:timeout() called at:\n\n%s",
					seconds,
					traceback
				),
			}) or rejectionValue)
		end),
		self,
	})
end

function Promise.prototype:getStatus()
	return self._status
end

--[[
	Creates a new promise that receives the result of this promise.

	The given callbacks are invoked depending on that result.
]]
function Promise.prototype:_andThen(traceback, successHandler, failureHandler)
	self._unhandledRejection = false

	-- Create a new promise to follow this part of the chain
	return Promise._new(traceback, function(resolve, reject)
		-- Our default callbacks just pass values onto the next promise.
		-- This lets success and failure cascade correctly!

		local successCallback = resolve
		if successHandler then
			successCallback = createAdvancer(
				traceback,
				successHandler,
				resolve,
				reject
			)
		end

		local failureCallback = reject
		if failureHandler then
			failureCallback = createAdvancer(
				traceback,
				failureHandler,
				resolve,
				reject
			)
		end

		if self._status == Promise.Status.Started then
			-- If we haven't resolved yet, put ourselves into the queue
			table.insert(self._queuedResolve, successCallback)
			table.insert(self._queuedReject, failureCallback)
		elseif self._status == Promise.Status.Resolved then
			-- This promise has already resolved! Trigger success immediately.
			successCallback(unpack(self._values, 1, self._valuesLength))
		elseif self._status == Promise.Status.Rejected then
			-- This promise died a terrible death! Trigger failure immediately.
			failureCallback(unpack(self._values, 1, self._valuesLength))
		elseif self._status == Promise.Status.Cancelled then
			-- We don't want to call the success handler or the failure handler,
			-- we just reject this promise outright.
			reject(Error.new({
				error = "Promise is cancelled",
				kind = Error.Kind.AlreadyCancelled,
				context = "Promise created at\n\n" .. traceback,
			}))
		end
	end, self)
end

function Promise.prototype:andThen(successHandler, failureHandler)
	assert(
		successHandler == nil or type(successHandler) == "function",
		string.format(ERROR_NON_FUNCTION, "Promise:andThen")
	)
	assert(
		failureHandler == nil or type(failureHandler) == "function",
		string.format(ERROR_NON_FUNCTION, "Promise:andThen")
	)

	return self:_andThen(debug.traceback(nil, 2), successHandler, failureHandler)
end

--[[
	Used to catch any errors that may have occurred in the promise.
]]
function Promise.prototype:catch(failureCallback)
	assert(
		failureCallback == nil or type(failureCallback) == "function",
		string.format(ERROR_NON_FUNCTION, "Promise:catch")
	)
	return self:_andThen(debug.traceback(nil, 2), nil, failureCallback)
end

--[[
	Like andThen, but the value passed into the handler is also the
	value returned from the handler.
]]
function Promise.prototype:tap(tapCallback)
	assert(type(tapCallback) == "function", string.format(ERROR_NON_FUNCTION, "Promise:tap"))
	return self:_andThen(debug.traceback(nil, 2), function(...)
		local callbackReturn = tapCallback(...)

		if Promise.is(callbackReturn) then
			local length, values = pack(...)
			return callbackReturn:andThen(function()
				return unpack(values, 1, length)
			end)
		end

		return ...
	end)
end

--[[
	Calls a callback on `andThen` with specific arguments.
]]
function Promise.prototype:andThenCall(callback, ...)
	assert(type(callback) == "function", string.format(ERROR_NON_FUNCTION, "Promise:andThenCall"))
	local length, values = pack(...)
	return self:_andThen(debug.traceback(nil, 2), function()
		return callback(unpack(values, 1, length))
	end)
end

--[[
	Shorthand for an andThen handler that returns the given value.
]]
function Promise.prototype:andThenReturn(...)
	local length, values = pack(...)
	return self:_andThen(debug.traceback(nil, 2), function()
		return unpack(values, 1, length)
	end)
end

--[[
	Cancels the promise, disallowing it from rejecting or resolving, and calls
	the cancellation hook if provided.
]]
function Promise.prototype:cancel()
	if self._status ~= Promise.Status.Started then
		return
	end

	self._status = Promise.Status.Cancelled

	if self._cancellationHook then
		self._cancellationHook()
	end

	if self._parent then
		self._parent:_consumerCancelled(self)
	end

	for child in pairs(self._consumers) do
		child:cancel()
	end

	self:_finalize()
end

--[[
	Used to decrease the number of consumers by 1, and if there are no more,
	cancel this promise.
]]
function Promise.prototype:_consumerCancelled(consumer)
	if self._status ~= Promise.Status.Started then
		return
	end

	self._consumers[consumer] = nil

	if next(self._consumers) == nil then
		self:cancel()
	end
end

--[[
	Used to set a handler for when the promise resolves, rejects, or is
	cancelled. Returns a new promise chained from this promise.
]]
function Promise.prototype:_finally(traceback, finallyHandler, onlyOk)
	if not onlyOk then
		self._unhandledRejection = false
	end

	-- Return a promise chained off of this promise
	return Promise._new(traceback, function(resolve, reject)
		local finallyCallback = resolve
		if finallyHandler then
			finallyCallback = createAdvancer(
				traceback,
				finallyHandler,
				resolve,
				reject
			)
		end

		if onlyOk then
			local callback = finallyCallback
			finallyCallback = function(...)
				if self._status == Promise.Status.Rejected then
					return resolve(self)
				end

				return callback(...)
			end
		end

		if self._status == Promise.Status.Started then
			-- The promise is not settled, so queue this.
			table.insert(self._queuedFinally, finallyCallback)
		else
			-- The promise already settled or was cancelled, run the callback now.
			finallyCallback(self._status)
		end
	end, self)
end

function Promise.prototype:finally(finallyHandler)
	assert(
		finallyHandler == nil or type(finallyHandler) == "function",
		string.format(ERROR_NON_FUNCTION, "Promise:finally")
	)
	return self:_finally(debug.traceback(nil, 2), finallyHandler)
end

--[[
	Calls a callback on `finally` with specific arguments.
]]
function Promise.prototype:finallyCall(callback, ...)
	assert(type(callback) == "function", string.format(ERROR_NON_FUNCTION, "Promise:finallyCall"))
	local length, values = pack(...)
	return self:_finally(debug.traceback(nil, 2), function()
		return callback(unpack(values, 1, length))
	end)
end

--[[
	Shorthand for a finally handler that returns the given value.
]]
function Promise.prototype:finallyReturn(...)
	local length, values = pack(...)
	return self:_finally(debug.traceback(nil, 2), function()
		return unpack(values, 1, length)
	end)
end

--[[
	Similar to finally, except rejections are propagated through it.
]]
function Promise.prototype:done(finallyHandler)
	assert(
		finallyHandler == nil or type(finallyHandler) == "function",
		string.format(ERROR_NON_FUNCTION, "Promise:done")
	)
	return self:_finally(debug.traceback(nil, 2), finallyHandler, true)
end

--[[
	Calls a callback on `done` with specific arguments.
]]
function Promise.prototype:doneCall(callback, ...)
	assert(type(callback) == "function", string.format(ERROR_NON_FUNCTION, "Promise:doneCall"))
	local length, values = pack(...)
	return self:_finally(debug.traceback(nil, 2), function()
		return callback(unpack(values, 1, length))
	end, true)
end

--[[
	Shorthand for a done handler that returns the given value.
]]
function Promise.prototype:doneReturn(...)
	local length, values = pack(...)
	return self:_finally(debug.traceback(nil, 2), function()
		return unpack(values, 1, length)
	end, true)
end

--[[
	Yield until the promise is completed.

	This matches the execution model of normal Roblox functions.
]]
function Promise.prototype:awaitStatus()
	self._unhandledRejection = false

	if self._status == Promise.Status.Started then
		local bindable = Instance.new("BindableEvent")

		self:finally(function()
			bindable:Fire()
		end)

		bindable.Event:Wait()
		bindable:Destroy()
	end

	if self._status == Promise.Status.Resolved then
		return self._status, unpack(self._values, 1, self._valuesLength)
	elseif self._status == Promise.Status.Rejected then
		return self._status, unpack(self._values, 1, self._valuesLength)
	end

	return self._status
end

local function awaitHelper(status, ...)
	return status == Promise.Status.Resolved, ...
end

--[[
	Calls awaitStatus internally, returns (isResolved, values...)
]]
function Promise.prototype:await()
	return awaitHelper(self:awaitStatus())
end

local function expectHelper(status, ...)
	if status ~= Promise.Status.Resolved then
		error((...) == nil and "Expected Promise rejected with no value." or (...), 3)
	end

	return ...
end

--[[
	Calls await and only returns if the Promise resolves.
	Throws if the Promise rejects or gets cancelled.
]]
function Promise.prototype:expect()
	return expectHelper(self:awaitStatus())
end

-- Backwards compatibility
Promise.prototype.awaitValue = Promise.prototype.expect

--[[
	Intended for use in tests.

	Similar to await(), but instead of yielding if the promise is unresolved,
	_unwrap will throw. This indicates an assumption that a promise has
	resolved.
]]
function Promise.prototype:_unwrap()
	if self._status == Promise.Status.Started then
		error("Promise has not resolved or rejected.", 2)
	end

	local success = self._status == Promise.Status.Resolved

	return success, unpack(self._values, 1, self._valuesLength)
end

function Promise.prototype:_resolve(...)
	if self._status ~= Promise.Status.Started then
		if Promise.is((...)) then
			(...):_consumerCancelled(self)
		end
		return
	end

	-- If the resolved value was a Promise, we chain onto it!
	if Promise.is((...)) then
		-- Without this warning, arguments sometimes mysteriously disappear
		if select("#", ...) > 1 then
			local message = string.format(
				"When returning a Promise from andThen, extra arguments are " ..
				"discarded! See:\n\n%s",
				self._source
			)
			warn(message)
		end

		local chainedPromise = ...

		local promise = chainedPromise:andThen(
			function(...)
				self:_resolve(...)
			end,
			function(...)
				local maybeRuntimeError = chainedPromise._values[1]

				-- Backwards compatibility < v2
				if chainedPromise._error then
					maybeRuntimeError = Error.new({
						error = chainedPromise._error,
						kind = Error.Kind.ExecutionError,
						context = "[No stack trace available as this Promise originated from an older version of the Promise library (< v2)]",
					})
				end

				if Error.isKind(maybeRuntimeError, Error.Kind.ExecutionError) then
					return self:_reject(maybeRuntimeError:extend({
						error = "This Promise was chained to a Promise that errored.",
						trace = "",
						context = string.format(
							"The Promise at:\n\n%s\n...Rejected because it was chained to the following Promise, which encountered an error:\n",
							self._source
						),
					}))
				end

				self:_reject(...)
			end
		)

		if promise._status == Promise.Status.Cancelled then
			self:cancel()
		elseif promise._status == Promise.Status.Started then
			-- Adopt ourselves into promise for cancellation propagation.
			self._parent = promise
			promise._consumers[self] = true
		end

		return
	end

	self._status = Promise.Status.Resolved
	self._valuesLength, self._values = pack(...)

	-- We assume that these callbacks will not throw errors.
	for _, callback in ipairs(self._queuedResolve) do
		coroutine.wrap(callback)(...)
	end

	self:_finalize()
end

function Promise.prototype:_reject(...)
	if self._status ~= Promise.Status.Started then
		return
	end

	self._status = Promise.Status.Rejected
	self._valuesLength, self._values = pack(...)

	-- If there are any rejection handlers, call those!
	if not isEmpty(self._queuedReject) then
		-- We assume that these callbacks will not throw errors.
		for _, callback in ipairs(self._queuedReject) do
			coroutine.wrap(callback)(...)
		end
	else
		-- At this point, no one was able to observe the error.
		-- An error handler might still be attached if the error occurred
		-- synchronously. We'll wait one tick, and if there are still no
		-- observers, then we should put a message in the console.

		local err = tostring((...))

		coroutine.wrap(function()
			Promise._timeEvent:Wait()

			-- Someone observed the error, hooray!
			if not self._unhandledRejection then
				return
			end

			-- Build a reasonable message
			local message = string.format(
				"Unhandled Promise rejection:\n\n%s\n\n%s",
				err,
				self._source
			)

			if Promise.TEST then
				-- Don't spam output when we're running tests.
				return
			end

			warn(message)
		end)()
	end

	self:_finalize()
end

--[[
	Calls any :finally handlers. We need this to be a separate method and
	queue because we must call all of the finally callbacks upon a success,
	failure, *and* cancellation.
]]
function Promise.prototype:_finalize()
	for _, callback in ipairs(self._queuedFinally) do
		-- Purposefully not passing values to callbacks here, as it could be the
		-- resolved values, or rejected errors. If the developer needs the values,
		-- they should use :andThen or :catch explicitly.
		coroutine.wrap(callback)(self._status)
	end

	self._queuedFinally = nil
	self._queuedReject = nil
	self._queuedResolve = nil

	-- Clear references to other Promises to allow gc
	if not Promise.TEST then
		self._parent = nil
		self._consumers = nil
	end
end

--[[
	Chains a Promise from this one that is resolved if this Promise is
	resolved, and rejected if it is not resolved.
]]
function Promise.prototype:now(rejectionValue)
	local traceback = debug.traceback(nil, 2)
	if self:getStatus() == Promise.Status.Resolved then
		return self:_andThen(traceback, function(...)
			return ...
		end)
	else
		return Promise.reject(rejectionValue == nil and Error.new({
			kind = Error.Kind.NotResolvedInTime,
			error = "This Promise was not resolved in time for :now()",
			context = ":now() was called at:\n\n" .. traceback,
		}) or rejectionValue)
	end
end

--[[
	Retries a Promise-returning callback N times until it succeeds.
]]
function Promise.retry(callback, times, ...)
	assert(type(callback) == "function", "Parameter #1 to Promise.retry must be a function")
	assert(type(times) == "number", "Parameter #2 to Promise.retry must be a number")

	local args, length = {...}, select("#", ...)

	return Promise.resolve(callback(...)):catch(function(...)
		if times > 0 then
			return Promise.retry(callback, times - 1, unpack(args, 1, length))
		else
			return Promise.reject(...)
		end
	end)
end

--[[
	Converts an event into a Promise with an optional predicate
]]
function Promise.fromEvent(event, predicate)
	predicate = predicate or function()
		return true
	end

	return Promise._new(debug.traceback(nil, 2), function(resolve, reject, onCancel)
		local connection
		local shouldDisconnect = false

		local function disconnect()
			connection:Disconnect()
			connection = nil
		end

		-- We use shouldDisconnect because if the callback given to Connect is called before
		-- Connect returns, connection will still be nil. This happens with events that queue up
		-- events when there's nothing connected, such as RemoteEvents

		connection = event:Connect(function(...)
			local callbackValue = predicate(...)

			if callbackValue == true then
				resolve(...)

				if connection then
					disconnect()
				else
					shouldDisconnect = true
				end
			elseif type(callbackValue) ~= "boolean" then
				error("Promise.fromEvent predicate should always return a boolean")
			end
		end)

		if shouldDisconnect and connection then
			return disconnect()
		end

		onCancel(function()
			disconnect()
		end)
	end)
end

return Promise
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXdd70d71ce3354796ad9eef582686f6b7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RuntimeLib</string>
					<string name="ScriptGuid">{63729903-155c-40af-95b3-8351efe8226c}</string>
					<ProtectedString name="Source"><![CDATA[local Promise = require(script.Parent.Promise)

local RunService = game:GetService("RunService")
local ReplicatedFirst = game:GetService("ReplicatedFirst")

local TS = {}

TS.Promise = Promise

local function isPlugin(object)
	return RunService:IsStudio() and object:FindFirstAncestorWhichIsA("Plugin") ~= nil
end

function TS.getModule(object, scope, moduleName)
	if moduleName == nil then
		moduleName = scope
		scope = "@rbxts"
	end

	if RunService:IsRunning() and object:IsDescendantOf(ReplicatedFirst) then
		warn("roblox-ts packages should not be used from ReplicatedFirst!")
	end

	-- ensure modules have fully replicated
	if RunService:IsRunning() and RunService:IsClient() and not isPlugin(object) and not game:IsLoaded() then
		game.Loaded:Wait()
	end

	local globalModules = script.Parent:FindFirstChild("node_modules")
	if not globalModules then
		error("Could not find any modules!", 2)
	end

	repeat
		local modules = object:FindFirstChild("node_modules")
		if modules and modules ~= globalModules then
			modules = modules:FindFirstChild("@rbxts")
		end
		if modules then
			local module = modules:FindFirstChild(moduleName)
			if module then
				return module
			end
		end
		object = object.Parent
	until object == nil or object == globalModules

	local scopedModules = globalModules:FindFirstChild(scope or "@rbxts");
	return (scopedModules or globalModules):FindFirstChild(moduleName) or error("Could not find module: " .. moduleName, 2)
end

-- This is a hash which TS.import uses as a kind of linked-list-like history of [Script who Loaded] -> Library
local currentlyLoading = {}
local registeredLibraries = {}

function TS.import(caller, module, ...)
	for i = 1, select("#", ...) do
		module = module:WaitForChild((select(i, ...)))
	end

	if module.ClassName ~= "ModuleScript" then
		error("Failed to import! Expected ModuleScript, got " .. module.ClassName, 2)
	end

	currentlyLoading[caller] = module

	-- Check to see if a case like this occurs:
	-- module -> Module1 -> Module2 -> module

	-- WHERE currentlyLoading[module] is Module1
	-- and currentlyLoading[Module1] is Module2
	-- and currentlyLoading[Module2] is module

	local currentModule = module
	local depth = 0

	while currentModule do
		depth = depth + 1
		currentModule = currentlyLoading[currentModule]

		if currentModule == module then
			local str = currentModule.Name -- Get the string traceback

			for _ = 1, depth do
				currentModule = currentlyLoading[currentModule]
				str = str .. "  ⇒ " .. currentModule.Name
			end

			error("Failed to import! Detected a circular dependency chain: " .. str, 2)
		end
	end

	if not registeredLibraries[module] then
		if _G[module] then
			error(
				"Invalid module access! Do you have two TS runtimes trying to import this? " .. module:GetFullName(),
				2
			)
		end

		_G[module] = TS
		registeredLibraries[module] = true -- register as already loaded for subsequent calls
	end

	local data = require(module)

	if currentlyLoading[caller] == module then -- Thread-safe cleanup!
		currentlyLoading[caller] = nil
	end

	return data
end

function TS.instanceof(obj, class)
	-- custom Class.instanceof() check
	if type(class) == "table" and type(class.instanceof) == "function" then
		return class.instanceof(obj)
	end

	-- metatable check
	if type(obj) == "table" then
		obj = getmetatable(obj)
		while obj ~= nil do
			if obj == class then
				return true
			end
			local mt = getmetatable(obj)
			if mt then
				obj = mt.__index
			else
				obj = nil
			end
		end
	end

	return false
end

function TS.async(callback)
	return function(...)
		local n = select("#", ...)
		local args = { ... }
		return Promise.new(function(resolve, reject)
			coroutine.wrap(function()
				local ok, result = pcall(callback, unpack(args, 1, n))
				if ok then
					resolve(result)
				else
					reject(result)
				end
			end)()
		end)
	end
end

function TS.await(promise)
	if not Promise.is(promise) then
		return promise
	end

	local status, value = promise:awaitStatus()
	if status == Promise.Status.Resolved then
		return value
	elseif status == Promise.Status.Rejected then
		error(value, 2)
	else
		error("The awaited Promise was cancelled", 2)
	end
end

function TS.bit_lrsh(a, b)
	local absA = math.abs(a)
	local result = bit32.rshift(absA, b)
	if a == absA then
		return result
	else
		return -result - 1
	end
end

TS.TRY_RETURN = 1
TS.TRY_BREAK = 2
TS.TRY_CONTINUE = 3

function TS.try(func, catch, finally)
	local err, traceback
	local success, exitType, returns = xpcall(
		func,
		function(errInner)
			err = errInner
			traceback = debug.traceback()
		end
	)
	if not success and catch then
		local newExitType, newReturns = catch(err, traceback)
		if newExitType then
			exitType, returns = newExitType, newReturns
		end
	end
	if finally then
		local newExitType, newReturns = finally()
		if newExitType then
			exitType, returns = newExitType, newReturns
		end
	end
	return exitType, returns
end

function TS.generator(callback)
	local co = coroutine.create(callback)
	return {
		next = function(...)
			if coroutine.status(co) == "dead" then
				return { done = true }
			else
				local success, value = coroutine.resume(co, ...)
				if success == false then
					error(value, 2)
				end
				return {
					value = value,
					done = coroutine.status(co) == "dead",
				}
			end
		end,
	}
end

return TS
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX04758b4961484e6bbc1b7448bfc2cc61">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">node_modules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBX3374451eac1d4d26ba66139421fdccd8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">compiler-types</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Folder" referent="RBXcbf1031ce4674bbda4e16fc08a564265">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">types</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXdb1663136db144ffb37bb858e39ef2c7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">maid</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX46f9422c7df84434b0705ed87cf8beaa">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Maid</string>
							<string name="ScriptGuid">{7f3d6548-66ea-4ee0-972a-cd159709cb7a}</string>
							<ProtectedString name="Source"><![CDATA[---	Manages the cleaning of events and other things.
-- Useful for encapsulating state and make deconstructors easy
-- @classmod Maid
-- @see Signal

local Maid = {}
Maid.ClassName = "Maid"

--- Returns a new Maid object
-- @constructor Maid.new()
-- @treturn Maid
function Maid.new()
	local self = {}

	self._tasks = {}

	return setmetatable(self, Maid)
end

--- Returns Maid[key] if not part of Maid metatable
-- @return Maid[key] value
function Maid:__index(index)
	if Maid[index] then
		return Maid[index]
	else
		return self._tasks[index]
	end
end

--- Add a task to clean up
-- @usage
-- Maid[key] = (function)         Adds a task to perform
-- Maid[key] = (event connection) Manages an event connection
-- Maid[key] = (Maid)             Maids can act as an event connection, allowing a Maid to have other maids to clean up.
-- Maid[key] = (Object)           Maids can cleanup objects with a `Destroy` method
-- Maid[key] = nil                Removes a named task. If the task is an event, it is disconnected. If it is an object,
--                                it is destroyed.
function Maid:__newindex(index, newTask)
	if Maid[index] ~= nil then
		error(("'%s' is reserved"):format(tostring(index)), 2)
	end

	local tasks = self._tasks
	local oldTask = tasks[index]
	tasks[index] = newTask

	if oldTask then
		if type(oldTask) == "function" then
			oldTask()
		elseif typeof(oldTask) == "RBXScriptConnection" then
			oldTask:Disconnect()
		elseif oldTask.Destroy then
			oldTask:Destroy()
		end
	end
end

--- Same as indexing, but uses an incremented number as a key.
-- @param task An item to clean
-- @treturn number taskId
function Maid:GiveTask(task)
	assert(task, "Task cannot be false or nil")

	local taskId = #self._tasks+1
	self[taskId] = task

	if type(task) == "table" and (not task.Destroy) then
		warn("[Maid.GiveTask] - Gave table task without .Destroy\n\n" .. debug.traceback())
	end

	return taskId
end

function Maid:GivePromise(promise)
	if not promise:IsPending() then
		return promise
	end

	local newPromise = promise.resolved(promise)
	local id = self:GiveTask(newPromise)

	-- Ensure GC
	newPromise:Finally(function()
		self[id] = nil
	end)

	return newPromise
end

--- Cleans up all tasks.
-- @alias Destroy
function Maid:DoCleaning()
	local tasks = self._tasks

	-- Disconnect all events first as we know this is safe
	for index, task in pairs(tasks) do
		if typeof(task) == "RBXScriptConnection" then
			tasks[index] = nil
			task:Disconnect()
		end
	end

	-- Clear out tasks table completely, even if clean up tasks add more tasks to the maid
	local index, task = next(tasks)
	while task ~= nil do
		tasks[index] = nil
		if type(task) == "function" then
			task()
		elseif typeof(task) == "RBXScriptConnection" then
			task:Disconnect()
		elseif task.Destroy then
			task:Destroy()
		end
		index, task = next(tasks)
	end
end

--- Alias for DoCleaning()
-- @function Destroy
Maid.Destroy = Maid.DoCleaning

return Maid]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX7da31c5907994f82885a3af833757cac">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">object-utils</string>
						<string name="ScriptGuid">{35abfe2e-286e-4e12-87fe-ecfee31cb901}</string>
						<ProtectedString name="Source"><![CDATA[local HttpService = game:GetService("HttpService")

local Object = {}

function Object.keys(object)
	local result = table.create(#object)
	for key in pairs(object) do
		result[#result + 1] = key
	end
	return result
end

function Object.values(object)
	local result = table.create(#object)
	for _, value in pairs(object) do
		result[#result + 1] = value
	end
	return result
end

function Object.entries(object)
	local result = table.create(#object)
	for key, value in pairs(object) do
		result[#result + 1] = { key, value }
	end
	return result
end

function Object.assign(toObj, ...)
	for i = 1, select("#", ...) do
		local arg = select(i, ...)
		if type(arg) == "table" then
			for key, value in pairs(arg) do
				toObj[key] = value
			end
		end
	end
	return toObj
end

function Object.copy(object)
	local result = table.create(#object)
	for k, v in pairs(object) do
		result[k] = v
	end
	return result
end

local function deepCopyHelper(object, encountered)
	local result = table.create(#object)
	encountered[object] = result

	for k, v in pairs(object) do
		if type(k) == "table" then
			k = encountered[k] or deepCopyHelper(k, encountered)
		end

		if type(v) == "table" then
			v = encountered[v] or deepCopyHelper(v, encountered)
		end

		result[k] = v
	end

	return result
end

function Object.deepCopy(object)
	return deepCopyHelper(object, {})
end

function Object.deepEquals(a, b)
	-- a[k] == b[k]
	for k in pairs(a) do
		local av = a[k]
		local bv = b[k]
		if type(av) == "table" and type(bv) == "table" then
			local result = Object.deepEquals(av, bv)
			if not result then
				return false
			end
		elseif av ~= bv then
			return false
		end
	end

	-- extra keys in b
	for k in pairs(b) do
		if a[k] == nil then
			return false
		end
	end

	return true
end

function Object.toString(data)
	return HttpService:JSONEncode(data)
end

function Object.isEmpty(object)
	return next(object) == nil
end

function Object.fromEntries(entries)
	local entriesLen = #entries

	local result = table.create(entriesLen)
	if entries then
		for i = 1, entriesLen do
			local pair = entries[i]
			result[pair[1]] = pair[2]
		end
	end
	return result
end

return Object
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX6087ef5edc964516a2fbdaf584bab85a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">signal</string>
						<string name="ScriptGuid">{1d3a1bf9-1913-4c2a-86e0-c1bbc48f15f4}</string>
						<ProtectedString name="Source"><![CDATA[local Signal = {}
Signal.__index = Signal

function Signal.new()
	return setmetatable({
		Bindable = Instance.new("BindableEvent");
	}, Signal)
end

function Signal:Connect(Callback)
	return self.Bindable.Event:Connect(function(GetArguments)
		Callback(GetArguments())
	end)
end

function Signal:Fire(...)
	local Arguments = { ... }
	local n = select("#", ...)

	self.Bindable:Fire(function()
		return table.unpack(Arguments, 1, n)
	end)
end

function Signal:Wait()
	return self.Bindable.Event:Wait()()
end

function Signal:Destroy()
	self.Bindable:Destroy()
end

return Signal
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX106df1dd2eb942318c896ebd2ec88e54">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">t</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Folder" referent="RBX66aee28bddf34ad98da7a0ed8e271985">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">lib</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX032a0019fe91473181a153e78c78849c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ts</string>
								<string name="ScriptGuid">{a72b6c45-25a4-4917-895d-fe076c9492ad}</string>
								<ProtectedString name="Source"><![CDATA[-- t: a runtime typechecker for Roblox

-- regular lua compatibility
local typeof = typeof or type

local function primitive(typeName)
	return function(value)
		local valueType = typeof(value)
		if valueType == typeName then
			return true
		else
			return false
		end
	end
end

local t = {}

--[[**
	matches any type except nil

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
function t.any(value)
	if value ~= nil then
		return true
	else
		return false
	end
end

--Lua primitives

--[[**
	ensures Lua primitive boolean type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.boolean = primitive("boolean")

--[[**
	ensures Lua primitive thread type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.thread = primitive("thread")

--[[**
	ensures Lua primitive callback type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.callback = primitive("function")
t["function"] = t.callback

--[[**
	ensures Lua primitive none type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.none = primitive("nil")
t["nil"] = t.none

--[[**
	ensures Lua primitive string type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.string = primitive("string")

--[[**
	ensures Lua primitive table type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.table = primitive("table")

--[[**
	ensures Lua primitive userdata type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.userdata = primitive("userdata")

--[[**
	ensures value is a number and non-NaN

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
function t.number(value)
	local valueType = typeof(value)
	if valueType == "number" then
		if value == value then
			return true
		else
			return false
		end
	else
		return false
	end
end

--[[**
	ensures value is NaN

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
function t.nan(value)
	local valueType = typeof(value)
	if valueType == "number" then
		if value ~= value then
			return true
		else
			return false
		end
	else
		return false
	end
end

-- roblox types

--[[**
	ensures Roblox Axes type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Axes = primitive("Axes")

--[[**
	ensures Roblox BrickColor type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.BrickColor = primitive("BrickColor")

--[[**
	ensures Roblox CFrame type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.CFrame = primitive("CFrame")

--[[**
	ensures Roblox Color3 type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Color3 = primitive("Color3")

--[[**
	ensures Roblox ColorSequence type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.ColorSequence = primitive("ColorSequence")

--[[**
	ensures Roblox ColorSequenceKeypoint type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.ColorSequenceKeypoint = primitive("ColorSequenceKeypoint")

--[[**
	ensures Roblox DockWidgetPluginGuiInfo type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.DockWidgetPluginGuiInfo = primitive("DockWidgetPluginGuiInfo")

--[[**
	ensures Roblox Faces type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Faces = primitive("Faces")

--[[**
	ensures Roblox Instance type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Instance = primitive("Instance")

--[[**
	ensures Roblox NumberRange type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.NumberRange = primitive("NumberRange")

--[[**
	ensures Roblox NumberSequence type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.NumberSequence = primitive("NumberSequence")

--[[**
	ensures Roblox NumberSequenceKeypoint type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.NumberSequenceKeypoint = primitive("NumberSequenceKeypoint")

--[[**
	ensures Roblox PathWaypoint type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.PathWaypoint = primitive("PathWaypoint")

--[[**
	ensures Roblox PhysicalProperties type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.PhysicalProperties = primitive("PhysicalProperties")

--[[**
	ensures Roblox Random type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Random = primitive("Random")

--[[**
	ensures Roblox Ray type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Ray = primitive("Ray")

--[[**
	ensures Roblox Rect type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Rect = primitive("Rect")

--[[**
	ensures Roblox Region3 type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Region3 = primitive("Region3")

--[[**
	ensures Roblox Region3int16 type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Region3int16 = primitive("Region3int16")

--[[**
	ensures Roblox TweenInfo type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.TweenInfo = primitive("TweenInfo")

--[[**
	ensures Roblox UDim type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.UDim = primitive("UDim")

--[[**
	ensures Roblox UDim2 type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.UDim2 = primitive("UDim2")

--[[**
	ensures Roblox Vector2 type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Vector2 = primitive("Vector2")

--[[**
	ensures Roblox Vector3 type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Vector3 = primitive("Vector3")

--[[**
	ensures Roblox Vector3int16 type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Vector3int16 = primitive("Vector3int16")

-- roblox enum types

--[[**
	ensures Roblox Enum type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.Enum = primitive("Enum")

--[[**
	ensures Roblox EnumItem type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.EnumItem = primitive("EnumItem")

--[[**
	ensures Roblox RBXScriptSignal type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.RBXScriptSignal = primitive("RBXScriptSignal")

--[[**
	ensures Roblox RBXScriptConnection type

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
t.RBXScriptConnection = primitive("RBXScriptConnection")

--[[**
	ensures value is a given literal value

	@param literal The literal to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.literal(...)
	local size = select("#", ...)
	if size == 1 then
		local literal = ...
		return function(value)
			if value ~= literal then
				return false
			end

			return true
		end
	else
		local literals = {}
		for i = 1, size do
			local value = select(i, ...)
			literals[i] = t.literal(value)
		end

		return t.union(table.unpack(literals, 1, size))
	end
end

--[[**
	DEPRECATED
	Please use t.literal
**--]]
t.exactly = t.literal

--[[**
	Returns a t.union of each key in the table as a t.literal

	@param keyTable The table to get keys from

	@returns True iff the condition is satisfied, false otherwise
**--]]
function t.keyOf(keyTable)
	local keys = {}
	local length = 0
	for key in pairs(keyTable) do
		length = length + 1
		keys[length] = key
	end

	return t.literal(table.unpack(keys, 1, length))
end

--[[**
	Returns a t.union of each value in the table as a t.literal

	@param valueTable The table to get values from

	@returns True iff the condition is satisfied, false otherwise
**--]]
function t.valueOf(valueTable)
	local values = {}
	local length = 0
	for _, value in pairs(valueTable) do
		length = length + 1
		values[length] = value
	end

	return t.literal(table.unpack(values, 1, length))
end

--[[**
	ensures value is an integer

	@param value The value to check against

	@returns True iff the condition is satisfied, false otherwise
**--]]
function t.integer(value)
	local success = t.number(value)
	if not success then
		return false
	end

	if value % 1 == 0 then
		return true
	else
		return false
	end
end

--[[**
	ensures value is a number where min <= value

	@param min The minimum to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.numberMin(min)
	return function(value)
		local success = t.number(value)
		if not success then
			return false
		end

		if value >= min then
			return true
		else
			return false
		end
	end
end

--[[**
	ensures value is a number where value <= max

	@param max The maximum to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.numberMax(max)
	return function(value)
		local success = t.number(value)
		if not success then
			return false
		end

		if value <= max then
			return true
		else
			return false
		end
	end
end

--[[**
	ensures value is a number where min < value

	@param min The minimum to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.numberMinExclusive(min)
	return function(value)
		local success = t.number(value)
		if not success then
			return false
		end

		if min < value then
			return true
		else
			return false
		end
	end
end

--[[**
	ensures value is a number where value < max

	@param max The maximum to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.numberMaxExclusive(max)
	return function(value)
		local success = t.number(value)
		if not success then
			return false
		end

		if value < max then
			return true
		else
			return false
		end
	end
end

--[[**
	ensures value is a number where value > 0

	@returns A function that will return true iff the condition is passed
**--]]
t.numberPositive = t.numberMinExclusive(0)

--[[**
	ensures value is a number where value < 0

	@returns A function that will return true iff the condition is passed
**--]]
t.numberNegative = t.numberMaxExclusive(0)

--[[**
	ensures value is a number where min <= value <= max

	@param min The minimum to use
	@param max The maximum to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.numberConstrained(min, max)
	assert(t.number(min))
	assert(t.number(max))
	local minCheck = t.numberMin(min)
	local maxCheck = t.numberMax(max)

	return function(value)
		local minSuccess = minCheck(value)
		if not minSuccess then
			return false
		end

		local maxSuccess = maxCheck(value)
		if not maxSuccess then
			return false
		end

		return true
	end
end

--[[**
	ensures value is a number where min < value < max

	@param min The minimum to use
	@param max The maximum to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.numberConstrainedExclusive(min, max)
	assert(t.number(min))
	assert(t.number(max))
	local minCheck = t.numberMinExclusive(min)
	local maxCheck = t.numberMaxExclusive(max)

	return function(value)
		local minSuccess = minCheck(value)
		if not minSuccess then
			return false
		end

		local maxSuccess = maxCheck(value)
		if not maxSuccess then
			return false
		end

		return true
	end
end

--[[**
	ensures value matches string pattern

	@param string pattern to check against

	@returns A function that will return true iff the condition is passed
**--]]
function t.match(pattern)
	assert(t.string(pattern))
	return function(value)
		local stringSuccess = t.string(value)
		if not stringSuccess then
			return false
		end

		if string.match(value, pattern) == nil then
			return false
		end

		return true
	end
end

--[[**
	ensures value is either nil or passes check

	@param check The check to use

	@returns A function that will return true iff the condition is passed
**--]]
function t.optional(check)
	assert(t.callback(check))
	return function(value)
		if value == nil then
			return true
		end

		local success = check(value)
		if success then
			return true
		else
			return false
		end
	end
end

--[[**
	matches given tuple against tuple type definition

	@param ... The type definition for the tuples

	@returns A function that will return true iff the condition is passed
**--]]
function t.tuple(...)
	local checks = { ... }
	return function(...)
		local args = { ... }
		for i, check in ipairs(checks) do
			local success = check(args[i])
			if success == false then
				return false
			end
		end

		return true
	end
end

--[[**
	ensures all keys in given table pass check

	@param check The function to use to check the keys

	@returns A function that will return true iff the condition is passed
**--]]
function t.keys(check)
	assert(t.callback(check))
	return function(value)
		local tableSuccess = t.table(value)
		if tableSuccess == false then
			return false
		end

		for key in pairs(value) do
			local success = check(key)
			if success == false then
				return false
			end
		end

		return true
	end
end

--[[**
	ensures all values in given table pass check

	@param check The function to use to check the values

	@returns A function that will return true iff the condition is passed
**--]]
function t.values(check)
	assert(t.callback(check))
	return function(value)
		local tableSuccess = t.table(value)
		if tableSuccess == false then
			return false
		end

		for _, val in pairs(value) do
			local success = check(val)
			if success == false then
				return false
			end
		end

		return true
	end
end

--[[**
	ensures value is a table and all keys pass keyCheck and all values pass valueCheck

	@param keyCheck The function to use to check the keys
	@param valueCheck The function to use to check the values

	@returns A function that will return true iff the condition is passed
**--]]
function t.map(keyCheck, valueCheck)
	assert(t.callback(keyCheck))
	assert(t.callback(valueCheck))
	local keyChecker = t.keys(keyCheck)
	local valueChecker = t.values(valueCheck)

	return function(value)
		local keySuccess = keyChecker(value)
		if not keySuccess then
			return false
		end

		local valueSuccess = valueChecker(value)
		if not valueSuccess then
			return false
		end

		return true
	end
end

--[[**
	ensures value is a table and all keys pass valueCheck and all values are true

	@param valueCheck The function to use to check the values

	@returns A function that will return true iff the condition is passed
**--]]
function t.set(valueCheck)
	return t.map(valueCheck, t.literal(true))
end

do
	local arrayKeysCheck = t.keys(t.integer)
--[[**
		ensures value is an array and all values of the array match check

		@param check The check to compare all values with

		@returns A function that will return true iff the condition is passed
	**--]]
	function t.array(check)
		assert(t.callback(check))
		local valuesCheck = t.values(check)

		return function(value)
			local keySuccess = arrayKeysCheck(value)
			if keySuccess == false then
				return false
			end

			-- # is unreliable for sparse arrays
			-- Count upwards using ipairs to avoid false positives from the behavior of #
			local arraySize = 0

			for _ in ipairs(value) do
				arraySize = arraySize + 1
			end

			for key in pairs(value) do
				if key < 1 or key > arraySize then
					return false
				end
			end

			local valueSuccess = valuesCheck(value)
			if not valueSuccess then
				return false
			end

			return true
		end
	end

--[[**
		ensures value is an array of a strict makeup and size

		@param check The check to compare all values with

		@returns A function that will return true iff the condition is passed
	**--]]
	function t.strictArray(...)
		local valueTypes = { ... }
		assert(t.array(t.callback)(valueTypes))

		return function(value)
			local keySuccess = arrayKeysCheck(value)
			if keySuccess == false then
				return false
			end

			-- If there's more than the set array size, disallow
			if #valueTypes < #value then
				return false
			end

			for idx, typeFn in pairs(valueTypes) do
				local typeSuccess = typeFn(value[idx])
				if not typeSuccess then
					return false
				end
			end

			return true
		end
	end
end

do
	local callbackArray = t.array(t.callback)
--[[**
		creates a union type

		@param ... The checks to union

		@returns A function that will return true iff the condition is passed
	**--]]
	function t.union(...)
		local checks = { ... }
		assert(callbackArray(checks))

		return function(value)
			for _, check in ipairs(checks) do
				if check(value) then
					return true
				end
			end

			return false
		end
	end

--[[**
		Alias for t.union
	**--]]
	t.some = t.union

--[[**
		creates an intersection type

		@param ... The checks to intersect

		@returns A function that will return true iff the condition is passed
	**--]]
	function t.intersection(...)
		local checks = { ... }
		assert(callbackArray(checks))

		return function(value)
			for _, check in ipairs(checks) do
				local success = check(value)
				if not success then
					return false
				end
			end

			return true
		end
	end

--[[**
		Alias for t.intersection
	**--]]
	t.every = t.intersection
end

do
	local checkInterface = t.map(t.any, t.callback)
--[[**
		ensures value matches given interface definition

		@param checkTable The interface definition

		@returns A function that will return true iff the condition is passed
	**--]]
	function t.interface(checkTable)
		assert(checkInterface(checkTable))
		return function(value)
			local tableSuccess = t.table(value)
			if tableSuccess == false then
				return false
			end

			for key, check in pairs(checkTable) do
				local success = check(value[key])
				if success == false then
					return false
				end
			end

			return true
		end
	end

--[[**
		ensures value matches given interface definition strictly

		@param checkTable The interface definition

		@returns A function that will return true iff the condition is passed
	**--]]
	function t.strictInterface(checkTable)
		assert(checkInterface(checkTable))
		return function(value)
			local tableSuccess = t.table(value)
			if tableSuccess == false then
				return false
			end

			for key, check in pairs(checkTable) do
				local success = check(value[key])
				if success == false then
					return false
				end
			end

			for key in pairs(value) do
				if not checkTable[key] then
					return false
				end
			end

			return true
		end
	end
end

--[[**
	ensure value is an Instance and it's ClassName matches the given ClassName

	@param className The class name to check for

	@returns A function that will return true iff the condition is passed
**--]]
function t.instanceOf(className, childTable)
	assert(t.string(className))

	local childrenCheck
	if childTable ~= nil then
		childrenCheck = t.children(childTable)
	end

	return function(value)
		local instanceSuccess = t.Instance(value)
		if not instanceSuccess then
			return false
		end

		if value.ClassName ~= className then
			return false
		end

		if childrenCheck then
			local childrenSuccess = childrenCheck(value)
			if not childrenSuccess then
				return false
			end
		end

		return true
	end
end

t.instance = t.instanceOf

--[[**
	ensure value is an Instance and it's ClassName matches the given ClassName by an IsA comparison

	@param className The class name to check for

	@returns A function that will return true iff the condition is passed
**--]]
function t.instanceIsA(className, childTable)
	assert(t.string(className))

	local childrenCheck
	if childTable ~= nil then
		childrenCheck = t.children(childTable)
	end

	return function(value)
		local instanceSuccess = t.Instance(value)
		if not instanceSuccess then
			return false
		end

		if not value:IsA(className) then
			return false
		end

		if childrenCheck then
			local childrenSuccess = childrenCheck(value)
			if not childrenSuccess then
				return false
			end
		end

		return true
	end
end

--[[**
	ensures value is an enum of the correct type

	@param enum The enum to check

	@returns A function that will return true iff the condition is passed
**--]]
function t.enum(enum)
	assert(t.Enum(enum))
	return function(value)
		local enumItemSuccess = t.EnumItem(value)
		if not enumItemSuccess then
			return false
		end

		if value.EnumType == enum then
			return true
		else
			return false
		end
	end
end

do
	local checkWrap = t.tuple(t.callback, t.callback)

--[[**
		wraps a callback in an assert with checkArgs

		@param callback The function to wrap
		@param checkArgs The functon to use to check arguments in the assert

		@returns A function that first asserts using checkArgs and then calls callback
	**--]]
	function t.wrap(callback, checkArgs)
		assert(checkWrap(callback, checkArgs))
		return function(...)
			assert(checkArgs(...))
			return callback(...)
		end
	end
end

--[[**
	asserts a given check

	@param check The function to wrap with an assert

	@returns A function that simply wraps the given check in an assert
**--]]
function t.strict(check)
	return function(...)
		assert(check(...))
	end
end

do
	local checkChildren = t.map(t.string, t.callback)

--[[**
		Takes a table where keys are child names and values are functions to check the children against.
		Pass an instance tree into the function.
		If at least one child passes each check, the overall check passes.

		Warning! If you pass in a tree with more than one child of the same name, this function will always return false

		@param checkTable The table to check against

		@returns A function that checks an instance tree
	**--]]
	function t.children(checkTable)
		assert(checkChildren(checkTable))

		return function(value)
			local instanceSuccess = t.Instance(value)
			if not instanceSuccess then
				return false
			end

			local childrenByName = {}
			for _, child in ipairs(value:GetChildren()) do
				local name = child.Name
				if checkTable[name] then
					if childrenByName[name] then
						return false
					end

					childrenByName[name] = child
				end
			end

			for name, check in pairs(checkTable) do
				local success = check(childrenByName[name])
				if not success then
					return false
				end
			end

			return true
		end
	end
end

return { t = t }
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXa7ac3ddcd2b548aeb5793688bc816826">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">types</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Folder" referent="RBXda4e1077793f48c0b1b03677eff5cf89">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">include</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="Folder" referent="RBX4d5b8546fdbb4a078d5c2bb65d6af150">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">generated</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXa5d755f78d914aabadfb8df1614855b3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">@flamework</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Folder" referent="RBX9d2b784c42f84488af99a0fefb878dbd">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">components</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXeaba88033de5479a9b942482576d55f5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">out</string>
								<string name="ScriptGuid">{785900d6-9712-4073-be12-7d4a6f87e869}</string>
								<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local Maid = TS.import(script, TS.getModule(script, "@rbxts", "maid").Maid)
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local CollectionService = _services.CollectionService
local RunService = _services.RunService
local _core = TS.import(script, TS.getModule(script, "@flamework", "core").out)
local Flamework = _core.Flamework
local Reflect = _core.Reflect
-- eslint-disable-next-line @typescript-eslint/no-explicit-any
--[[
	*
	* Register a class as a Component.
]]
local BaseComponent
do
	BaseComponent = setmetatable({}, {
		__tostring = function()
			return "BaseComponent"
		end,
	})
	BaseComponent.__index = BaseComponent
	function BaseComponent.new(...)
		local self = setmetatable({}, BaseComponent)
		return self:constructor(...) or self
	end
	function BaseComponent:constructor()
		self.maid = Maid.new()
		self._attributeChangeHandlers = {}
	end
	function BaseComponent:setInstance(instance, attributes)
		self.instance = instance
		self.attributes = attributes
	end
	function BaseComponent:setAttribute(key, value, postfix)
		local previousValue = self.attributes[key]
		self.attributes[key] = value
		self.instance:SetAttribute(key, value)
		local _result
		if postfix then
			_result = previousValue
		else
			_result = value
		end
		return _result
	end
	function BaseComponent:onAttributeChanged(name, cb)
		local list = self._attributeChangeHandlers[name]
		if not list then
			local __attributeChangeHandlers = self._attributeChangeHandlers
			local _exp = name
			list = {}
			local _list = list
			-- ▼ Map.set ▼
			__attributeChangeHandlers[_exp] = _list
			-- ▲ Map.set ▲
		end
		-- ▼ Array.push ▼
		list[#list + 1] = cb
		-- ▲ Array.push ▲
	end
	function BaseComponent:destroy()
		self.maid:Destroy()
	end
end
--[[
	*
	* This class is responsible for loading and managing
	* all components in the game.
]]
local Components
do
	Components = setmetatable({}, {
		__tostring = function()
			return "Components"
		end,
	})
	Components.__index = Components
	function Components.new(...)
		local self = setmetatable({}, Components)
		return self:constructor(...) or self
	end
	function Components:constructor()
		self.components = {}
		self.activeComponents = {}
		self.reverseComponentsMapping = {}
		self.tick = {}
		self.physics = {}
		self.render = {}
	end
	function Components:onInit()
		local components = {}
		for ctor, identifier in pairs(Reflect.objToId) do
			local component = Reflect.getOwnMetadata(ctor, "flamework:decorators." .. "$c:init@Component")
			if component then
				local _arg1 = {
					ctor = ctor,
					config = component,
					identifier = identifier,
				}
				-- ▼ Map.set ▼
				components[ctor] = _arg1
				-- ▲ Map.set ▲
			end
		end
		self.components = components
	end
	function Components:onStart()
		for _, _binding in pairs(self.components) do
			local config = _binding.config
			local ctor = _binding.ctor
			local identifier = _binding.identifier
			if config.tag ~= nil then
				local instanceGuard = self:getInstanceGuard(ctor)
				local addConnections = {}
				local removeConnections = {}
				local setupRemovedConnection
				local setupAddedConnection = function(instance)
					local connection
					connection = instance.DescendantAdded:Connect(function()
						if instanceGuard(instance) then
							self:addComponent(instance, ctor, true)
							connection:Disconnect()
							-- ▼ Map.delete ▼
							addConnections[instance] = nil
							-- ▲ Map.delete ▲
							setupRemovedConnection(instance)
						end
					end)
					-- ▼ Map.set ▼
					addConnections[instance] = connection
					-- ▲ Map.set ▲
				end
				setupRemovedConnection = function(instance)
					local connection
					connection = instance.DescendantRemoving:Connect(function()
						-- The parent does not change until the next frame, so the guard will
						-- always succeed unless we yield.
						RunService.Heartbeat:Wait()
						if not instanceGuard(instance) then
							self:removeComponent(instance, ctor)
							connection:Disconnect()
							-- ▼ Map.delete ▼
							removeConnections[instance] = nil
							-- ▲ Map.delete ▲
							setupAddedConnection(instance)
						end
					end)
					-- ▼ Map.set ▼
					removeConnections[instance] = connection
					-- ▲ Map.set ▲
				end
				local instanceAdded = function(instance)
					if RunService:IsServer() or not instanceGuard then
						return self:addComponent(instance, ctor)
					end
					if instanceGuard(instance) then
						self:addComponent(instance, ctor, true)
						setupRemovedConnection(instance)
					else
						setupAddedConnection(instance)
					end
				end
				CollectionService:GetInstanceAddedSignal(config.tag):Connect(instanceAdded)
				CollectionService:GetInstanceRemovedSignal(config.tag):Connect(function(instance)
					local addConnection = addConnections[instance]
					local removeConnection = removeConnections[instance]
					-- ▼ Map.delete ▼
					addConnections[instance] = nil
					-- ▲ Map.delete ▲
					-- ▼ Map.delete ▼
					removeConnections[instance] = nil
					-- ▲ Map.delete ▲
					local _result = addConnection
					if _result ~= nil then
						_result:Disconnect()
					end
					local _result_1 = removeConnection
					if _result_1 ~= nil then
						_result_1:Disconnect()
					end
					self:removeComponent(instance, ctor)
				end)
				for _, instance in ipairs(CollectionService:GetTagged(config.tag)) do
					self:safeCall("Failed to instantiate '" .. identifier .. "' for " .. tostring(instance), function()
						return instanceAdded(instance)
					end)
				end
			end
		end
	end
	function Components:onTick(dt)
		for component in pairs(self.tick) do
			local name = component.instance:GetFullName()
			local id = Reflect.getMetadata(component, "identifier")
			self:safeCall("Component '" .. tostring(id) .. "' failed to tick " .. name, function()
				return component:onTick(dt)
			end)
		end
	end
	function Components:onRender(dt)
		for component in pairs(self.render) do
			local name = component.instance:GetFullName()
			local id = Reflect.getMetadata(component, "identifier")
			self:safeCall("Component '" .. tostring(id) .. "' failed to render " .. name, function()
				return component:onRender(dt)
			end)
		end
	end
	function Components:onPhysics(dt, time)
		for component in pairs(self.physics) do
			local name = component.instance:GetFullName()
			local id = Reflect.getMetadata(component, "identifier")
			self:safeCall("Component '" .. tostring(id) .. "' failed to step " .. name, function()
				return component:onPhysics(dt, time)
			end)
		end
	end
	function Components:getAttributeGuards(ctor)
		local attributes = {}
		local metadata = self.components[ctor]
		if metadata then
			if metadata.config.attributes ~= nil then
				for attribute, guard in pairs(metadata.config.attributes) do
					-- ▼ Map.set ▼
					attributes[attribute] = guard
					-- ▲ Map.set ▲
				end
			end
			local parentCtor = getmetatable(ctor)
			if parentCtor.__index ~= nil then
				for attribute, guard in pairs(self:getAttributeGuards(parentCtor.__index)) do
					if not (attributes[attribute] ~= nil) then
						-- ▼ Map.set ▼
						attributes[attribute] = guard
						-- ▲ Map.set ▲
					end
				end
			end
		end
		return attributes
	end
	function Components:getAttributes(instance, componentInfo, guards)
		local attributes = instance:GetAttributes()
		local newAttributes = {}
		local defaults = componentInfo.config.defaults
		for key, guard in pairs(guards) do
			local attribute = attributes[key]
			if not guard(attribute) then
				local _result = defaults
				if _result ~= nil then
					_result = _result[key]
				end
				if _result ~= nil then
					local _arg1 = defaults[key]
					-- ▼ Map.set ▼
					newAttributes[key] = _arg1
					-- ▲ Map.set ▲
				else
					error(instance:GetFullName() .. " has invalid attribute '" .. key .. "' for '" .. componentInfo.identifier .. "'")
				end
			else
				-- ▼ Map.set ▼
				newAttributes[key] = attribute
				-- ▲ Map.set ▲
			end
		end
		return newAttributes
	end
	function Components:getInstanceGuard(ctor)
		local metadata = self.components[ctor]
		if metadata then
			if metadata.config.instanceGuard ~= nil then
				return metadata.config.instanceGuard
			end
			local parentCtor = getmetatable(ctor)
			if parentCtor.__index ~= nil then
				return self:getInstanceGuard(parentCtor.__index)
			end
		end
	end
	function Components:safeCall(message, func)
		task.spawn(function()
			xpcall(func, function(err)
				if type(err) == "string" then
					local stack = debug.traceback(err, 2)
					warn(message)
					warn(stack)
				else
					warn(message)
					warn(err)
					warn(debug.traceback(nil, 2))
				end
			end)
		end)
	end
	function Components:setupComponent(instance, attributes, component, _param)
		local config = _param.config
		local ctor = _param.ctor
		local identifier = _param.identifier
		component:setInstance(instance, attributes)
		if Flamework._implements(component, "$:flamework@OnStart") then
			local name = instance:GetFullName()
			self:safeCall("Component '" .. identifier .. "' failed to start " .. name, function()
				return component:onStart()
			end)
		end
		if Flamework._implements(component, "$:flamework@OnRender") then
			-- ▼ Set.add ▼
			self.render[component] = true
			-- ▲ Set.add ▲
			component.maid:GiveTask(function()
				-- ▼ Set.delete ▼
				local _valueExisted = self.render[component] ~= nil
				self.render[component] = nil
				-- ▲ Set.delete ▲
				return _valueExisted
			end)
		end
		if Flamework._implements(component, "$:flamework@OnPhysics") then
			-- ▼ Set.add ▼
			self.physics[component] = true
			-- ▲ Set.add ▲
			component.maid:GiveTask(function()
				-- ▼ Set.delete ▼
				local _valueExisted = self.physics[component] ~= nil
				self.physics[component] = nil
				-- ▲ Set.delete ▲
				return _valueExisted
			end)
		end
		if Flamework._implements(component, "$:flamework@OnTick") then
			-- ▼ Set.add ▼
			self.tick[component] = true
			-- ▲ Set.add ▲
			component.maid:GiveTask(function()
				-- ▼ Set.delete ▼
				local _valueExisted = self.tick[component] ~= nil
				self.tick[component] = nil
				-- ▲ Set.delete ▲
				return _valueExisted
			end)
		end
		if config.refreshAttributes == nil or config.refreshAttributes then
			local attributes = self:getAttributeGuards(ctor)
			for attribute, guard in pairs(attributes) do
				if type(attribute) == "string" then
					component.maid:GiveTask(instance:GetAttributeChangedSignal(attribute):Connect(function()
						local handlers = component._attributeChangeHandlers[attribute]
						local value = instance:GetAttribute(attribute)
						local attributes = component.attributes
						if guard(value) then
							if handlers then
								for _, handler in ipairs(handlers) do
									self:safeCall("Component '" .. identifier .. "' failed to call onAttributeChanged for " .. attribute, function()
										return handler(value, attributes[attribute])
									end)
								end
							end
							-- ▼ Map.set ▼
							attributes[attribute] = value
							-- ▲ Map.set ▲
						end
					end))
				end
			end
		end
	end
	function Components:getComponentFromSpecifier(componentSpecifier)
		local _result
		if type(componentSpecifier) == "string" then
			_result = (Reflect.idToObj[componentSpecifier])
		else
			_result = componentSpecifier
		end
		return _result
	end
	function Components:getComponent(instance, componentSpecifier)
		local component = self:getComponentFromSpecifier(componentSpecifier)
		local _arg1 = "Could not find component from specifier: " .. tostring(componentSpecifier)
		assert(component ~= 0 and component == component and component ~= "" and component, _arg1)
		local activeComponents = self.activeComponents[instance]
		if not activeComponents then
			return nil
		end
		return activeComponents[component]
	end
	function Components:addComponent(instance, componentSpecifier, skipInstanceCheck)
		local component = self:getComponentFromSpecifier(componentSpecifier)
		local _arg1 = "Could not find component from specifier: " .. tostring(componentSpecifier)
		assert(component ~= 0 and component == component and component ~= "" and component, _arg1)
		local componentInfo = self.components[component]
		assert(componentInfo, "Provided componentSpecifier does not exist")
		local attributeGuards = self:getAttributeGuards(component)
		local attributes = self:getAttributes(instance, componentInfo, attributeGuards)
		if skipInstanceCheck ~= true then
			local instanceGuard = self:getInstanceGuard(component)
			if instanceGuard ~= nil then
				local _arg0 = instanceGuard(instance)
				local _arg1_1 = instance:GetFullName() .. " did not pass instance guard check for '" .. componentInfo.identifier .. "'"
				assert(_arg0, _arg1_1)
			end
		end
		local activeComponents = self.activeComponents[instance]
		if not activeComponents then
			local _activeComponents = self.activeComponents
			activeComponents = {}
			local _activeComponents_1 = activeComponents
			-- ▼ Map.set ▼
			_activeComponents[instance] = _activeComponents_1
			-- ▲ Map.set ▲
		end
		local reverseMapping = self.reverseComponentsMapping[component]
		if not reverseMapping then
			local _reverseComponentsMapping = self.reverseComponentsMapping
			reverseMapping = {}
			local _reverseMapping = reverseMapping
			-- ▼ Map.set ▼
			_reverseComponentsMapping[component] = _reverseMapping
			-- ▲ Map.set ▲
		end
		local existingComponent = activeComponents[component]
		if existingComponent ~= nil then
			return existingComponent
		end
		local componentInstance = Flamework.createDependency(component)
		-- ▼ Map.set ▼
		activeComponents[component] = componentInstance
		-- ▲ Map.set ▲
		-- ▼ Set.add ▼
		reverseMapping[componentInstance] = true
		-- ▲ Set.add ▲
		self:setupComponent(instance, attributes, componentInstance, componentInfo)
		return componentInstance
	end
	function Components:removeComponent(instance, componentSpecifier)
		local component = self:getComponentFromSpecifier(componentSpecifier)
		local _arg1 = "Could not find component from specifier: " .. tostring(componentSpecifier)
		assert(component ~= 0 and component == component and component ~= "" and component, _arg1)
		local activeComponents = self.activeComponents[instance]
		if not activeComponents then
			return nil
		end
		local existingComponent = activeComponents[component]
		if not existingComponent then
			return nil
		end
		local reverseMapping = self.reverseComponentsMapping[component]
		if reverseMapping then
			-- ▼ Set.delete ▼
			reverseMapping[existingComponent] = nil
			-- ▲ Set.delete ▲
		end
		existingComponent:destroy()
		-- ▼ Map.delete ▼
		activeComponents[component] = nil
		-- ▲ Map.delete ▲
		-- ▼ ReadonlyMap.size ▼
		local _size = 0
		for _ in pairs(activeComponents) do
			_size += 1
		end
		-- ▲ ReadonlyMap.size ▲
		if _size == 0 then
			-- ▼ Map.delete ▼
			self.activeComponents[instance] = nil
			-- ▲ Map.delete ▲
		end
	end
	function Components:getAllComponents(componentSpecifier)
		local component = self:getComponentFromSpecifier(componentSpecifier)
		local _arg1 = "Could not find component from specifier: " .. tostring(componentSpecifier)
		assert(component ~= 0 and component == component and component ~= "" and component, _arg1)
		local reverseMapping = self.reverseComponentsMapping[component]
		if not reverseMapping then
			return {}
		end
		local _ptr = {}
		local _length = #_ptr
		for _v in pairs(reverseMapping) do
			_length += 1
			_ptr[_length] = _v
		end
		return _ptr
	end
end
-- (Flamework) Components metadata
Reflect.defineMetadata(Components, "identifier", "$c:init@Components")
Reflect.defineMetadata(Components, "flamework:isExternal", false)
Reflect.defineMetadata(Components, "flamework:implements", { "$:flamework@OnInit", "$:flamework@OnStart", "$:flamework@OnTick", "$:flamework@OnPhysics", "$:flamework@OnRender" })
Reflect.defineMetadata(Components, "flamework:decorators", { "$:flamework@Service", "$:flamework@Controller" })
Reflect.defineMetadata(Components, "flamework:decorators.$:flamework@Service", {
	type = "Service",
	loadOrder = 0,
})
Reflect.defineMetadata(Components, "flamework:decorators.$:flamework@Controller", {
	type = "Controller",
	loadOrder = 0,
})
return {
	BaseComponent = BaseComponent,
	Components = Components,
}
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX6791baf1b0764c39a5c3fe25a25da426">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">core</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX8d9ba99377e94ad08dae14376315f9f9">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">out</string>
								<string name="ScriptGuid">{6a243f00-9f73-4680-ba74-2b025dd1c6b3}</string>
								<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local exports = {}
exports.Reflect = TS.import(script, script, "reflect").Reflect
local _flamework = TS.import(script, script, "flamework")
exports.Controller = _flamework.Controller
exports.Dependency = _flamework.Dependency
exports.External = _flamework.External
exports.Service = _flamework.Service
exports.Flamework = _flamework.Flamework
return exports
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="ModuleScript" referent="RBX5b290f43fc964c87b6a7bbf42c183f30">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">flamework</string>
									<string name="ScriptGuid">{306fad9d-24f4-4c00-9fc9-bc90406af323}</string>
									<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local Players = _services.Players
local RunService = _services.RunService
local Reflect = TS.import(script, script.Parent, "reflect").Reflect
local Flamework
local Flamework = {}
do
	local _container = Flamework
	local flameworkConfig = {
		isDefault = true,
	}
	_container.flameworkConfig = flameworkConfig
	_container.isInitialized = false
	local resolvedDependencies = {}
	local loadingList = {}
	-- * @hidden
	local resolveDependency
	local function createDependency(ctor)
		if table.find(loadingList, ctor) ~= nil then
			-- ▼ ReadonlyArray.join ▼
			local _arg0 = " <=> "
			if _arg0 == nil then
				_arg0 = ", "
			end
			local _result = table.create(#loadingList)
			for _k, _v in ipairs(loadingList) do
				_result[_k] = tostring(_v)
			end
			-- ▲ ReadonlyArray.join ▲
			error("Circular dependency detected " .. table.concat(_result, _arg0) .. " <=> " .. tostring(ctor))
		end
		-- ▼ Array.push ▼
		loadingList[#loadingList + 1] = ctor
		-- ▲ Array.push ▲
		local dependencies = Reflect.getMetadata(ctor, "flamework:dependencies")
		local constructorDependencies = {}
		if dependencies then
			for index, dependencyId in pairs(dependencies) do
				local dependency = resolveDependency(dependencyId)
				constructorDependencies[index - 1 + 1] = dependency
			end
		end
		local dependency = ctor.new(unpack(constructorDependencies))
		-- ▼ Array.pop ▼
		loadingList[#loadingList] = nil
		-- ▲ Array.pop ▲
		return dependency
	end
	_container.createDependency = createDependency
	-- * @hidden
	local isConstructor
	function resolveDependency(id)
		local resolvedDependency = resolvedDependencies[id]
		if resolvedDependency ~= nil then
			return resolvedDependency
		end
		local ctor = Reflect.idToObj[id]
		if ctor == nil then
			error("Dependency " .. id .. " could not be found.")
		end
		local _arg0 = isConstructor(ctor)
		assert(_arg0)
		local dependency = createDependency(ctor)
		-- ▼ Map.set ▼
		resolvedDependencies[id] = dependency
		-- ▲ Map.set ▲
		return dependency
	end
	_container.resolveDependency = resolveDependency
	-- * @hidden
	local function _addPaths(...)
		local args = { ... }
		local preloadPaths = {}
		for _, arg in ipairs(args) do
			local service = table.remove(arg, 1)
			local currentPath = game:GetService(service)
			if service == "StarterPlayer" then
				if arg[1] ~= "StarterPlayerScripts" then
					error("StarterPlayer only supports StarterPlayerScripts")
				end
				if not RunService:IsClient() then
					error("The server cannot load StarterPlayer content")
				end
				currentPath = Players.LocalPlayer:WaitForChild("PlayerScripts")
				table.remove(arg, 1)
			end
			do
				local i = 0
				local _shouldIncrement = false
				while true do
					if _shouldIncrement then
						i += 1
					else
						_shouldIncrement = true
					end
					if not (i < #arg) then
						break
					end
					currentPath = currentPath:WaitForChild(arg[i + 1])
				end
			end
			local _currentPath = currentPath
			-- ▼ Array.push ▼
			preloadPaths[#preloadPaths + 1] = _currentPath
			-- ▲ Array.push ▲
		end
		local preload = function(moduleScript)
			local start = os.clock()
			local _success, _valueOrError = pcall(require, moduleScript)
			local result = _success and {
				success = true,
				value = _valueOrError,
			} or {
				success = false,
				error = _valueOrError,
			}
			local endTime = math.floor((os.clock() - start) * 1000)
			if not result.success then
				error(moduleScript:GetFullName() .. " failed to preload (" .. tostring(endTime) .. "ms): " .. result.error)
			end
			print("Preloaded " .. moduleScript:GetFullName() .. " (" .. tostring(endTime) .. "ms)")
		end
		for _, path in ipairs(preloadPaths) do
			if path:IsA("ModuleScript") then
				preload(path)
			end
			for _, instance in ipairs(path:GetDescendants()) do
				if instance:IsA("ModuleScript") then
					preload(instance)
				end
			end
		end
	end
	_container._addPaths = _addPaths
	-- * @hidden
	local function _implements(object, id)
		local _exp = Reflect.getMetadatas(object, "flamework:implements")
		local _arg0 = function(impl)
			return table.find(impl, id) ~= nil
		end
		-- ▼ ReadonlyArray.some ▼
		local _result = false
		for _k, _v in ipairs(_exp) do
			if _arg0(_v, _k - 1, _exp) then
				_result = true
				break
			end
		end
		-- ▲ ReadonlyArray.some ▲
		return _result
	end
	_container._implements = _implements
	function isConstructor(obj)
		return obj.new ~= nil and obj.constructor ~= nil
	end
	local function getDecorator(ctor, configType)
		local decorators = Reflect.getMetadatas(ctor, "flamework:decorators")
		if not decorators then
			return nil
		end
		for _, decoratorIds in ipairs(decorators) do
			for _, decoratorId in ipairs(decoratorIds) do
				local config = Reflect.getMetadata(ctor, "flamework:decorators." .. decoratorId)
				local _result = config
				if _result ~= nil then
					_result = _result.type
				end
				if _result == configType then
					return config
				end
			end
		end
	end
	local externalClasses = {}
	--[[
		*
		* Allow an external module to be bootstrapped by Flamework.ignite()
	]]
	local function registerExternalClass(ctor)
		-- ▼ Set.add ▼
		externalClasses[ctor] = true
		-- ▲ Set.add ▲
	end
	_container.registerExternalClass = registerExternalClass
	local hasFlameworkIgnited = false
	--[[
		*
		* Initialize Flamework.
		*
		* This will start up the lifecycle events on all currently registered
		* classes.
		*
		* You should preload all necessary directories before calling this
		* as newly registered classes will not run their lifecycle events.
		*
		* @returns All the dependencies that have been loaded.
	]]
	local function ignite(patchedConfig)
		if hasFlameworkIgnited then
			error("Flamework.ignite() should only be called once")
		end
		hasFlameworkIgnited = true
		if patchedConfig then
			for key, value in pairs(patchedConfig) do
				flameworkConfig[key] = value
			end
		end
		for ctor, identifier in pairs(Reflect.objToId) do
			if not isConstructor(ctor) then
				continue
			end
			local isPatched = Reflect.getOwnMetadata(ctor, "flamework:isPatched")
			if flameworkConfig.loadOverride and not (table.find(flameworkConfig.loadOverride, ctor) ~= nil) then
				if not isPatched then
					continue
				end
			end
			resolveDependency(identifier)
		end
		local dependencies = {}
		local decoratorType = RunService:IsServer() and "Service" or "Controller"
		for id in pairs(resolvedDependencies) do
			local ctor = Reflect.idToObj[id]
			if ctor == nil then
				error("Could not find constructor for " .. id)
			end
			local decorator = getDecorator(ctor, decoratorType)
			if not decorator then
				continue
			end
			local isExternal = Reflect.getOwnMetadata(ctor, "flamework:isExternal")
			if isExternal and not (externalClasses[ctor] ~= nil) then
				continue
			end
			local dependency = resolveDependency(id)
			local _arg0 = { dependency, decorator }
			-- ▼ Array.push ▼
			dependencies[#dependencies + 1] = _arg0
			-- ▲ Array.push ▲
		end
		local start = {}
		local init = {}
		local tick = {}
		local render = {}
		local physics = {}
		local _arg0 = function(_param, _param_1)
			local a = _param[2]
			local b = _param_1[2]
			local _condition = a.loadOrder
			if _condition == nil then
				_condition = 1
			end
			local _condition_1 = b.loadOrder
			if _condition_1 == nil then
				_condition_1 = 1
			end
			return _condition < _condition_1
		end
		-- ▼ Array.sort ▼
		table.sort(dependencies, _arg0)
		-- ▲ Array.sort ▲
		for _, _binding in ipairs(dependencies) do
			local dependency = _binding[1]
			if Flamework._implements(dependency, "$:flamework@OnInit") then
				-- ▼ Array.push ▼
				init[#init + 1] = dependency
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:flamework@OnStart") then
				-- ▼ Array.push ▼
				start[#start + 1] = dependency
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:flamework@OnTick") then
				-- ▼ Array.push ▼
				tick[#tick + 1] = dependency
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:flamework@OnPhysics") then
				-- ▼ Array.push ▼
				physics[#physics + 1] = dependency
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:flamework@OnRender") then
				-- ▼ Array.push ▼
				render[#render + 1] = dependency
				-- ▲ Array.push ▲
			end
		end
		for _, dependency in ipairs(init) do
			local initResult = dependency:onInit()
			if TS.Promise.is(initResult) then
				initResult:await()
			end
		end
		_container.isInitialized = true
		RunService.Heartbeat:Connect(function(dt)
			for _, dependency in ipairs(tick) do
				task.spawn(function()
					return dependency:onTick(dt)
				end)
			end
		end)
		RunService.Stepped:Connect(function(time, dt)
			for _, dependency in ipairs(physics) do
				task.spawn(function()
					return dependency:onPhysics(dt, time)
				end)
			end
		end)
		if RunService:IsClient() then
			RunService.RenderStepped:Connect(function(dt)
				for _, dependency in ipairs(render) do
					task.spawn(function()
						return dependency:onRender(dt)
					end)
				end
			end)
		end
		for _, dependency in ipairs(start) do
			task.spawn(function()
				return dependency:onStart()
			end)
		end
		return dependencies
	end
	_container.ignite = ignite
	--[[
		*
		* Preload the specified paths by requiring all ModuleScript descendants.
	]]
	--[[
		*
		* Retrieve the identifier for the specified type.
	]]
	--[[
		*
		* Check if object implements the specified interface.
	]]
	--[[
		*
		* Creates a type guard from any arbitrary type.
	]]
	--[[
		*
		* Hash a function using the method used internally by Flamework.
		* If a context is provided, then Flamework will create a new hash
		* if the specified string does not have one in that context.
		* @param str The string to hash
		* @param context A scope for the hash
	]]
	--[[
		*
		* Utility for use in test suites, not recommended for anything else.
	]]
	local Testing = {}
	do
		local _container_1 = Testing
		local function patchDependency(patchedClass, id)
			if id == nil then
				error("Patching failed, no ID")
			end
			if resolvedDependencies[id] ~= nil then
				error(id .. " has already been resolved, continuing is unsafe")
			end
			local idCtor = Reflect.idToObj[id]
			if idCtor == nil then
				error("Dependency " .. id .. " was not found and cannot be patched.")
			end
			local objMetadata = Reflect.metadata[idCtor]
			if not objMetadata then
				error("Dependency " .. id .. " has no existing metadata.")
			end
			Reflect.defineMetadata(idCtor, "flamework:isPatched", true)
			-- ▼ Map.delete ▼
			Reflect.metadata[idCtor] = nil
			-- ▲ Map.delete ▲
			-- ▼ Map.set ▼
			Reflect.metadata[patchedClass] = objMetadata
			-- ▲ Map.set ▲
			-- ▼ Map.set ▼
			Reflect.objToId[patchedClass] = id
			-- ▲ Map.set ▲
			-- ▼ Map.set ▼
			Reflect.idToObj[id] = patchedClass
			-- ▲ Map.set ▲
		end
		_container_1.patchDependency = patchDependency
	end
	_container.Testing = Testing
end
-- eslint-disable-next-line @typescript-eslint/no-explicit-any
--[[
	*
	* Register a class as a Service.
	*
	* @server
]]
--[[
	*
	* Register a class as a Controller.
	*
	* @client
]]
--[[
	*
	* Marks this class as an external class.
	*
	* External classes are designed for packages and won't be
	* bootstrapped unless explicitly specified. Excluding this
	* inside of a package will make the class load as long as
	* it has been loaded.
]]
--[[
	*
	* Hook into the OnInit lifecycle event.
]]
--[[
	*
	* Hook into the OnStart lifecycle event.
]]
--[[
	*
	* Hook into the OnTick lifecycle event.
	* Equivalent to: RunService.Heartbeat
]]
--[[
	*
	* Hook into the OnPhysics lifecycle event.
	* Equivalent to: RunService.Stepped
]]
--[[
	*
	* Hook into the OnRender lifecycle event.
	* Equivalent to: RunService.RenderStepped
	*
	* @client
]]
return {
	Flamework = Flamework,
}
]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX0a2d9c626eb54b718db28bf745a2cdcb">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">reflect</string>
									<string name="ScriptGuid">{25d00eb4-9a64-419d-a7f3-d0148f91b0d8}</string>
									<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
--[[
	*
	* Reflection/metadata API
]]
local Reflect = {}
do
	local _container = Reflect
	-- object -> property -> key -> value
	local metadata = setmetatable({}, {
		__mode = "k",
	})
	_container.metadata = metadata
	local idToObj = {}
	_container.idToObj = idToObj
	local objToId = {}
	_container.objToId = objToId
	local NO_PROP_MARKER = {}
	local function getObjMetadata(obj, prop, create)
		local _condition = prop
		if _condition == nil then
			_condition = NO_PROP_MARKER
		end
		local realProp = _condition
		if create then
			local objMetadata = metadata[obj]
			if not objMetadata then
				objMetadata = {}
				local _objMetadata = objMetadata
				-- ▼ Map.set ▼
				metadata[obj] = _objMetadata
				-- ▲ Map.set ▲
			end
			local propMetadata = objMetadata[realProp]
			if not propMetadata then
				local _objMetadata = objMetadata
				propMetadata = {}
				local _propMetadata = propMetadata
				-- ▼ Map.set ▼
				_objMetadata[realProp] = _propMetadata
				-- ▲ Map.set ▲
			end
			return propMetadata
		else
			local _result = metadata[obj]
			if _result ~= nil then
				_result = _result[realProp]
			end
			return _result
		end
	end
	local function getParentConstructor(obj)
		local metatable = getmetatable(obj)
		if metatable and type(metatable) == "table" then
			return rawget(metatable, "__index")
		end
	end
	--[[
		*
		* Apply metadata onto this object.
	]]
	local function defineMetadata(obj, key, value, property)
		-- 'identifier' is a special, unique ID across all metadata classes.
		if key == "identifier" then
			local _arg0 = type(value) == "string"
			assert(_arg0, "identifier must be a string.")
			local _arg0_1 = not (objToId[obj] ~= nil)
			assert(_arg0_1, "obj is already registered.")
			local _arg0_2 = not (idToObj[value] ~= nil)
			assert(_arg0_2, "id is already registered.")
			-- ▼ Map.set ▼
			objToId[obj] = value
			-- ▲ Map.set ▲
			-- ▼ Map.set ▼
			idToObj[value] = obj
			-- ▲ Map.set ▲
		end
		local metadata = getObjMetadata(obj, property, true)
		-- ▼ Map.set ▼
		metadata[key] = value
		-- ▲ Map.set ▲
	end
	_container.defineMetadata = defineMetadata
	--[[
		*
		* Apply metadata in batch onto this object.
	]]
	local function defineMetadataBatch(obj, list, property)
		local metadata = getObjMetadata(obj, property, true)
		for key, value in pairs(list) do
			-- ▼ Map.set ▼
			metadata[key] = value
			-- ▲ Map.set ▲
		end
	end
	_container.defineMetadataBatch = defineMetadataBatch
	--[[
		*
		* Delete metadata from this object.
	]]
	local function deleteMetadata(obj, key, property)
		local metadata = getObjMetadata(obj, property)
		local _result = metadata
		if _result ~= nil then
			-- ▼ Map.delete ▼
			_result[key] = nil
			-- ▲ Map.delete ▲
		end
	end
	_container.deleteMetadata = deleteMetadata
	--[[
		*
		* Get metadata from this object.
		* Type parameter is an assertion.
	]]
	local function getOwnMetadata(obj, key, property)
		local metadata = getObjMetadata(obj, property)
		local _result = metadata
		if _result ~= nil then
			_result = _result[key]
		end
		return _result
	end
	_container.getOwnMetadata = getOwnMetadata
	--[[
		*
		* Check if this object has the specified metadata key.
	]]
	local function hasOwnMetadata(obj, key, property)
		local metadata = getObjMetadata(obj, property)
		local _result = metadata
		if _result ~= nil then
			_result = _result[key] ~= nil
		end
		local _condition = _result
		if _condition == nil then
			_condition = false
		end
		return _condition
	end
	_container.hasOwnMetadata = hasOwnMetadata
	--[[
		*
		* Retrieve all metadata keys for this object.
	]]
	local function getOwnMetadataKeys(obj, property)
		local metadata = getObjMetadata(obj, property)
		local keys = {}
		local _result = metadata
		if _result ~= nil then
			local _arg0 = function(_, key)
				-- ▼ Array.push ▼
				local _length = #keys
				keys[_length + 1] = key
				-- ▲ Array.push ▲
				return _length + 1
			end
			-- ▼ ReadonlyMap.forEach ▼
			for _k, _v in pairs(_result) do
				_arg0(_v, _k, _result)
			end
			-- ▲ ReadonlyMap.forEach ▲
		end
		return keys
	end
	_container.getOwnMetadataKeys = getOwnMetadataKeys
	--[[
		*
		* Retrieve all values for the specified key from the object and its parents.
		* Type parameter is an assertion.
	]]
	local function getMetadatas(obj, key, property)
		local values = {}
		local value = getOwnMetadata(obj, key, property)
		if value ~= nil then
			-- ▼ Array.push ▼
			values[#values + 1] = value
			-- ▲ Array.push ▲
		end
		local parent = getParentConstructor(obj)
		if parent then
			local _exp = getMetadatas(parent, key, property)
			local _arg0 = function(value)
				-- ▼ Array.push ▼
				local _length = #values
				values[_length + 1] = value
				-- ▲ Array.push ▲
				return _length + 1
			end
			-- ▼ ReadonlyArray.forEach ▼
			for _k, _v in ipairs(_exp) do
				_arg0(_v, _k - 1, _exp)
			end
			-- ▲ ReadonlyArray.forEach ▲
		end
		return values
	end
	_container.getMetadatas = getMetadatas
	--[[
		*
		* Get metadata from this object or its parents.
		* Type parameter is an assertion.
	]]
	local function getMetadata(obj, key, property)
		local value = getOwnMetadata(obj, key, property)
		if value ~= nil then
			return value
		end
		local parent = getParentConstructor(obj)
		if parent then
			return getMetadata(parent, key, property)
		end
	end
	_container.getMetadata = getMetadata
	--[[
		*
		* Check if this object or any of its parents has the specified metadata key.
	]]
	local function hasMetadata(obj, key, property)
		local value = hasOwnMetadata(obj, key, property)
		if value then
			return value
		end
		local parent = getParentConstructor(obj)
		if parent then
			return hasMetadata(parent, key, property)
		end
		return false
	end
	_container.hasMetadata = hasMetadata
	--[[
		*
		* Retrieve all metadata keys for this object and its parents.
	]]
	local function getMetadataKeys(obj, property)
		local _set = {}
		for _, _v in ipairs(getOwnMetadataKeys(obj, property)) do
			_set[_v] = true
		end
		local keys = _set
		local parent = getParentConstructor(obj)
		if parent then
			local _exp = getMetadataKeys(parent, property)
			local _arg0 = function(key)
				-- ▼ Set.add ▼
				keys[key] = true
				-- ▲ Set.add ▲
				return keys
			end
			-- ▼ ReadonlyArray.forEach ▼
			for _k, _v in ipairs(_exp) do
				_arg0(_v, _k - 1, _exp)
			end
			-- ▲ ReadonlyArray.forEach ▲
		end
		local _ptr = {}
		local _length = #_ptr
		for _v in pairs(keys) do
			_length += 1
			_ptr[_length] = _v
		end
		return _ptr
	end
	_container.getMetadataKeys = getMetadataKeys
end
return {
	Reflect = Reflect,
}
]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXbde39828c6af4ba2b695af6d31525976">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">networking</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX1eab6d3b56e7404b96c5e8c0199982d1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">out</string>
								<string name="ScriptGuid">{53bc8cd4-799d-4b5e-9161-41fbb83161cb}</string>
								<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local NetworkingSkip = TS.import(script, script, "middleware", "skip").Skip
local registerHandler = TS.import(script, script, "handlers").registerNetworkHandler
local NetworkingFunctionError = TS.import(script, script, "functions", "errors").NetworkingFunctionError
local Networking = {}
do
	local _container = Networking
	--[[
		*
		* Creates a new event based off the supplied types.
		* @param serverMiddleware Middleware for server events
		* @param clientMiddleware Middleware for client events
	]]
	--[[
		*
		* Creates a new function event based off the supplied types.
		* @param serverMiddleware Middleware for server events
		* @param clientMiddleware Middleware for client events
	]]
	--[[
		*
		* Connects to a global network event.
	]]
	local registerNetworkHandler = registerHandler
	_container.registerNetworkHandler = registerNetworkHandler
	--[[
		*
		* Stops networking function middleware.
	]]
	local Skip = NetworkingSkip
	_container.Skip = Skip
	--[[
		*
		* A function that generates middleware.
		* @hidden
		* @deprecated Use {@link EventMiddleware} or {@link FunctionMiddleware}
	]]
	--[[
		*
		* A function that generates an event middleware.
	]]
	--[[
		*
		* A function that generates an event middleware.
	]]
end
return {
	Networking = Networking,
	NetworkingFunctionError = NetworkingFunctionError,
}
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Folder" referent="RBX3cea1976d7f349a1a7f5c9273d2f15f4">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">events</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
								<Item class="ModuleScript" referent="RBX463d707cdfae4a2a8e9392d5ca8b029b">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">createClientHandler</string>
										<string name="ScriptGuid">{6e00c3b4-d5ad-4912-95e1-8f80d4027d9a}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
local fireNetworkHandler = TS.import(script, script.Parent.Parent, "handlers").fireNetworkHandler
local createMiddlewareProcessor = TS.import(script, script.Parent.Parent, "middleware", "createMiddlewareProcessor").createMiddlewareProcessor
local createClientMethod
local function createClientHandler(remotes, networkInfos, serverEvents, clientEvents, middlewareFactoryList)
	local handler = {}
	local bindables = {}
	local processors = {}
	for name in pairs(clientEvents) do
		local bindable = Instance.new("BindableEvent")
		-- ▼ Map.set ▼
		bindables[name] = bindable
		-- ▲ Map.set ▲
	end
	for name, remote in pairs(remotes) do
		local networkInfo = networkInfos[name]
		local _result = middlewareFactoryList
		if _result ~= nil then
			_result = _result[name]
		end
		local middlewareProcessor = createMiddlewareProcessor(_result, networkInfo, function(_, ...)
			local args = { ... }
			local _result_1 = bindables[name]
			if _result_1 ~= nil then
				_result_1:Fire(unpack(args))
			end
		end)
		-- ▼ Map.set ▼
		processors[name] = middlewareProcessor
		-- ▲ Map.set ▲
		remote.OnClientEvent:Connect(function(...)
			local args = { ... }
			local guards = clientEvents[name]
			if not guards then
				return nil
			end
			do
				local i = 0
				local _shouldIncrement = false
				while true do
					if _shouldIncrement then
						i += 1
					else
						_shouldIncrement = true
					end
					if not (i < #guards) then
						break
					end
					local guard = guards[i + 1]
					if not guard(args[i + 1]) then
						fireNetworkHandler("onBadRequest", Players.LocalPlayer, networkInfo, i)
						return nil
					end
				end
			end
			middlewareProcessor(nil, unpack(args))
		end)
	end
	for name, remote in pairs(remotes) do
		local _result = clientEvents[remote.Name]
		if _result ~= nil then
			_result = #_result
		end
		local _condition = _result
		if _condition == nil then
			_condition = 0
		end
		local _name = remote.Name
		local _exp = bindables[_name]
		local _name_1 = remote.Name
		handler[name] = createClientMethod(remote, _condition, _exp, processors[_name_1])
	end
	return handler
end
function createClientMethod(remote, paramCount, bindable, process)
	local method = {
		fire = function(self, ...)
			local args = { ... }
			remote:FireServer(unpack(args))
		end,
		connect = function(self, callback, customGuards)
			local _arg1 = "Event " .. remote.Name .. " is not registered as a receiver."
			assert(bindable, _arg1)
			return bindable.Event:Connect(function(...)
				local args = { ... }
				if customGuards then
					do
						local i = 0
						local _shouldIncrement = false
						while true do
							if _shouldIncrement then
								i += 1
							else
								_shouldIncrement = true
							end
							if not (i < paramCount) then
								break
							end
							local guard = customGuards[i + 1]
							if guard ~= nil and not guard(args[i + 1]) then
								return nil
							end
						end
					end
				end
				return callback(unpack(args))
			end)
		end,
		predict = function(self, ...)
			local args = { ... }
			local _arg1 = "Event " .. remote.Name .. " does not have a middleware processor."
			assert(process, _arg1)
			process(nil, unpack(args))
		end,
	}
	setmetatable(method, {
		__call = function(method, ...)
			local args = { ... }
			method:fire(unpack(args))
		end,
	})
	return method
end
return {
	createClientHandler = createClientHandler,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="ModuleScript" referent="RBX31be8a80500d4de1b6b75c573d1de3d0">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">createNetworkingEvent</string>
										<string name="ScriptGuid">{0a7702f5-7af2-4c96-afdc-da68f38f6e03}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local Object = TS.import(script, TS.getModule(script, "@rbxts", "object-utils"))
local RunService = TS.import(script, TS.getModule(script, "@rbxts", "services")).RunService
local populateInstanceMap = TS.import(script, script.Parent.Parent, "util", "populateInstanceMap").populateInstanceMap
local createClientHandler = TS.import(script, script.Parent, "createClientHandler").createClientHandler
local createServerHandler = TS.import(script, script.Parent, "createServerHandler").createServerHandler
local function createNetworkingEvent(globalName, serverEvents, clientEvents, serverMiddleware, clientMiddleware)
	local networkInfos = {}
	local remotes = {}
	populateInstanceMap("RemoteEvent", "events-" .. globalName, Object.keys(serverEvents), remotes)
	populateInstanceMap("RemoteEvent", "events-" .. globalName, Object.keys(clientEvents), remotes)
	for name in pairs(remotes) do
		local _arg1 = {
			eventType = "Event",
			globalName = globalName,
			name = name,
		}
		-- ▼ Map.set ▼
		networkInfos[name] = _arg1
		-- ▲ Map.set ▲
	end
	if RunService:IsServer() then
		return {
			server = createServerHandler(remotes, networkInfos, serverEvents, clientEvents, serverMiddleware),
			client = nil,
		}
	else
		return {
			server = nil,
			client = createClientHandler(remotes, networkInfos, serverEvents, clientEvents, clientMiddleware),
		}
	end
end
return {
	createNetworkingEvent = createNetworkingEvent,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="ModuleScript" referent="RBXdfc88bc152e44077b9762a315bf74f23">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">createServerHandler</string>
										<string name="ScriptGuid">{2a4da854-4fd4-4ff8-8166-a77ec19f4fbe}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
local fireNetworkHandler = TS.import(script, script.Parent.Parent, "handlers").fireNetworkHandler
local createMiddlewareProcessor = TS.import(script, script.Parent.Parent, "middleware", "createMiddlewareProcessor").createMiddlewareProcessor
local createServerMethod
local function createServerHandler(remotes, networkInfos, serverEvents, clientEvents, middlewareFactoryList)
	local handler = {}
	local bindables = {}
	for name in pairs(serverEvents) do
		local bindable = Instance.new("BindableEvent")
		-- ▼ Map.set ▼
		bindables[name] = bindable
		-- ▲ Map.set ▲
	end
	for name, remote in pairs(remotes) do
		local networkInfo = networkInfos[name]
		local _result = middlewareFactoryList
		if _result ~= nil then
			_result = _result[name]
		end
		local middlewareProcessor = createMiddlewareProcessor(_result, networkInfo, function(player, ...)
			local args = { ... }
			local _result_1 = bindables[name]
			if _result_1 ~= nil then
				_result_1:Fire(player, unpack(args))
			end
		end)
		remote.OnServerEvent:Connect(function(player, ...)
			local args = { ... }
			local guards = serverEvents[name]
			if not guards then
				return nil
			end
			do
				local i = 0
				local _shouldIncrement = false
				while true do
					if _shouldIncrement then
						i += 1
					else
						_shouldIncrement = true
					end
					if not (i < #guards) then
						break
					end
					local guard = guards[i + 1]
					if not guard(args[i + 1]) then
						fireNetworkHandler("onBadRequest", player, networkInfo, i)
						return nil
					end
				end
			end
			middlewareProcessor(player, unpack(args))
		end)
	end
	for name, remote in pairs(remotes) do
		local _result = serverEvents[name]
		if _result ~= nil then
			_result = #_result
		end
		local _condition = _result
		if _condition == nil then
			_condition = 0
		end
		handler[name] = createServerMethod(remote, _condition, bindables[name])
	end
	return handler
end
function createServerMethod(remote, paramCount, bindable)
	local method = {
		fire = function(self, players, ...)
			local args = { ... }
			if typeof(players) == "Instance" then
				remote:FireClient(players, unpack(args))
			else
				for _, player in ipairs(players) do
					remote:FireClient(player, unpack(args))
				end
			end
		end,
		broadcast = function(self, ...)
			local args = { ... }
			remote:FireAllClients(unpack(args))
		end,
		except = function(self, players, ...)
			local args = { ... }
			if typeof(players) == "Instance" then
				players = { players }
			end
			for _, player in ipairs(Players:GetPlayers()) do
				if not (table.find(players, player) ~= nil) then
					self:fire(player, unpack(args))
				end
			end
		end,
		connect = function(self, callback, customGuards)
			local _arg1 = "Event " .. remote.Name .. " is not registered as a receiver."
			assert(bindable, _arg1)
			return bindable.Event:Connect(function(player, ...)
				local args = { ... }
				if customGuards then
					do
						local i = 0
						local _shouldIncrement = false
						while true do
							if _shouldIncrement then
								i += 1
							else
								_shouldIncrement = true
							end
							if not (i < paramCount) then
								break
							end
							local guard = customGuards[i + 1]
							if guard ~= nil and not guard(args[i + 1]) then
								return nil
							end
						end
					end
				end
				return callback(player, unpack(args))
			end)
		end,
	}
	setmetatable(method, {
		__call = function(method, player, ...)
			local args = { ... }
			method:fire(player, unpack(args))
		end,
	})
	return method
end
return {
	createServerHandler = createServerHandler,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="Folder" referent="RBXf79f66a2922541aaab30b92afff099b0">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">functions</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
								<Item class="ModuleScript" referent="RBX47b120f152554ce2b227e2bb5c9bfb4e">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">createClientHandler</string>
										<string name="ScriptGuid">{6aaa9fee-24f1-4714-9c53-6e0b01cfece9}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local _errors = TS.import(script, script.Parent, "errors")
local getFunctionError = _errors.getFunctionError
local NetworkingFunctionError = _errors.NetworkingFunctionError
local createMiddlewareProcessor = TS.import(script, script.Parent.Parent, "middleware", "createMiddlewareProcessor").createMiddlewareProcessor
local Skip = TS.import(script, script.Parent.Parent, "middleware", "skip").Skip
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
local fireNetworkHandler = TS.import(script, script.Parent.Parent, "handlers").fireNetworkHandler
local createClientMethod
local function createClientHandler(serverRemotes, clientRemotes, networkInfos, serverEvents, clientEvents, middlewareFactoryList)
	local handler = {}
	local processors = {}
	local requestInfo = {
		nextId = 0,
		requests = {},
	}
	local function createMethod(name, networkInfo, remote)
		if handler[name] ~= nil then
			return nil
		end
		local _condition = serverEvents[name]
		if _condition == nil then
			_condition = clientEvents[name]
		end
		local _exp = _condition[2]
		local _result = middlewareFactoryList
		if _result ~= nil then
			_result = _result[name]
		end
		local _condition_1 = _result
		if _condition_1 == nil then
			_condition_1 = {}
		end
		handler[name] = createClientMethod(_exp, _condition_1, processors, networkInfo, requestInfo, name, remote)
	end
	for alias, remote in pairs(serverRemotes) do
		local name = string.sub(alias, 3)
		local networkInfo = networkInfos[name]
		createMethod(name, networkInfo, remote)
		remote.OnClientEvent:Connect(function(id, processResult, result)
			if not (type(id) == "number") then
				return nil
			end
			local request = requestInfo.requests[id]
			-- ▼ Map.delete ▼
			requestInfo.requests[id] = nil
			-- ▲ Map.delete ▲
			if request then
				request(result, getFunctionError(processResult))
			end
		end)
	end
	for alias, remote in pairs(clientRemotes) do
		-- invoke callback
		local name = string.sub(alias, 3)
		local networkInfo = networkInfos[name]
		createMethod(name, networkInfo, remote)
		remote.OnClientEvent:Connect(function(id, ...)
			local args = { ... }
			local guards = clientEvents[name]
			if not guards then
				return nil
			end
			do
				local i = 0
				local _shouldIncrement = false
				while true do
					if _shouldIncrement then
						i += 1
					else
						_shouldIncrement = true
					end
					if not (i < #guards[1]) then
						break
					end
					local guard = guards[1][i + 1]
					if not guard(args[i + 1]) then
						fireNetworkHandler("onBadRequest", Players.LocalPlayer, networkInfo, i)
						return remote:FireServer(id, NetworkingFunctionError.BadRequest)
					end
				end
			end
			local processor = processors[name]
			if processor then
				local result = processor(nil, unpack(args))
				remote:FireServer(id, result == Skip and NetworkingFunctionError.Cancelled or true, result)
			else
				remote:FireServer(id, false)
			end
		end)
	end
	return handler
end
local timeout
function createClientMethod(guard, middleware, processors, networkInfo, requestInfo, name, remote)
	local method = {
		invoke = function(self, ...)
			local args = { ... }
			return TS.Promise.race({ timeout(10, NetworkingFunctionError.Timeout), TS.Promise.new(function(resolve, reject, onCancel)
				local _original = requestInfo.nextId
				requestInfo.nextId += 1
				local id = _original
				local _requests = requestInfo.requests
				local _arg1 = function(value, rejection)
					if rejection then
						return reject(rejection)
					end
					if not guard(value) then
						fireNetworkHandler("onBadResponse", Players.LocalPlayer, networkInfo)
						return reject(NetworkingFunctionError.InvalidResult)
					end
					resolve(value)
				end
				-- ▼ Map.set ▼
				_requests[id] = _arg1
				-- ▲ Map.set ▲
				onCancel(function()
					-- ▼ Map.delete ▼
					requestInfo.requests[id] = nil
					-- ▲ Map.delete ▲
				end)
				remote:FireServer(id, unpack(args))
			end) })
		end,
		setCallback = function(self, callback)
			if processors[name] ~= nil then
				warn("Function.setCallback was called multiple times for " .. name)
			end
			local processor = createMiddlewareProcessor(middleware, networkInfo, function(_, ...)
				local args = { ... }
				return callback(unpack(args))
			end)
			-- ▼ Map.set ▼
			processors[name] = processor
			-- ▲ Map.set ▲
		end,
		predict = function(self, ...)
			local args = { ... }
			return TS.Promise.new(function(resolve, reject)
				local processor = processors[name]
				if not processor then
					return reject(NetworkingFunctionError.Unprocessed)
				end
				resolve(processor(nil, unpack(args)))
			end)
		end,
	}
	setmetatable(method, {
		__call = function(method, ...)
			local args = { ... }
			return method:invoke(unpack(args))
		end,
	})
	return method
end
function timeout(timeout, rejectValue)
	local _exp = TS.Promise.delay(timeout)
	local _arg0 = function()
		return TS.Promise.reject(rejectValue)
	end
	return _exp:andThen(_arg0)
end
return {
	createClientHandler = createClientHandler,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="ModuleScript" referent="RBXd90f9926588f4431b7091a7db18b182c">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">createNetworkingFunction</string>
										<string name="ScriptGuid">{5e59cdf7-ea5a-4df9-8271-b479c4e4ce57}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local Object = TS.import(script, TS.getModule(script, "@rbxts", "object-utils"))
local RunService = TS.import(script, TS.getModule(script, "@rbxts", "services")).RunService
local populateInstanceMap = TS.import(script, script.Parent.Parent, "util", "populateInstanceMap").populateInstanceMap
local createClientHandler = TS.import(script, script.Parent, "createClientHandler").createClientHandler
local createServerHandler = TS.import(script, script.Parent, "createServerHandler").createServerHandler
local function createNetworkingFunction(globalName, serverEvents, clientEvents, serverMiddleware, clientMiddleware)
	local networkInfos = {}
	local serverRemotes = {}
	local clientRemotes = {}
	local _exp = Object.keys(serverEvents)
	local _arg0 = function(x)
		return "s:" .. tostring(x)
	end
	-- ▼ ReadonlyArray.map ▼
	local _newValue = table.create(#_exp)
	for _k, _v in ipairs(_exp) do
		_newValue[_k] = _arg0(_v, _k - 1, _exp)
	end
	-- ▲ ReadonlyArray.map ▲
	local serverNames = _newValue
	local _exp_1 = Object.keys(clientEvents)
	local _arg0_1 = function(x)
		return "c:" .. tostring(x)
	end
	-- ▼ ReadonlyArray.map ▼
	local _newValue_1 = table.create(#_exp_1)
	for _k, _v in ipairs(_exp_1) do
		_newValue_1[_k] = _arg0_1(_v, _k - 1, _exp_1)
	end
	-- ▲ ReadonlyArray.map ▲
	local clientNames = _newValue_1
	populateInstanceMap("RemoteEvent", "functions-" .. globalName, serverNames, serverRemotes)
	populateInstanceMap("RemoteEvent", "functions-" .. globalName, clientNames, clientRemotes)
	for alias in pairs(serverRemotes) do
		local name = string.sub(alias, 3)
		local _arg1 = {
			eventType = "Function",
			globalName = globalName,
			name = name,
		}
		-- ▼ Map.set ▼
		networkInfos[name] = _arg1
		-- ▲ Map.set ▲
	end
	for alias in pairs(clientRemotes) do
		local name = string.sub(alias, 3)
		local _arg1 = {
			eventType = "Function",
			globalName = globalName,
			name = name,
		}
		-- ▼ Map.set ▼
		networkInfos[name] = _arg1
		-- ▲ Map.set ▲
	end
	if RunService:IsServer() then
		return {
			server = createServerHandler(serverRemotes, clientRemotes, networkInfos, serverEvents, clientEvents, serverMiddleware),
			client = nil,
		}
	else
		return {
			server = nil,
			client = createClientHandler(serverRemotes, clientRemotes, networkInfos, serverEvents, clientEvents, clientMiddleware),
		}
	end
end
return {
	createNetworkingFunction = createNetworkingFunction,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="ModuleScript" referent="RBX85f010f38d5d4a24861afc0441f6f9e2">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">createServerHandler</string>
										<string name="ScriptGuid">{f4959fdd-f8bf-4f7a-bcdc-583faae79972}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local Players = TS.import(script, TS.getModule(script, "@rbxts", "services")).Players
local _errors = TS.import(script, script.Parent, "errors")
local getFunctionError = _errors.getFunctionError
local NetworkingFunctionError = _errors.NetworkingFunctionError
local createMiddlewareProcessor = TS.import(script, script.Parent.Parent, "middleware", "createMiddlewareProcessor").createMiddlewareProcessor
local Skip = TS.import(script, script.Parent.Parent, "middleware", "skip").Skip
local fireNetworkHandler = TS.import(script, script.Parent.Parent, "handlers").fireNetworkHandler
local createServerMethod, getRequestInfo
local function createServerHandler(serverRemotes, clientRemotes, networkInfos, serverEvents, clientEvents, middlewareFactoryList)
	local handler = {}
	local processors = {}
	local players = {}
	local function createMethod(name, networkInfo, remote)
		if handler[name] ~= nil then
			return nil
		end
		local _condition = serverEvents[name]
		if _condition == nil then
			_condition = clientEvents[name]
		end
		local _exp = _condition[2]
		local _result = middlewareFactoryList
		if _result ~= nil then
			_result = _result[name]
		end
		local _condition_1 = _result
		if _condition_1 == nil then
			_condition_1 = {}
		end
		handler[name] = createServerMethod(_exp, _condition_1, processors, networkInfo, players, name, remote)
	end
	for alias, remote in pairs(clientRemotes) do
		-- create server method
		local name = string.sub(alias, 3)
		local networkInfo = networkInfos[name]
		createMethod(name, networkInfo, remote)
		remote.OnServerEvent:Connect(function(player, id, processResult, result)
			if not (type(id) == "number") then
				return nil
			end
			local requestInfo = getRequestInfo(player, players)
			local request = requestInfo.requests[id]
			-- ▼ Map.delete ▼
			requestInfo.requests[id] = nil
			-- ▲ Map.delete ▲
			if request then
				request(result, getFunctionError(processResult))
			end
		end)
	end
	for alias, remote in pairs(serverRemotes) do
		-- invoke callback
		local name = string.sub(alias, 3)
		local networkInfo = networkInfos[name]
		createMethod(name, networkInfo, remote)
		remote.OnServerEvent:Connect(function(player, id, ...)
			local args = { ... }
			local guards = serverEvents[name]
			if not guards then
				return nil
			end
			do
				local i = 0
				local _shouldIncrement = false
				while true do
					if _shouldIncrement then
						i += 1
					else
						_shouldIncrement = true
					end
					if not (i < #guards[1]) then
						break
					end
					local guard = guards[1][i + 1]
					if not guard(args[i + 1]) then
						fireNetworkHandler("onBadRequest", player, networkInfo, i)
						return remote:FireClient(player, id, NetworkingFunctionError.BadRequest)
					end
				end
			end
			local processor = processors[name]
			if processor then
				local result = processor(player, unpack(args))
				remote:FireClient(player, id, result == Skip and NetworkingFunctionError.Cancelled or true, result)
			else
				remote:FireClient(player, id, false)
			end
		end)
	end
	Players.PlayerRemoving:Connect(function(player)
		-- ▼ Map.delete ▼
		players[player] = nil
		-- ▲ Map.delete ▲
	end)
	return handler
end
local timeout
function createServerMethod(guard, middleware, processors, networkInfo, players, name, remote)
	local method = {
		invoke = function(self, player, ...)
			local args = { ... }
			return TS.Promise.race({ timeout(10, NetworkingFunctionError.Timeout), TS.Promise.new(function(resolve, reject, onCancel)
				local requestInfo = getRequestInfo(player, players)
				local _original = requestInfo.nextId
				requestInfo.nextId += 1
				local id = _original
				local _requests = requestInfo.requests
				local _arg1 = function(value, rejection)
					if rejection then
						return reject(rejection)
					end
					if not guard(value) then
						fireNetworkHandler("onBadResponse", player, networkInfo)
						return reject(NetworkingFunctionError.InvalidResult)
					end
					resolve(value)
				end
				-- ▼ Map.set ▼
				_requests[id] = _arg1
				-- ▲ Map.set ▲
				onCancel(function()
					-- ▼ Map.delete ▼
					requestInfo.requests[id] = nil
					-- ▲ Map.delete ▲
				end)
				remote:FireClient(player, id, unpack(args))
			end) })
		end,
		setCallback = function(self, callback)
			if processors[name] ~= nil then
				warn("Function.setCallback was called multiple times for " .. name)
			end
			local processor = createMiddlewareProcessor(middleware, networkInfo, callback)
			-- ▼ Map.set ▼
			processors[name] = processor
			-- ▲ Map.set ▲
		end,
	}
	setmetatable(method, {
		__call = function(method, player, ...)
			local args = { ... }
			return method:invoke(player, unpack(args))
		end,
	})
	return method
end
function getRequestInfo(player, map)
	local requestInfo = map[player]
	if requestInfo then
		return requestInfo
	end
	requestInfo = {
		nextId = 0,
		requests = {},
	}
	local _requestInfo = requestInfo
	-- ▼ Map.set ▼
	map[player] = _requestInfo
	-- ▲ Map.set ▲
	return requestInfo
end
function timeout(timeout, rejectValue)
	local _exp = TS.Promise.delay(timeout)
	local _arg0 = function()
		return TS.Promise.reject(rejectValue)
	end
	return _exp:andThen(_arg0)
end
return {
	createServerHandler = createServerHandler,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="ModuleScript" referent="RBX988b482a740747bd9c08a12685cf2573">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">errors</string>
										<string name="ScriptGuid">{2734f749-3ba0-4d70-ae29-3a19e8f83de0}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local t = TS.import(script, TS.getModule(script, "@rbxts", "t").lib.ts).t
local isNetworkingFunctionError = t.union(t.literal("Timeout"), t.literal("Cancelled"), t.literal("BadRequest"), t.literal("Unprocessed"), t.literal("InvalidResult"))
local NetworkingFunctionError
do
	local _inverse = {}
	NetworkingFunctionError = setmetatable({}, {
		__index = _inverse,
	})
	NetworkingFunctionError.Timeout = "Timeout"
	_inverse.Timeout = "Timeout"
	NetworkingFunctionError.Cancelled = "Cancelled"
	_inverse.Cancelled = "Cancelled"
	NetworkingFunctionError.BadRequest = "BadRequest"
	_inverse.BadRequest = "BadRequest"
	NetworkingFunctionError.Unprocessed = "Unprocessed"
	_inverse.Unprocessed = "Unprocessed"
	NetworkingFunctionError.InvalidResult = "InvalidResult"
	_inverse.InvalidResult = "InvalidResult"
end
local function getFunctionError(value)
	if type(value) == "boolean" then
		return value == false and NetworkingFunctionError.Unprocessed or nil
	elseif isNetworkingFunctionError(value) then
		return value
	end
end
return {
	getFunctionError = getFunctionError,
	isNetworkingFunctionError = isNetworkingFunctionError,
	NetworkingFunctionError = NetworkingFunctionError,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="ModuleScript" referent="RBX3fd757a157c6485aa96dc59f36463896">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">handlers</string>
									<string name="ScriptGuid">{e2769855-572f-4227-9861-9a8f40c65d75}</string>
									<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local Signal = TS.import(script, TS.getModule(script, "@rbxts", "signal"))
local NetworkEvents = {
	onBadRequest = Signal.new(),
	onBadResponse = Signal.new(),
}
local function registerNetworkHandler(event, callback)
	return NetworkEvents[event]:Connect(callback)
end
local function fireNetworkHandler(event, ...)
	local args = { ... }
	(NetworkEvents[event]):Fire(unpack(args))
end
return {
	registerNetworkHandler = registerNetworkHandler,
	fireNetworkHandler = fireNetworkHandler,
}
]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="Folder" referent="RBXa3714028b74142d8883af80ad97f91ad">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">middleware</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
								<Item class="ModuleScript" referent="RBX9fca55ff4b774ae5936c26c8ec3fb247">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">createMiddlewareProcessor</string>
										<string name="ScriptGuid">{d67a9bb6-ed0c-4d72-94b3-553144e49a2e}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local function createMiddlewareProcessor(middlewareFactories, networkInfo, finalize)
	local middleware = {}
	if not middlewareFactories or #middlewareFactories == 0 then
		middleware[1] = finalize
	else
		do
			local i = #middlewareFactories - 1
			local _shouldIncrement = false
			while true do
				if _shouldIncrement then
					i -= 1
				else
					_shouldIncrement = true
				end
				if not (i >= 0) then
					break
				end
				local factory = middlewareFactories[i + 1]
				local _condition = middleware[i + 1 + 1]
				if _condition == nil then
					_condition = finalize
				end
				middleware[i + 1] = factory(_condition, networkInfo)
			end
		end
	end
	return middleware[1]
end
return {
	createMiddlewareProcessor = createMiddlewareProcessor,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="ModuleScript" referent="RBXfaed189824634bf7a40071f3267ca336">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">skip</string>
										<string name="ScriptGuid">{34eca735-16bb-4e8e-93a7-bf1688030f59}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local Skip = {
	__index = function()
		return nil
	end,
	__newindex = function()
		return nil
	end,
	__tostring = function()
		return "Networking.Skip"
	end,
}
setmetatable(Skip, Skip)
return {
	Skip = Skip,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="Folder" referent="RBX37926219d99147e2a92ed37218827cf0">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">util</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
								<Item class="ModuleScript" referent="RBX98d99a0efc574593bb38234005799567">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="LinkedSource"><null></null></Content>
										<string name="Name">populateInstanceMap</string>
										<string name="ScriptGuid">{57aeaf3b-96b3-4c10-a740-16cdbd37df7c}</string>
										<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = _G[script]
local _services = TS.import(script, TS.getModule(script, "@rbxts", "services"))
local ReplicatedStorage = _services.ReplicatedStorage
local RunService = _services.RunService
local function populateInstanceMap(className, globalName, names, map)
	local _result
	if RunService:IsServer() then
		_result = ReplicatedStorage:FindFirstChild(globalName)
	else
		_result = ReplicatedStorage:WaitForChild(globalName)
	end
	local remotes = _result
	if not remotes then
		remotes = Instance.new("Folder")
		remotes.Name = globalName
		remotes.Parent = ReplicatedStorage
	end
	for _, name in ipairs(names) do
		if RunService:IsClient() then
			local instance = remotes:WaitForChild(name)
			if instance:IsA(className) then
				-- ▼ Map.set ▼
				map[name] = instance
				-- ▲ Map.set ▲
			end
		else
			local instance = remotes:FindFirstChild(name)
			if instance then
				if not instance:IsA(className) then
					error("Found " .. name .. " but it is not a remote.")
				end
				-- ▼ Map.set ▼
				map[name] = instance
				-- ▲ Map.set ▲
			else
				local remote = Instance.new(className)
				remote.Name = name
				remote.Parent = remotes
				-- ▼ Map.set ▼
				map[name] = remote
				-- ▲ Map.set ▲
			end
		end
	end
end
return {
	populateInstanceMap = populateInstanceMap,
}
]]></ProtectedString>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX19c7ca8aaebb4e468886f4442d466e94">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">camera-shaker</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBXf5fa3d2a7c6643c09cf18bb422b73bb1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CameraShaker</string>
							<string name="ScriptGuid">{5eecf045-d5d6-4fab-af9a-4fa4e57878d7}</string>
							<ProtectedString name="Source"><![CDATA[-- Camera Shaker
-- Stephen Leitnick
-- February 26, 2018

--[[

	CameraShaker.CameraShakeInstance

	cameraShaker = CameraShaker.new(renderPriority, callbackFunction)

	CameraShaker:Start()
	CameraShaker:Stop()
	CameraShaker:StopSustained([fadeOutTime])
	CameraShaker:Shake(shakeInstance)
	CameraShaker:ShakeSustain(shakeInstance)
	CameraShaker:ShakeOnce(magnitude, roughness [, fadeInTime, fadeOutTime, posInfluence, rotInfluence])
	CameraShaker:StartShake(magnitude, roughness [, fadeInTime, posInfluence, rotInfluence])



	EXAMPLE:

		local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCFrame)
			camera.CFrame = playerCFrame * shakeCFrame
		end)

		camShake:Start()

		-- Explosion shake:
		camShake:Shake(CameraShaker.Presets.Explosion)

		wait(1)

		-- Custom shake:
		camShake:ShakeOnce(3, 1, 0.2, 1.5)

		-- Sustained shake:
		camShake:ShakeSustain(CameraShaker.Presets.Earthquake)

		-- Stop all sustained shakes:
		camShake:StopSustained(1) -- Argument is the fadeout time (defaults to the same as fadein time if not supplied)

		-- Stop only one sustained shake:
		shakeInstance = camShake:ShakeSustain(CameraShaker.Presets.Earthquake)
		wait(2)
		shakeInstance:StartFadeOut(1) -- Argument is the fadeout time


	NOTE:

		This was based entirely on the EZ Camera Shake asset for Unity3D. I was given written
		permission by the developer, Road Turtle Games, to port this to Roblox.

		Original asset link: https://assetstore.unity.com/packages/tools/camera/ez-camera-shake-33148

		GitHub repository: https://github.com/Sleitnick/RbxCameraShaker


--]]



local CameraShaker = {}
CameraShaker.__index = CameraShaker

local profileBegin = debug.profilebegin
local profileEnd = debug.profileend
local profileTag = "CameraShakerUpdate"

local V3 = Vector3.new
local CF = CFrame.new
local ANG = CFrame.Angles
local RAD = math.rad
local v3Zero = V3()

local CameraShakeInstance = require(script.CameraShakeInstance)
local CameraShakeState = CameraShakeInstance.CameraShakeState

local defaultPosInfluence = V3(0.15, 0.15, 0.15)
local defaultRotInfluence = V3(1, 1, 1)


CameraShaker.CameraShakeInstance = CameraShakeInstance
CameraShaker.Presets = require(script.CameraShakePresets)


function CameraShaker.new(renderPriority, callback)

	assert(type(renderPriority) == "number", "RenderPriority must be a number (e.g.: Enum.RenderPriority.Camera.Value)")
	assert(type(callback) == "function", "Callback must be a function")

	local self = setmetatable({
		_running = false;
		_renderName = "CameraShaker";
		_renderPriority = renderPriority;
		_posAddShake = v3Zero;
		_rotAddShake = v3Zero;
		_camShakeInstances = {};
		_removeInstances = {};
		_callback = callback;
	}, CameraShaker)

	return self

end


function CameraShaker:Start()
	if (self._running) then return end
	self._running = true
	local callback = self._callback
	game:GetService("RunService"):BindToRenderStep(self._renderName, self._renderPriority, function(dt)
		profileBegin(profileTag)
		local cf = self:Update(dt)
		profileEnd()
		callback(cf)
	end)
end


function CameraShaker:Stop()
	if (not self._running) then return end
	game:GetService("RunService"):UnbindFromRenderStep(self._renderName)
	self._running = false
end


function CameraShaker:StopSustained(duration)
	for _,c in pairs(self._camShakeInstances) do
		if (c.fadeOutDuration == 0) then
			c:StartFadeOut(duration or c.fadeInDuration)
		end
	end
end


function CameraShaker:Update(dt)

	local posAddShake = v3Zero
	local rotAddShake = v3Zero

	local instances = self._camShakeInstances

	-- Update all instances:
	for i = 1,#instances do

		local c = instances[i]
		local state = c:GetState()

		if (state == CameraShakeState.Inactive and c.DeleteOnInactive) then
			self._removeInstances[#self._removeInstances + 1] = i
		elseif (state ~= CameraShakeState.Inactive) then
			local shake = c:UpdateShake(dt)
			posAddShake = posAddShake + (shake * c.PositionInfluence)
			rotAddShake = rotAddShake + (shake * c.RotationInfluence)
		end

	end

	-- Remove dead instances:
	for i = #self._removeInstances,1,-1 do
		local instIndex = self._removeInstances[i]
		table.remove(instances, instIndex)
		self._removeInstances[i] = nil
	end

	return CF(posAddShake) *
			ANG(0, RAD(rotAddShake.Y), 0) *
			ANG(RAD(rotAddShake.X), 0, RAD(rotAddShake.Z))

end


function CameraShaker:Shake(shakeInstance)
	assert(type(shakeInstance) == "table" and shakeInstance._camShakeInstance, "ShakeInstance must be of type CameraShakeInstance")
	self._camShakeInstances[#self._camShakeInstances + 1] = shakeInstance
	return shakeInstance
end


function CameraShaker:ShakeSustain(shakeInstance)
	assert(type(shakeInstance) == "table" and shakeInstance._camShakeInstance, "ShakeInstance must be of type CameraShakeInstance")
	self._camShakeInstances[#self._camShakeInstances + 1] = shakeInstance
	shakeInstance:StartFadeIn(shakeInstance.fadeInDuration)
	return shakeInstance
end


function CameraShaker:ShakeOnce(magnitude, roughness, fadeInTime, fadeOutTime, posInfluence, rotInfluence)
	local shakeInstance = CameraShakeInstance.new(magnitude, roughness, fadeInTime, fadeOutTime)
	shakeInstance.PositionInfluence = (typeof(posInfluence) == "Vector3" and posInfluence or defaultPosInfluence)
	shakeInstance.RotationInfluence = (typeof(rotInfluence) == "Vector3" and rotInfluence or defaultRotInfluence)
	self._camShakeInstances[#self._camShakeInstances + 1] = shakeInstance
	return shakeInstance
end


function CameraShaker:StartShake(magnitude, roughness, fadeInTime, posInfluence, rotInfluence)
	local shakeInstance = CameraShakeInstance.new(magnitude, roughness, fadeInTime)
	shakeInstance.PositionInfluence = (typeof(posInfluence) == "Vector3" and posInfluence or defaultPosInfluence)
	shakeInstance.RotationInfluence = (typeof(rotInfluence) == "Vector3" and rotInfluence or defaultRotInfluence)
	shakeInstance:StartFadeIn(fadeInTime)
	self._camShakeInstances[#self._camShakeInstances + 1] = shakeInstance
	return shakeInstance
end


return CameraShaker]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXd78e22f4b53944b4b044a25b873f8265">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">CameraShakeInstance</string>
								<string name="ScriptGuid">{5e48de9c-20c9-478f-84b4-ec6154e26200}</string>
								<ProtectedString name="Source"><![CDATA[-- Camera Shake Instance
-- Stephen Leitnick
-- February 26, 2018

--[[

	cameraShakeInstance = CameraShakeInstance.new(magnitude, roughness, fadeInTime, fadeOutTime)

--]]



local CameraShakeInstance = {}
CameraShakeInstance.__index = CameraShakeInstance

local V3 = Vector3.new
local NOISE = math.noise


CameraShakeInstance.CameraShakeState = {
	FadingIn = 0;
	FadingOut = 1;
	Sustained = 2;
	Inactive = 3;
}


function CameraShakeInstance.new(magnitude, roughness, fadeInTime, fadeOutTime)

	if (fadeInTime == nil) then fadeInTime = 0 end
	if (fadeOutTime == nil) then fadeOutTime = 0 end

	assert(type(magnitude) == "number", "Magnitude must be a number")
	assert(type(roughness) == "number", "Roughness must be a number")
	assert(type(fadeInTime) == "number", "FadeInTime must be a number")
	assert(type(fadeOutTime) == "number", "FadeOutTime must be a number")

	local self = setmetatable({
		Magnitude = magnitude;
		Roughness = roughness;
		PositionInfluence = V3();
		RotationInfluence = V3();
		DeleteOnInactive = true;
		roughMod = 1;
		magnMod = 1;
		fadeOutDuration = fadeOutTime;
		fadeInDuration = fadeInTime;
		sustain = (fadeInTime > 0);
		currentFadeTime = (fadeInTime > 0 and 0 or 1);
		tick = Random.new():NextNumber(-100, 100);
		_camShakeInstance = true;
	}, CameraShakeInstance)

	return self

end


function CameraShakeInstance:UpdateShake(dt)

	local _tick = self.tick
	local currentFadeTime = self.currentFadeTime

	local offset = V3(
		NOISE(_tick, 0) * 0.5,
		NOISE(0, _tick) * 0.5,
		NOISE(_tick, _tick) * 0.5
	)

	if (self.fadeInDuration > 0 and self.sustain) then
		if (currentFadeTime < 1) then
			currentFadeTime = currentFadeTime + (dt / self.fadeInDuration)
		elseif (self.fadeOutDuration > 0) then
			self.sustain = false
		end
	end

	if (not self.sustain) then
		currentFadeTime = currentFadeTime - (dt / self.fadeOutDuration)
	end

	if (self.sustain) then
		self.tick = _tick + (dt * self.Roughness * self.roughMod)
	else
		self.tick = _tick + (dt * self.Roughness * self.roughMod * currentFadeTime)
	end

	self.currentFadeTime = currentFadeTime

	return offset * self.Magnitude * self.magnMod * currentFadeTime

end


function CameraShakeInstance:StartFadeOut(fadeOutTime)
	if (fadeOutTime == 0) then
		self.currentFadeTime = 0
	end
	self.fadeOutDuration = fadeOutTime
	self.fadeInDuration = 0
	self.sustain = false
end


function CameraShakeInstance:StartFadeIn(fadeInTime)
	if (fadeInTime == 0) then
		self.currentFadeTime = 1
	end
	self.fadeInDuration = fadeInTime or self.fadeInDuration
	self.fadeOutDuration = 0
	self.sustain = true
end


function CameraShakeInstance:GetScaleRoughness()
	return self.roughMod
end


function CameraShakeInstance:SetScaleRoughness(v)
	self.roughMod = v
end


function CameraShakeInstance:GetScaleMagnitude()
	return self.magnMod
end


function CameraShakeInstance:SetScaleMagnitude(v)
	self.magnMod = v
end


function CameraShakeInstance:GetNormalizedFadeTime()
	return self.currentFadeTime
end


function CameraShakeInstance:IsShaking()
	return (self.currentFadeTime > 0 or self.sustain)
end


function CameraShakeInstance:IsFadingOut()
	return ((not self.sustain) and self.currentFadeTime > 0)
end


function CameraShakeInstance:IsFadingIn()
	return (self.currentFadeTime < 1 and self.sustain and self.fadeInDuration > 0)
end


function CameraShakeInstance:GetState()
	if (self:IsFadingIn()) then
		return CameraShakeInstance.CameraShakeState.FadingIn
	elseif (self:IsFadingOut()) then
		return CameraShakeInstance.CameraShakeState.FadingOut
	elseif (self:IsShaking()) then
		return CameraShakeInstance.CameraShakeState.Sustained
	else
		return CameraShakeInstance.CameraShakeState.Inactive
	end
end


return CameraShakeInstance]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXf75ae98395be457a94f1c8fe16f2e290">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">CameraShakePresets</string>
								<string name="ScriptGuid">{bcc04c5e-0c58-4b7d-988c-1fe78e15ef1b}</string>
								<ProtectedString name="Source"><![CDATA[-- Camera Shake Presets
-- Stephen Leitnick
-- February 26, 2018

--[[

	CameraShakePresets.Bump
	CameraShakePresets.Explosion
	CameraShakePresets.Earthquake
	CameraShakePresets.BadTrip
	CameraShakePresets.HandheldCamera
	CameraShakePresets.Vibration
	CameraShakePresets.RoughDriving

--]]



local CameraShakeInstance = require(script.Parent.CameraShakeInstance)

local CameraShakePresets = {


	-- A high-magnitude, short, yet smooth shake.
	-- Should happen once.
	Bump = function()
		local c = CameraShakeInstance.new(2.5, 4, 0.1, 0.75)
		c.PositionInfluence = Vector3.new(0.15, 0.15, 0.15)
		c.RotationInfluence = Vector3.new(1, 1, 1)
		return c
	end;


	-- An intense and rough shake.
	-- Should happen once.
	Explosion = function()
		local c = CameraShakeInstance.new(5, 10, 0, 1.5)
		c.PositionInfluence = Vector3.new(0.25, 0.25, 0.25)
		c.RotationInfluence = Vector3.new(4, 1, 1)
		return c
	end;


	-- A continuous, rough shake
	-- Sustained.
	Earthquake = function()
		local c = CameraShakeInstance.new(0.6, 3.5, 2, 10)
		c.PositionInfluence = Vector3.new(0.25, 0.25, 0.25)
		c.RotationInfluence = Vector3.new(1, 1, 4)
		return c
	end;


	-- A bizarre shake with a very high magnitude and low roughness.
	-- Sustained.
	BadTrip = function()
		local c = CameraShakeInstance.new(10, 0.15, 5, 10)
		c.PositionInfluence = Vector3.new(0, 0, 0.15)
		c.RotationInfluence = Vector3.new(2, 1, 4)
		return c
	end;


	-- A subtle, slow shake.
	-- Sustained.
	HandheldCamera = function()
		local c = CameraShakeInstance.new(1, 0.25, 5, 10)
		c.PositionInfluence = Vector3.new(0, 0, 0)
		c.RotationInfluence = Vector3.new(1, 0.5, 0.5)
		return c
	end;


	-- A very rough, yet low magnitude shake.
	-- Sustained.
	Vibration = function()
		local c = CameraShakeInstance.new(0.4, 20, 2, 2)
		c.PositionInfluence = Vector3.new(0, 0.15, 0)
		c.RotationInfluence = Vector3.new(1.25, 0, 4)
		return c
	end;


	-- A slightly rough, medium magnitude shake.
	-- Sustained.
	RoughDriving = function()
		local c = CameraShakeInstance.new(1, 2, 1, 1)
		c.PositionInfluence = Vector3.new(0, 0, 0)
		c.RotationInfluence = Vector3.new(1, 1, 1)
		return c
	end;


}


return setmetatable({}, {
	__index = function(t, i)
		local f = CameraShakePresets[i]
		if (type(f) == "function") then
			return f()
		end
		error("No preset found with index \"" .. i .. "\"")
	end;
})]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX59aab6aeb51b44b2b5fde9556c8d5caa">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">janitor</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBXe7398956490945c7aa3682e439eb1e05">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">src</string>
							<string name="ScriptGuid">{920b27aa-ddca-4e75-9118-c314a3cdd9f3}</string>
							<ProtectedString name="Source"><![CDATA[-- Janitor
-- Original by Validark
-- Modifications by pobammer
-- roblox-ts support by OverHash and Validark
-- LinkToInstance fixed by Elttob.

local GetPromiseLibrary = require(script.GetPromiseLibrary)
local Symbol = require(script.Symbol)
local FoundPromiseLibrary, Promise = GetPromiseLibrary()

local IndicesReference = Symbol("IndicesReference")
local LinkToInstanceIndex = Symbol("LinkToInstanceIndex")

local METHOD_NOT_FOUND_ERROR = "Object %s doesn't have method %s, are you sure you want to add it? Traceback: %s"
local NOT_A_PROMISE = "Invalid argument #1 to 'Janitor:AddPromise' (Promise expected, got %s (%s))"

--[=[
	Janitor is a light-weight, flexible object for cleaning up connections, instances, or anything. This implementation covers all use cases,
	as it doesn't force you to rely on naive typechecking to guess how an instance should be cleaned up.
	Instead, the developer may specify any behavior for any object.

	@class Janitor
]=]
local Janitor = {}
Janitor.ClassName = "Janitor"
Janitor.CurrentlyCleaning = true
Janitor[IndicesReference] = nil
Janitor.__index = Janitor

local TypeDefaults = {
	["function"] = true;
	RBXScriptConnection = "Disconnect";
}

--[=[
	Determines if the passed object is a Janitor. This checks the metatable directly.

	@param Object any -- The object you are checking.
	@return boolean -- `true` if `Object` is a Janitor.
]=]
function Janitor.Is(Object: any): boolean
	return type(Object) == "table" and getmetatable(Object) == Janitor
end

type StringOrTrue = string | boolean

--[=[
	Adds an `Object` to Janitor for later cleanup, where `MethodName` is the key of the method within `Object` which should be called at cleanup time.
	If the `MethodName` is `true` the `Object` itself will be called instead. If passed an index it will occupy a namespace which can be `Remove()`d or overwritten.
	Returns the `Object`.

	:::info
	Objects not given an explicit `MethodName` will be passed into the `typeof` function for a very naive typecheck.
	RBXConnections will be assigned to "Disconnect", functions will be assigned to `true`, and everything else will default to "Destroy".
	Not recommended, but hey, you do you.
	:::

	```lua
	local Workspace = game:GetService("Workspace")
	local TweenService = game:GetService("TweenService")

	local Obliterator = Janitor.new()
	local Part = Workspace.Part

	-- Queue the Part to be Destroyed at Cleanup time
	Obliterator:Add(Part, "Destroy")

	-- Queue function to be called with `true` MethodName
	Obliterator:Add(print, true)

	-- This implementation allows you to specify behavior for any object
	Obliterator:Add(TweenService:Create(Part, TweenInfo.new(1), {Size = Vector3.new(1, 1, 1)}), "Cancel")

	-- By passing an Index, the Object will occupy a namespace
	-- If "CurrentTween" already exists, it will call :Remove("CurrentTween") before writing
	Obliterator:Add(TweenService:Create(Part, TweenInfo.new(1), {Size = Vector3.new(1, 1, 1)}), "Destroy", "CurrentTween")
	```

	```ts
	import { Workspace, TweenService } from "@rbxts/services";
	import { Janitor } from "@rbxts/janitor";

	const Obliterator = new Janitor<{ CurrentTween: Tween }>();
	const Part = Workspace.FindFirstChild("Part") as Part;

	// Queue the Part to be Destroyed at Cleanup time
	Obliterator.Add(Part, "Destroy");

	// Queue function to be called with `true` MethodName
	Obliterator.Add(print, true);

	// This implementation allows you to specify behavior for any object
	Obliterator.Add(TweenService.Create(Part, new TweenInfo(1), {Size: new Vector3(1, 1, 1)}), "Cancel");

	// By passing an Index, the Object will occupy a namespace
	// If "CurrentTween" already exists, it will call :Remove("CurrentTween") before writing
	Obliterator.Add(TweenService.Create(Part, new TweenInfo(1), {Size: new Vector3(1, 1, 1)}), "Destroy", "CurrentTween");
	```

	@param Object T -- The object you want to clean up.
	@param MethodName? string|true -- The name of the method that will be used to clean up. If not passed, it will first check if the object's type exists in TypeDefaults, and if that doesn't exist, it assumes `Destroy`.
	@param Index? any -- The index that can be used to clean up the object manually.
	@return T -- The object that was passed as the first argument.
]=]
function Janitor:Add(Object: any, MethodName: StringOrTrue?, Index: any?): any
	if Index then
		self:Remove(Index)

		local This = self[IndicesReference]
		if not This then
			This = {}
			self[IndicesReference] = This
		end

		This[Index] = Object
	end

	MethodName = MethodName or TypeDefaults[typeof(Object)] or "Destroy"
	if type(Object) ~= "function" and not Object[MethodName] then
		warn(string.format(METHOD_NOT_FOUND_ERROR, tostring(Object), tostring(MethodName), debug.traceback(nil :: any, 2)))
	end

	self[Object] = MethodName
	return Object
end

--[=[
	Adds a [Promise](https://github.com/evaera/roblox-lua-promise) to the Janitor. If the Janitor is cleaned up and the Promise is not completed, the Promise will be cancelled.

	```lua
	local Obliterator = Janitor.new()
	Obliterator:AddPromise(Promise.delay(3)):andThenCall(print, "Finished!"):catch(warn)
	task.wait(1)
	Obliterator:Cleanup()
	```

	```ts
	import { Janitor } from "@rbxts/janitor";

	const Obliterator = new Janitor();
	Obliterator.AddPromise(Promise.delay(3)).andThenCall(print, "Finished!").catch(warn);
	task.wait(1);
	Obliterator.Cleanup();
	```

	@param PromiseObject Promise -- The promise you want to add to the Janitor.
	@return Promise
]=]
function Janitor:AddPromise(PromiseObject)
	if FoundPromiseLibrary then
		if not Promise.is(PromiseObject) then
			error(string.format(NOT_A_PROMISE, typeof(PromiseObject), tostring(PromiseObject)))
		end

		if PromiseObject:getStatus() == Promise.Status.Started then
			local Id = newproxy(false)
			local NewPromise = self:Add(Promise.resolve(PromiseObject), "cancel", Id)
			NewPromise:finallyCall(self.Remove, self, Id)
			return NewPromise
		else
			return PromiseObject
		end
	else
		return PromiseObject
	end
end

--[=[
	Cleans up whatever `Object` was set to this namespace by the 3rd parameter of [Janitor.Add](#Add).

	```lua
	local Obliterator = Janitor.new()
	Obliterator:Add(workspace.Baseplate, "Destroy", "Baseplate")
	Obliterator:Remove("Baseplate")
	```

	```ts
	import { Workspace } from "@rbxts/services";
	import { Janitor } from "@rbxts/janitor";

	const Obliterator = new Janitor<{ Baseplate: Part }>();
	Obliterator.Add(Workspace.FindFirstChild("Baseplate") as Part, "Destroy", "Baseplate");
	Obliterator.Remove("Baseplate");
	```

	@param Index any -- The index you want to remove.
	@return Janitor
]=]
function Janitor:Remove(Index: any): Janitor
	local This = self[IndicesReference]

	if This then
		local Object = This[Index]

		if Object then
			local MethodName = self[Object]

			if MethodName then
				if MethodName == true then
					Object()
				else
					local ObjectMethod = Object[MethodName]
					if ObjectMethod then
						ObjectMethod(Object)
					end
				end

				self[Object] = nil
			end

			This[Index] = nil
		end
	end

	return self
end

--[=[
	Gets whatever object is stored with the given index, if it exists. This was added since Maid allows getting the task using `__index`.

	```lua
	local Obliterator = Janitor.new()
	Obliterator:Add(workspace.Baseplate, "Destroy", "Baseplate")
	print(Obliterator:Get("Baseplate")) -- Returns Baseplate.
	```

	```ts
	import { Workspace } from "@rbxts/services";
	import { Janitor } from "@rbxts/janitor";

	const Obliterator = new Janitor<{ Baseplate: Part }>();
	Obliterator.Add(Workspace.FindFirstChild("Baseplate") as Part, "Destroy", "Baseplate");
	print(Obliterator.Get("Baseplate")); // Returns Baseplate.
	```

	@param Index any -- The index that the object is stored under.
	@return any? -- This will return the object if it is found, but it won't return anything if it doesn't exist.
]=]
function Janitor:Get(Index: any): any?
	local This = self[IndicesReference]
	if This then
		return This[Index]
	else
		return nil
	end
end

--[=[
	Calls each Object's `MethodName` (or calls the Object if `MethodName == true`) and removes them from the Janitor. Also clears the namespace.
	This function is also called when you call a Janitor Object (so it can be used as a destructor callback).

	```lua
	Obliterator:Cleanup() -- Valid.
	Obliterator() -- Also valid.
	```

	```ts
	Obliterator.Cleanup()
	```
]=]
function Janitor:Cleanup()
	if not self.CurrentlyCleaning then
		self.CurrentlyCleaning = nil
		for Object, MethodName in pairs(self) do
			if Object == IndicesReference then
				continue
			end

			if MethodName == true then
				Object()
			else
				local ObjectMethod = Object[MethodName]
				if ObjectMethod then
					ObjectMethod(Object)
				end
			end

			self[Object] = nil
		end

		local This = self[IndicesReference]
		if This then
			table.clear(This)
			self[IndicesReference] = {}
		end

		self.CurrentlyCleaning = false
	end
end

--[=[
	Calls [Janitor.Cleanup](#Cleanup) and renders the Janitor unusable.

	:::warning
	Running this will make any attempts to call a function of Janitor error.
	:::
]=]
function Janitor:Destroy()
	self:Cleanup()
	table.clear(self)
	setmetatable(self, nil)
end

Janitor.__call = Janitor.Cleanup

--[=[
	A wrapper for an `RBXScriptConnection`. Makes the Janitor clean up when the instance is destroyed. This was created by Corecii.

	@class RbxScriptConnection
	@__index RbxScriptConnection
]=]
local RbxScriptConnection = {}
RbxScriptConnection.Connected = true
RbxScriptConnection.__index = RbxScriptConnection

--[=[
	Disconnects the Signal.
]=]
function RbxScriptConnection:Disconnect()
	if self.Connected then
		self.Connected = false
		self.Connection:Disconnect()
	end
end

function RbxScriptConnection._new(RBXScriptConnection: RBXScriptConnection)
	return setmetatable({
		Connection = RBXScriptConnection;
	}, RbxScriptConnection)
end

function RbxScriptConnection:__tostring()
	return "RbxScriptConnection<" .. tostring(self.Connected) .. ">"
end

type RbxScriptConnection = typeof(RbxScriptConnection._new(game:GetPropertyChangedSignal("ClassName"):Connect(function() end)))

--[=[
	"Links" this Janitor to an Instance, such that the Janitor will `Cleanup` when the Instance is `Destroyed()` and garbage collected.
	A Janitor may only be linked to one instance at a time, unless `AllowMultiple` is true. When called with a truthy `AllowMultiple` parameter,
	the Janitor will "link" the Instance without overwriting any previous links, and will also not be overwritable.
	When called with a falsy `AllowMultiple` parameter, the Janitor will overwrite the previous link which was also called with a falsy `AllowMultiple` parameter, if applicable.

	```lua
	local Obliterator = Janitor.new()

	Obliterator:Add(function()
		print("Cleaning up!")
	end, true)

	do
		local Folder = Instance.new("Folder")
		Obliterator:LinkToInstance(Folder)
		Folder:Destroy()
	end
	```

	```ts
	import { Janitor } from "@rbxts/janitor";

	const Obliterator = new Janitor();
	Obliterator.Add(() => print("Cleaning up!"), true);

	{
		const Folder = new Instance("Folder");
		Obliterator.LinkToInstance(Folder, false);
		Folder.Destroy();
	}
	```

	This returns a mock `RBXScriptConnection` (see: [RbxScriptConnection](#RbxScriptConnection)).

	@param Object Instance -- The instance you want to link the Janitor to.
	@param AllowMultiple? boolean -- Whether or not to allow multiple links on the same Janitor.
	@return RbxScriptConnection -- A pseudo RBXScriptConnection that can be disconnected to prevent the cleanup of LinkToInstance.
]=]
function Janitor:LinkToInstance(Object: Instance, AllowMultiple: boolean?): RbxScriptConnection
	local Connection
	local IndexToUse = AllowMultiple and newproxy(false) or LinkToInstanceIndex
	local IsNilParented = Object.Parent == nil
	local ManualDisconnect = setmetatable({}, RbxScriptConnection)

	local function ChangedFunction(_DoNotUse, NewParent)
		if ManualDisconnect.Connected then
			_DoNotUse = nil
			IsNilParented = NewParent == nil

			if IsNilParented then
				task.defer(function()
					if not ManualDisconnect.Connected then
						return
					elseif not Connection.Connected then
						self:Cleanup()
					else
						while IsNilParented and Connection.Connected and ManualDisconnect.Connected do
							task.wait()
						end

						if ManualDisconnect.Connected and IsNilParented then
							self:Cleanup()
						end
					end
				end)
			end
		end
	end

	Connection = Object.AncestryChanged:Connect(ChangedFunction)
	ManualDisconnect.Connection = Connection

	if IsNilParented then
		ChangedFunction(nil, Object.Parent)
	end

	Object = nil :: any
	return self:Add(ManualDisconnect, "Disconnect", IndexToUse)
end

--[=[
	Links several instances to a new Janitor, which is then returned.

	@param ... Instance -- All the Instances you want linked.
	@return Janitor -- A new Janitor that can be used to manually disconnect all LinkToInstances.
]=]
function Janitor:LinkToInstances(...: Instance): Janitor
	local ManualCleanup = Janitor.new()
	for _, Object in ipairs({...}) do
		ManualCleanup:Add(self:LinkToInstance(Object, true), "Disconnect")
	end

	return ManualCleanup
end

--[=[
	Instantiates a new Janitor object.
	@return Janitor
]=]
function Janitor.new()
	return setmetatable({
		CurrentlyCleaning = false;
		[IndicesReference] = nil;
	}, Janitor)
end

export type Janitor = typeof(Janitor.new())
return {
	Janitor = Janitor,
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX3f1005be2d484b329e0144383e371247">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">GetPromiseLibrary</string>
								<string name="ScriptGuid">{920f0e05-e91a-4306-9dc2-0554ac17fe9d}</string>
								<ProtectedString name="Source"><![CDATA[-- monkey patched by OverHash for roblox-ts support
-- roblox-ts exposes the TS runtime lib through _G[script]
-- which exposes the Promise library
local function GetPromiseLibrary()
	return true, _G[script.Parent].Promise
end

return GetPromiseLibrary
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX4d92ba96ce034fcda85291455ffcc1ab">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Symbol</string>
								<string name="ScriptGuid">{35e3f590-a40a-4604-8a66-1260014a5bdd}</string>
								<ProtectedString name="Source"><![CDATA[-- This only exists because the LSP warns Key `__tostring` not found in type `table?`.
local function Symbol(Name: string)
	local self = newproxy(true)
	local Metatable = getmetatable(self)
	function Metatable.__tostring()
		return Name
	end

	return self
end

return Symbol
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX3bc979b7dad34659a44083f65a823fe1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">services</string>
						<string name="ScriptGuid">{b966e0b4-25d3-4ac9-8bc6-bf1742ef71ae}</string>
						<ProtectedString name="Source"><![CDATA[return setmetatable({}, {
	__index = function(self, serviceName)
		local service = game:GetService(serviceName)
		self[serviceName] = service
		return service
	end,
})
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX10a0eac847ba496d83c6fb864fa044e9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">flamework</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX8601e668834a48cfb202f693ab47f564">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">out</string>
							<string name="ScriptGuid">{2e6a140e-3b2b-4e66-9a18-e7a75ac764fc}</string>
							<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.1.1-dev.28798ed
local TS = _G[script]
local exports = {}
local _flamework_0 = TS.import(script, script, "flamework")
exports.Component = _flamework_0.Component
exports.Controller = _flamework_0.Controller
exports.Dependency = _flamework_0.Dependency
exports.External = _flamework_0.External
exports.Service = _flamework_0.Service
exports.Flamework = _flamework_0.Flamework
exports.Networking = TS.import(script, script, "networking").Networking
local _components_1 = TS.import(script, script, "components")
exports.BaseComponent = _components_1.BaseComponent
exports.Components = _components_1.Components
return exports
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX2a67c427fb3f4d409defa8480a477e39">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">components</string>
								<string name="ScriptGuid">{1dc80cd8-934e-4247-bffb-db439baa8a02}</string>
								<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.1.1-dev.28798ed
local TS = _G[script]
local Maid = TS.import(script, TS.getModule(script, "maid").Maid)
local CollectionService = TS.import(script, TS.getModule(script, "services")).CollectionService
local Flamework = TS.import(script, script.Parent, "flamework").Flamework
-- xpcall types are broken, so this is a workaround
local xpcall2 = xpcall
local BaseComponent
do
	BaseComponent = setmetatable({}, {
		__tostring = function()
			return "BaseComponent"
		end,
	})
	BaseComponent.__index = BaseComponent
	function BaseComponent.new(...)
		local self = setmetatable({}, BaseComponent)
		self:constructor(...)
		return self
	end
	function BaseComponent:constructor()
		self.maid = Maid.new()
		self._attributeChangeHandlers = {}
	end
	function BaseComponent:setInstance(instance)
		self.instance = instance
		self.attributes = instance:GetAttributes()
	end
	function BaseComponent:onAttributeChanged(name, cb)
		local _0 = self._attributeChangeHandlers
		local _1 = name
		local list = _0[_1]
		if not list then
			local _2 = self._attributeChangeHandlers
			local _3 = name
			list = {}
			local _4 = list
			-- ▼ Map.set ▼
			_2[_3] = _4
			-- ▲ Map.set ▲
		end
		local _2 = list
		local _3 = cb
		-- ▼ Array.push ▼
		_2[#_2 + 1] = _3
		-- ▲ Array.push ▲
	end
	function BaseComponent:destroy()
		self.maid:Destroy()
	end
end
--[[
	*
	* This class is responsible for loading and managing
	* all components in the game.
]]
local Components
do
	Components = setmetatable({}, {
		__tostring = function()
			return "Components"
		end,
	})
	Components.__index = Components
	function Components.new(...)
		local self = setmetatable({}, Components)
		self:constructor(...)
		return self
	end
	function Components:constructor()
		self.components = {}
		self.activeComponents = {}
		self.tick = {}
		self.physics = {}
		self.render = {}
	end
	function Components:onInit()
		local components = {}
		for ctor, metadata in pairs(Flamework.metadata) do
			local _0 = metadata.decorators
			local _1 = function(x)
				return x.config
			end
			-- ▼ ReadonlyArray.map ▼
			local _2 = table.create(#_0)
			for _k_3, _v_4 in ipairs(_0) do
				_2[_k_3] = _1(_v_4, _k_3 - 1, _0)
			end
			-- ▲ ReadonlyArray.map ▲
			local _3 = function(x)
				return x.type == "Component"
			end
			-- ▼ ReadonlyArray.find ▼
			local _4 = nil
			for _i_5, _v_6 in ipairs(_2) do
				if _3(_v_6, _i_5 - 1, _2) == true then
					_4 = _v_6
					break
				end
			end
			-- ▲ ReadonlyArray.find ▲
			local component = _4
			if component then
				local _5 = components
				local _6 = ctor
				local _7 = {
					metadata = metadata,
					ctor = ctor,
					config = component,
				}
				-- ▼ Map.set ▼
				_5[_6] = _7
				-- ▲ Map.set ▲
			end
		end
		self.components = components
	end
	function Components:onStart()
		for _, _binding_0 in pairs(self.components) do
			local config = _binding_0.config
			local ctor = _binding_0.ctor
			local metadata = _binding_0.metadata
			if config.tag ~= nil then
				CollectionService:GetInstanceAddedSignal(config.tag):Connect(function(instance)
					self:addComponent(instance, ctor)
				end)
				CollectionService:GetInstanceRemovedSignal(config.tag):Connect(function(instance)
					self:removeComponent(instance, ctor)
				end)
				for _, instance in ipairs(CollectionService:GetTagged(config.tag)) do
					self:safeCall("Failed to instantiate " .. tostring(instance), function()
						return self:addComponent(instance, ctor)
					end)
				end
			end
		end
	end
	function Components:onTick(dt)
		for component in pairs(self.tick) do
			local name = component.instance:GetFullName()
			self:safeCall("Component failed to tick " .. name, function()
				return component:onTick(dt)
			end)
		end
	end
	function Components:onRender(dt)
		for component in pairs(self.render) do
			local name = component.instance:GetFullName()
			self:safeCall("Component failed to tick " .. name, function()
				return component:onRender(dt)
			end)
		end
	end
	function Components:onPhysics(dt, time)
		for component in pairs(self.physics) do
			local name = component.instance:GetFullName()
			self:safeCall("Component failed to tick " .. name, function()
				return component:onPhysics(dt, time)
			end)
		end
	end
	function Components:getAttributes(ctor)
		local attributes = {}
		local _0 = self.components
		local _1 = ctor
		local metadata = _0[_1]
		if metadata then
			if metadata.config.attributes ~= nil then
				for attribute, guard in pairs(metadata.config.attributes) do
					local _2 = attributes
					local _3 = attribute
					local _4 = guard
					-- ▼ Map.set ▼
					_2[_3] = _4
					-- ▲ Map.set ▲
				end
			end
			local parentCtor = getmetatable(ctor)
			if parentCtor.__index ~= nil then
				for attribute, guard in pairs(self:getAttributes(parentCtor.__index)) do
					local _2 = attributes
					local _3 = attribute
					if not (_2[_3] ~= nil) then
						local _4 = attributes
						local _5 = attribute
						local _6 = guard
						-- ▼ Map.set ▼
						_4[_5] = _6
						-- ▲ Map.set ▲
					end
				end
			end
		end
		return attributes
	end
	function Components:getInstanceGuard(ctor)
		local _0 = self.components
		local _1 = ctor
		local metadata = _0[_1]
		if metadata then
			if metadata.config.instanceGuard ~= nil then
				return metadata.config.instanceGuard
			end
			local parentCtor = getmetatable(ctor)
			if parentCtor.__index ~= nil then
				return self:getInstanceGuard(parentCtor.__index)
			end
		end
	end
	function Components:validateAttributes(instance, guards)
		local attributes = instance:GetAttributes()
		for key, guard in pairs(guards) do
			local attribute = attributes[key]
			if not guard(attribute) then
				return false
			end
		end
		return true
	end
	function Components:safeCall(message, func)
		coroutine.wrap(function()
			xpcall2(func, function(err)
				local _0 = err
				if type(_0) == "string" then
					local stack = debug.traceback(err, 2)
					warn(message)
					warn(stack)
				else
					warn(message)
					warn(err)
					warn(debug.traceback(nil, 2))
				end
			end)
		end)()
	end
	function Components:setupComponent(instance, component, _param_0)
		local config = _param_0.config
		local ctor = _param_0.ctor
		component:setInstance(instance)
		if Flamework._implements(component, "$:4R") then
			local name = instance:GetFullName()
			self:safeCall("Component failed to start " .. name, function()
				return component:onStart()
			end)
		end
		if Flamework._implements(component, "$:Q0") then
			local _1 = self.render
			local _2 = component
			-- ▼ Set.add ▼
			_1[_2] = true
			-- ▲ Set.add ▲
			component.maid:GiveTask(function()
				local _3 = self.render
				local _4 = component
				-- ▼ Set.delete ▼
				local _5 = _3[_4] ~= nil
				_3[_4] = nil
				-- ▲ Set.delete ▲
				return _5
			end)
		end
		if Flamework._implements(component, "$:yM") then
			local _1 = self.physics
			local _2 = component
			-- ▼ Set.add ▼
			_1[_2] = true
			-- ▲ Set.add ▲
			component.maid:GiveTask(function()
				local _3 = self.physics
				local _4 = component
				-- ▼ Set.delete ▼
				local _5 = _3[_4] ~= nil
				_3[_4] = nil
				-- ▲ Set.delete ▲
				return _5
			end)
		end
		if Flamework._implements(component, "$:l2") then
			local _1 = self.tick
			local _2 = component
			-- ▼ Set.add ▼
			_1[_2] = true
			-- ▲ Set.add ▲
			component.maid:GiveTask(function()
				local _3 = self.tick
				local _4 = component
				-- ▼ Set.delete ▼
				local _5 = _3[_4] ~= nil
				_3[_4] = nil
				-- ▲ Set.delete ▲
				return _5
			end)
		end
		if config.refreshAttributes == nil or config.refreshAttributes then
			local attributes = self:getAttributes(ctor)
			for attribute, guard in pairs(attributes) do
				local _1 = attribute
				if type(_1) == "string" then
					component.maid:GiveTask(instance:GetAttributeChangedSignal(attribute):Connect(function()
						local _2 = component._attributeChangeHandlers
						local _3 = attribute
						local handlers = _2[_3]
						local value = instance:GetAttribute(attribute)
						local attributes = component.attributes
						if guard(value) then
							if handlers then
								for _, handler in ipairs(handlers) do
									self:safeCall("Failed to call onAttributeChanged for " .. attribute, function()
										local _4 = attributes
										local _5 = attribute
										return handler(value, _4[_5])
									end)
								end
							end
							local _4 = attributes
							local _5 = attribute
							local _6 = value
							-- ▼ Map.set ▼
							_4[_5] = _6
							-- ▲ Map.set ▲
						end
					end))
				end
			end
		end
	end
	function Components:getComponentFromSpecifier(componentSpecifier)
		local _1 = componentSpecifier
		local _result_2
		if type(_1) == "string" then
			local _3 = Flamework.idToTarget
			local _4 = componentSpecifier
			_result_2 = (_3[_4])
		else
			_result_2 = componentSpecifier
		end
		return _result_2
	end
	function Components:getComponent(instance, componentSpecifier)
		local component = self:getComponentFromSpecifier(componentSpecifier)
		local _1 = component
		assert(_1 ~= 0 and _1 == _1 and _1 ~= "" and _1, "Could not find component from specifier")
		local _2 = self.activeComponents
		local _3 = instance
		local activeComponents = _2[_3]
		if not activeComponents then
			return nil
		end
		local _4 = activeComponents
		local _5 = component
		return _4[_5]
	end
	function Components:addComponent(instance, componentSpecifier)
		local component = self:getComponentFromSpecifier(componentSpecifier)
		local _1 = component
		assert(_1 ~= 0 and _1 == _1 and _1 ~= "" and _1, "Could not find component from specifier")
		local _2 = self.components
		local _3 = component
		local componentInfo = _2[_3]
		local _4 = componentInfo
		assert(_4, "Provided componentSpecifier does not exist")
		local attributeGuards = self:getAttributes(component)
		if attributeGuards ~= nil then
			local _5 = self:validateAttributes(instance, attributeGuards)
			local _6 = instance:GetFullName() .. " has invalid attributes for " .. componentInfo.metadata.identifier
			assert(_5, _6)
		end
		local instanceGuard = self:getInstanceGuard(component)
		if instanceGuard ~= nil then
			local _5 = instanceGuard(instance)
			local _6 = instance:GetFullName() .. " did not pass instance guard check"
			assert(_5, _6)
		end
		local _5 = self.activeComponents
		local _6 = instance
		local activeComponents = _5[_6]
		if not activeComponents then
			local _7 = self.activeComponents
			activeComponents = {}
			local _8 = instance
			local _9 = activeComponents
			-- ▼ Map.set ▼
			_7[_8] = _9
			-- ▲ Map.set ▲
		end
		local _7 = activeComponents
		local _8 = component
		local existingComponent = _7[_8]
		if existingComponent ~= nil then
			return existingComponent
		end
		local componentInstance = Flamework.createDependency(component)
		local _9 = activeComponents
		local _10 = component
		local _11 = componentInstance
		-- ▼ Map.set ▼
		_9[_10] = _11
		-- ▲ Map.set ▲
		self:setupComponent(instance, componentInstance, componentInfo)
		return componentInstance
	end
	function Components:removeComponent(instance, componentSpecifier)
		local component = self:getComponentFromSpecifier(componentSpecifier)
		local _1 = component
		assert(_1 ~= 0 and _1 == _1 and _1 ~= "" and _1, "Could not find component from specifier")
		local _2 = self.activeComponents
		local _3 = instance
		local activeComponents = _2[_3]
		if not activeComponents then
			return nil
		end
		local _4 = activeComponents
		local _5 = component
		local existingComponent = _4[_5]
		if not existingComponent then
			return nil
		end
		existingComponent:destroy()
		local _6 = activeComponents
		local _7 = component
		-- ▼ Map.delete ▼
		_6[_7] = nil
		-- ▲ Map.delete ▲
		-- ▼ ReadonlyMap.size ▼
		local _8 = 0
		for _ in pairs(activeComponents) do
			_8 += 1
		end
		-- ▲ ReadonlyMap.size ▲
		if _8 == 0 then
			local _9 = self.activeComponents
			local _10 = instance
			-- ▼ Map.delete ▼
			_9[_10] = nil
			-- ▲ Map.delete ▲
		end
	end
end
Flamework.registerMetadata(Components, {
	identifier = "$:p2",
	isExternal = false,
	decorators = { {
		identifier = "$:dz",
		config = {
			type = "Service",
			loadOrder = 0,
		},
	}, {
		identifier = "$:8j",
		config = {
			type = "Controller",
			loadOrder = 0,
		},
	} },
	implements = { "$:7w", "$:4R", "$:l2", "$:yM", "$:Q0" },
})
return {
	BaseComponent = BaseComponent,
	Components = Components,
}
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX17fd968efc43435c8e86d5be80beeba6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">flamework</string>
								<string name="ScriptGuid">{2fbf5735-76c8-4c1f-bcf5-b185f6a0ffd9}</string>
								<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.1.1-dev.28798ed
local TS = _G[script]
local _services_0 = TS.import(script, TS.getModule(script, "services"))
local Players = _services_0.Players
local RunService = _services_0.RunService
local Flamework
local Flamework = {}
do
	local _container_1 = Flamework
	local flameworkConfig = {
		isDefault = true,
	}
	_container_1.flameworkConfig = flameworkConfig
	_container_1.isInitialized = false
	local metadata = {}
	_container_1.metadata = metadata
	local targetToId = {}
	_container_1.targetToId = targetToId
	local idToTarget = {}
	_container_1.idToTarget = idToTarget
	-- * @hidden
	local function registerMetadata(target, data)
		local ctor = target
		local _2 = metadata
		local _3 = ctor
		local _4 = data
		-- ▼ Map.set ▼
		_2[_3] = _4
		-- ▲ Map.set ▲
		local _5 = targetToId
		local _6 = ctor
		local _7 = data.identifier
		-- ▼ Map.set ▼
		_5[_6] = _7
		-- ▲ Map.set ▲
		local _8 = idToTarget
		local _9 = data.identifier
		local _10 = ctor
		-- ▼ Map.set ▼
		_8[_9] = _10
		-- ▲ Map.set ▲
	end
	_container_1.registerMetadata = registerMetadata
	local resolvedDependencies = {}
	local loadingList = {}
	-- * @hidden
	local id, resolveDependency
	local function createDependency(ctor)
		local _2 = loadingList
		local _3 = ctor
		if table.find(_2, _3) ~= nil then
			-- ▼ ReadonlyArray.join ▼
			local _4 = " <=> "
			if _4 == nil then
				_4 = ", "
			end
			local _5 = table.create(#loadingList)
			for _k_6, _v_7 in ipairs(loadingList) do
				_5[_k_6] = tostring(_v_7)
			end
			-- ▲ ReadonlyArray.join ▲
			error("Circular dependency detected " .. table.concat(_5, _4) .. " <=> " .. tostring(ctor))
		end
		local _4 = loadingList
		local _5 = ctor
		-- ▼ Array.push ▼
		_4[#_4 + 1] = _5
		-- ▲ Array.push ▲
		local _6 = metadata
		local _7 = ctor
		local dependencyMetadata = _6[_7]
		if not dependencyMetadata then
			error("Dependency " .. tostring(id) .. " metadata is missing.")
		end
		local constructorDependencies = {}
		if dependencyMetadata.dependencies then
			for index, dependencyId in pairs(dependencyMetadata.dependencies) do
				local dependency = resolveDependency(dependencyId)
				constructorDependencies[index - 1 + 1] = dependency
			end
		end
		local dependency = ctor.new(unpack(constructorDependencies))
		-- ▼ Array.pop ▼
		loadingList[#loadingList] = nil
		-- ▲ Array.pop ▲
		return dependency
	end
	_container_1.createDependency = createDependency
	-- * @hidden
	function resolveDependency(id)
		local _2 = resolvedDependencies
		local _3 = id
		local resolvedDependency = _2[_3]
		if resolvedDependency ~= nil then
			return resolvedDependency
		end
		local _4 = idToTarget
		local _5 = id
		local ctor = _4[_5]
		if ctor == nil then
			error("Dependency " .. id .. " could not be found.")
		end
		local dependency = createDependency(ctor)
		local _6 = resolvedDependencies
		local _7 = id
		local _8 = dependency
		-- ▼ Map.set ▼
		_6[_7] = _8
		-- ▲ Map.set ▲
		return dependency
	end
	_container_1.resolveDependency = resolveDependency
	-- * @hidden
	local function _addPaths(...)
		local args = { ... }
		local preloadPaths = {}
		for _, arg in ipairs(args) do
			local service = table.remove(arg, 1)
			local currentPath = game:GetService(service)
			if service == "StarterPlayer" then
				if arg[1] ~= "StarterPlayerScripts" then
					error("StarterPlayer only supports StarterPlayerScripts")
				end
				if not RunService:IsClient() then
					error("The server cannot load StarterPlayer content")
				end
				currentPath = Players.LocalPlayer:WaitForChild("PlayerScripts")
				table.remove(arg, 1)
			end
			do
				local _2 = false
				local _i_3 = 0
				local _4 = _i_3
				_i_3 = _4
				while true do
					local i = _i_3
					if _2 then
						i += 1
					else
						_2 = true
					end
					if not (i < #arg) then
						break
					end
					currentPath = currentPath:WaitForChild(arg[i + 1])
					_i_3 = i
				end
			end
			local _2 = preloadPaths
			local _3 = currentPath
			-- ▼ Array.push ▼
			_2[#_2 + 1] = _3
			-- ▲ Array.push ▲
		end
		local preload = function(moduleScript)
			local start = os.clock()
			local _2 = require
			local _3 = moduleScript
			local _success_4, _valueOrError_5 = pcall(_2, _3)
			local result = _success_4 and {
				success = true,
				value = _valueOrError_5,
			} or {
				success = false,
				error = _valueOrError_5,
			}
			local endTime = math.floor((os.clock() - start) * 1000)
			if not result.success then
				error(moduleScript:GetFullName() .. " failed to preload (" .. tostring(endTime) .. "ms): " .. result.error)
			end
			print("Preloaded " .. moduleScript:GetFullName() .. " (" .. tostring(endTime) .. "ms)")
		end
		for _, path in ipairs(preloadPaths) do
			if path:IsA("ModuleScript") then
				preload(path)
			end
			for _, instance in ipairs(path:GetDescendants()) do
				if instance:IsA("ModuleScript") then
					preload(instance)
				end
			end
		end
	end
	_container_1._addPaths = _addPaths
	-- * @hidden
	local function _implements(object, id)
		local objectMetadata
		while objectMetadata == nil and object ~= nil do
			local _2 = metadata
			local _3 = object
			objectMetadata = _2[_3]
			if objectMetadata then
				break
			end
			local mt = getmetatable(object)
			if mt then
				object = mt.__index
			else
				object = nil
			end
		end
		if not objectMetadata then
			return false
		end
		if not objectMetadata.implements then
			return false
		end
		local _2 = objectMetadata.implements
		local _3 = id
		return table.find(_2, _3) ~= nil
	end
	_container_1._implements = _implements
	local function getDecorator(ctor, configType)
		local _2 = metadata
		local _3 = ctor
		local objectMetadata = _2[_3]
		if not objectMetadata then
			return nil
		end
		for _, decorator in ipairs(objectMetadata.decorators) do
			if decorator.config.type == configType then
				return decorator
			end
		end
	end
	local function fastSpawn(func)
		local bindable = Instance.new("BindableEvent")
		bindable.Event:Connect(func)
		bindable:Fire()
		bindable:Destroy()
	end
	local externalClasses = {}
	--[[
		*
		* Allow an external module to be bootstrapped by Flamework.ignite()
	]]
	local function registerExternalClass(ctor)
		local _2 = externalClasses
		local _3 = ctor
		-- ▼ Set.add ▼
		_2[_3] = true
		-- ▲ Set.add ▲
	end
	_container_1.registerExternalClass = registerExternalClass
	local hasFlameworkIgnited = false
	--[[
		*
		* Initialize Flamework.
		*
		* This will start up the lifecycle events on all currently registered
		* classes.
		*
		* You should preload all necessary directories before calling this
		* as newly registered classes will not run their lifecycle events.
		*
		* @returns All the dependencies that have been loaded.
	]]
	local function ignite(patchedConfig)
		if hasFlameworkIgnited then
			error("Flamework.ignite() should only be called once")
		end
		hasFlameworkIgnited = true
		if patchedConfig then
			for key, value in pairs(patchedConfig) do
				flameworkConfig[key] = value
			end
		end
		for ctor, objectMetadata in pairs(metadata) do
			local _condition_2 = flameworkConfig.loadOverride
			if _condition_2 then
				local _3 = flameworkConfig.loadOverride
				local _4 = ctor
				_condition_2 = not (table.find(_3, _4) ~= nil)
			end
			if _condition_2 then
				if not objectMetadata.isPatched then
					continue
				end
			end
			resolveDependency(objectMetadata.identifier)
		end
		local dependencies = {}
		local decoratorType = RunService:IsServer() and "Service" or "Controller"
		for id in pairs(resolvedDependencies) do
			local _2 = idToTarget
			local _3 = id
			local ctor = _2[_3]
			if ctor == nil then
				error("Could not find constructor for " .. id)
			end
			local _4 = metadata
			local _5 = ctor
			local objectMetadata = _4[_5]
			if objectMetadata == nil then
				error("Could not find metadata for " .. id)
			end
			local decorator = getDecorator(ctor, decoratorType)
			if not decorator then
				continue
			end
			local _condition_6 = objectMetadata.isExternal
			if _condition_6 then
				local _7 = externalClasses
				local _8 = ctor
				_condition_6 = not (_7[_8] ~= nil)
			end
			if _condition_6 then
				continue
			end
			local dependency = resolveDependency(objectMetadata.identifier)
			local _7 = dependencies
			local _8 = { dependency, objectMetadata, decorator.config }
			-- ▼ Array.push ▼
			_7[#_7 + 1] = _8
			-- ▲ Array.push ▲
		end
		local start = {}
		local init = {}
		local tick = {}
		local render = {}
		local physics = {}
		local _2 = dependencies
		local _3 = function(_param_4, _param_5)
			local a = _param_4[3]
			local b = _param_5[3]
			local _condition_6 = a.loadOrder
			if _condition_6 == nil then
				_condition_6 = 1
			end
			local _condition_7 = b.loadOrder
			if _condition_7 == nil then
				_condition_7 = 1
			end
			return _condition_6 < _condition_7
		end
		-- ▼ Array.sort ▼
		table.sort(_2, _3)
		-- ▲ Array.sort ▲
		for _, _binding_6 in ipairs(dependencies) do
			local dependency = _binding_6[1]
			local objectMetadata = _binding_6[2]
			local config = _binding_6[3]
			if Flamework._implements(dependency, "$:7w") then
				local _7 = init
				local _8 = { dependency, objectMetadata, config }
				-- ▼ Array.push ▼
				_7[#_7 + 1] = _8
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:4R") then
				local _7 = start
				local _8 = { dependency, objectMetadata, config }
				-- ▼ Array.push ▼
				_7[#_7 + 1] = _8
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:l2") then
				local _7 = tick
				local _8 = dependency
				-- ▼ Array.push ▼
				_7[#_7 + 1] = _8
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:yM") then
				local _7 = physics
				local _8 = dependency
				-- ▼ Array.push ▼
				_7[#_7 + 1] = _8
				-- ▲ Array.push ▲
			end
			if Flamework._implements(dependency, "$:Q0") then
				local _7 = render
				local _8 = dependency
				-- ▼ Array.push ▼
				_7[#_7 + 1] = _8
				-- ▲ Array.push ▲
			end
		end
		for _, _binding_6 in ipairs(init) do
			local dependency = _binding_6[1]
			local initResult = dependency:onInit()
			if TS.Promise.is(initResult) then
				initResult:await()
			end
		end
		_container_1.isInitialized = true
		RunService.Heartbeat:Connect(function(dt)
			for _, dependency in ipairs(tick) do
				coroutine.wrap(function()
					return dependency:onTick(dt)
				end)()
			end
		end)
		RunService.Stepped:Connect(function(time, dt)
			for _, dependency in ipairs(physics) do
				coroutine.wrap(function()
					return dependency:onPhysics(dt, time)
				end)()
			end
		end)
		if RunService:IsClient() then
			RunService.RenderStepped:Connect(function(dt)
				for _, dependency in ipairs(render) do
					coroutine.wrap(function()
						return dependency:onRender(dt)
					end)()
				end
			end)
		end
		for _, _binding_6 in ipairs(start) do
			local dependency = _binding_6[1]
			fastSpawn(function()
				return dependency:onStart()
			end)
		end
		return dependencies
	end
	_container_1.ignite = ignite
	--[[
		*
		* Preload the specified paths by requiring all ModuleScript descendants.
	]]
	--[[
		*
		* Retrieve the identifier for the specified type.
	]]
	--[[
		*
		* Check if object implements the specified interface.
	]]
	--[[
		*
		* Creates a type guard from any arbitrary type.
	]]
	--[[
		*
		* Creates a type guard from any arbitrary type.
	]]
	--[[
		*
		* Hash a function using the method used internally by Flamework.
		* If a context is provided, then Flamework will create a new hash
		* if the specified string does not have one in that context.
		* @param str The string to hash
		* @param context A scope for the hash
	]]
	--[[
		*
		* Utility for use in test suites, not recommended for anything else.
	]]
	local Testing = {}
	do
		local _container_2 = Testing
		local function patchDependency(patchedClass, id)
			if id == nil then
				error("Patching failed, no ID")
			end
			local _3 = resolvedDependencies
			local _4 = id
			if _3[_4] ~= nil then
				error(id .. " has already been resolved, continuing is unsafe")
			end
			local _5 = idToTarget
			local _6 = id
			local idCtor = _5[_6]
			if idCtor == nil then
				error("Dependency " .. id .. " was not found and cannot be patched.")
			end
			local _7 = metadata
			local _8 = idCtor
			local classMetadata = _7[_8]
			if not classMetadata then
				error("Dependency " .. id .. " has no existing metadata.")
			end
			classMetadata.isPatched = true
			local _9 = metadata
			local _10 = idCtor
			-- ▼ Map.delete ▼
			_9[_10] = nil
			-- ▲ Map.delete ▲
			local _11 = metadata
			local _12 = patchedClass
			local _13 = classMetadata
			-- ▼ Map.set ▼
			_11[_12] = _13
			-- ▲ Map.set ▲
			local _14 = targetToId
			local _15 = patchedClass
			local _16 = id
			-- ▼ Map.set ▼
			_14[_15] = _16
			-- ▲ Map.set ▲
			local _17 = idToTarget
			local _18 = id
			local _19 = patchedClass
			-- ▼ Map.set ▼
			_17[_18] = _19
			-- ▲ Map.set ▲
		end
		_container_2.patchDependency = patchDependency
	end
	_container_1.Testing = Testing
end
-- eslint-disable-next-line @typescript-eslint/no-explicit-any
--[[
	*
	* Register a class as a Component.
]]
--[[
	*
	* Register a class as a Service.
	*
	* @server
]]
--[[
	*
	* Register a class as a Controller.
	*
	* @client
]]
--[[
	*
	* Marks this class as an external class.
	*
	* External classes are designed for packages and won't be
	* bootstrapped unless explicitly specified. Excluding this
	* inside of a package will make the class load as long as
	* it has been loaded.
]]
--[[
	*
	* Hook into the OnInit lifecycle event.
]]
--[[
	*
	* Hook into the OnStart lifecycle event.
]]
--[[
	*
	* Hook into the OnTick lifecycle event.
	* Equivalent to: RunService.Heartbeat
]]
--[[
	*
	* Hook into the OnPhysics lifecycle event.
	* Equivalent to: RunService.Stepped
]]
--[[
	*
	* Hook into the OnRender lifecycle event.
	* Equivalent to: RunService.RenderStepped
	*
	* @client
]]
return {
	Flamework = Flamework,
}
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX7ded0a4d7df54541845d5b49df7b8765">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">networking</string>
								<string name="ScriptGuid">{8bfcd828-db84-4725-8fe8-3e5424c2cd6e}</string>
								<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.1.1-dev.28798ed
local TS = _G[script]
local Object = TS.import(script, TS.getModule(script, "object-utils"))
local _services_0 = TS.import(script, TS.getModule(script, "services"))
local Players = _services_0.Players
local ReplicatedStorage = _services_0.ReplicatedStorage
local RunService = _services_0.RunService
local Networking = {}
do
	local _container_1 = Networking
	local Sink = {}
	_container_1.Sink = Sink
	local function populateEvents(names, map)
		for _, name in ipairs(names) do
			if RunService:IsClient() then
				local instance = ReplicatedStorage:WaitForChild(name)
				if instance:IsA("RemoteEvent") then
					local _2 = map
					local _3 = name
					local _4 = instance
					-- ▼ Map.set ▼
					_2[_3] = _4
					-- ▲ Map.set ▲
				end
			else
				local instance = ReplicatedStorage:FindFirstChild(name)
				if instance then
					if not instance:IsA("RemoteEvent") then
						error("Found " .. name .. " but it is not a remote.")
					end
					local _2 = map
					local _3 = name
					local _4 = instance
					-- ▼ Map.set ▼
					_2[_3] = _4
					-- ▲ Map.set ▲
				else
					local remote = Instance.new("RemoteEvent")
					remote.Name = name
					remote.Parent = ReplicatedStorage
					local _2 = map
					local _3 = name
					local _4 = remote
					-- ▼ Map.set ▼
					_2[_3] = _4
					-- ▲ Map.set ▲
				end
			end
		end
	end
	local function createEvent(_serverGuards, _clientGuards, serverMiddleware, clientMiddleware)
		local serverGuards = _serverGuards
		local clientGuards = _clientGuards
		local globalEvents = {}
		local remotes = {}
		populateEvents(Object.keys(serverGuards), remotes)
		populateEvents(Object.keys(clientGuards), remotes)
		local _result_2
		if RunService:IsServer() then
			_result_2 = serverMiddleware
		else
			_result_2 = clientMiddleware
		end
		local middleware = _result_2
		local connections = {}
		local eventExecutors = {}
		for name in pairs(remotes) do
			local executor = function(player, ...)
				local args = { ... }
				local _3 = connections
				local _4 = name
				local bindable = _3[_4]
				if not bindable then
					return warn("no bindable for", name)
				end
				return bindable:Fire(player, unpack(args))
			end
			local startingExecutor = executor
			local _3 = middleware
			if _3 ~= nil then
				_3 = _3[name]
			end
			local eventMiddleware = _3
			if eventMiddleware ~= nil then
				do
					local _4 = false
					local _i_5 = #eventMiddleware - 1
					local _6 = _i_5
					_i_5 = _6
					while true do
						local i = _i_5
						if _4 then
							i -= 1
						else
							_4 = true
						end
						if not (i >= 0) then
							break
						end
						local middleware = eventMiddleware[i + 1](startingExecutor, {
							name = name,
						})
						startingExecutor = middleware
						_i_5 = i
					end
				end
			end
			local _4 = eventExecutors
			local _5 = name
			local _6 = startingExecutor
			-- ▼ Map.set ▼
			_4[_5] = _6
			-- ▲ Map.set ▲
		end
		local function fireConnections(event, player, ...)
			local args = { ... }
			local _3 = eventExecutors
			local _4 = event
			local executor = _3[_4]
			if executor ~= nil then
				return executor(player, unpack(args))
			end
		end
		if RunService:IsServer() then
			globalEvents.server = {}
			globalEvents.server.connect = function(self, event, cb, additionalGuards)
				local _3 = remotes
				local _4 = event
				local remote = _3[_4]
				local guards = serverGuards[event]
				if not remote then
					error("Could not find remote " .. tostring(event))
				end
				if not guards then
					error("Could not find guards for " .. tostring(event))
				end
				local _5 = connections
				local _6 = event
				local bindable = _5[_6]
				if not bindable then
					local _7 = connections
					local _8 = event
					bindable = Instance.new("BindableEvent")
					local _9 = bindable
					-- ▼ Map.set ▼
					_7[_8] = _9
					-- ▲ Map.set ▲
				end
				return bindable.Event:Connect(function(player, ...)
					local args = { ... }
					if additionalGuards then
						do
							local _7 = false
							local _i_8 = 0
							local _9 = _i_8
							_i_8 = _9
							while true do
								local i = _i_8
								if _7 then
									i += 1
								else
									_7 = true
								end
								if not (i < #guards) then
									break
								end
								local guard = additionalGuards[i + 1]
								if guard ~= nil and not guard(args[i + 1]) then
									return nil
								end
								_i_8 = i
							end
						end
					end
					return cb(player, unpack(args))
				end)
			end
			for name in pairs(clientGuards) do
				local _3 = remotes
				local _4 = name
				local remote = _3[_4]
				local method = {
					fire = function(self, player, ...)
						local args = { ... }
						remote:FireClient(player, unpack(args))
					end,
					broadcast = function(self, ...)
						local args = { ... }
						remote:FireAllClients(unpack(args))
					end,
					except = function(self, players, ...)
						local args = { ... }
						local _5 = players
						if typeof(_5) == "Instance" then
							players = { players }
						end
						for _, player in ipairs(Players:GetPlayers()) do
							local _6 = players
							local _7 = player
							if not (table.find(_6, _7) ~= nil) then
								self:fire(player, unpack(args))
							end
						end
					end,
				}
				setmetatable(method, {
					__call = function(method, player, ...)
						local args = { ... }
						local _5 = player
						local _condition_6 = typeof(_5) == "Instance"
						if _condition_6 then
							_condition_6 = player:IsA("Player")
						end
						if _condition_6 then
							method:fire(player, unpack(args))
						end
					end,
				})
				globalEvents.server[name] = method
			end
			for name, remote in pairs(remotes) do
				remote.OnServerEvent:Connect(function(player, ...)
					local args = { ... }
					local guards = serverGuards[name]
					if not guards then
						error("Could not find guards for " .. name)
					end
					do
						local _3 = false
						local _i_4 = 0
						local _5 = _i_4
						_i_4 = _5
						while true do
							local i = _i_4
							if _3 then
								i += 1
							else
								_3 = true
							end
							if not (i < #guards) then
								break
							end
							local guard = guards[i + 1]
							if not guard(args[i + 1]) then
								return nil
							end
							_i_4 = i
						end
					end
					fireConnections(name, player, unpack(args))
				end)
			end
		else
			globalEvents.client = {}
			globalEvents.client.connect = function(self, event, cb, additionalGuards)
				local _3 = remotes
				local _4 = event
				local remote = _3[_4]
				local guards = clientGuards[event]
				if not remote then
					error("Could not find remote " .. tostring(event))
				end
				if not guards then
					error("Could not find guards for " .. tostring(event))
				end
				local _5 = connections
				local _6 = event
				local bindable = _5[_6]
				if not bindable then
					local _7 = connections
					local _8 = event
					bindable = Instance.new("BindableEvent")
					local _9 = bindable
					-- ▼ Map.set ▼
					_7[_8] = _9
					-- ▲ Map.set ▲
				end
				return bindable.Event:Connect(function(player, ...)
					local args = { ... }
					if additionalGuards then
						do
							local _7 = false
							local _i_8 = 0
							local _9 = _i_8
							_i_8 = _9
							while true do
								local i = _i_8
								if _7 then
									i += 1
								else
									_7 = true
								end
								if not (i < #guards) then
									break
								end
								local guard = additionalGuards[i + 1]
								if guard ~= nil and not guard(args[i + 1]) then
									return nil
								end
								_i_8 = i
							end
						end
					end
					return cb(unpack(args))
				end)
			end
			for name in pairs(serverGuards) do
				local _3 = remotes
				local _4 = name
				local remote = _3[_4]
				globalEvents.client[name] = (function(...)
					local args = { ... }
					remote:FireServer(unpack(args))
				end)
			end
			for name, remote in pairs(remotes) do
				remote.OnClientEvent:Connect(function(...)
					local args = { ... }
					local guards = clientGuards[name]
					if not guards then
						error("Could not find guards for " .. name)
					end
					do
						local _3 = false
						local _i_4 = 0
						local _5 = _i_4
						_i_4 = _5
						while true do
							local i = _i_4
							if _3 then
								i += 1
							else
								_3 = true
							end
							if not (i < #guards) then
								break
							end
							local guard = guards[i + 1]
							if not guard(args[i + 1]) then
								return nil
							end
							_i_4 = i
						end
					end
					fireConnections(name, nil, unpack(args))
				end)
			end
		end
		return globalEvents
	end
	_container_1.createEvent = createEvent
end
return {
	Networking = Networking,
}
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX97fddf0738df44dda3e4cb1f04eaafd1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">rodux</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX69f691a8a4e24391891e295ae83db7b6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">src</string>
							<string name="ScriptGuid">{83220b98-87a5-40c3-9a4f-c9aa44e73183}</string>
							<ProtectedString name="Source"><![CDATA[local Store = require(script.Store)
local createReducer = require(script.createReducer)
local combineReducers = require(script.combineReducers)
local makeActionCreator = require(script.makeActionCreator)
local loggerMiddleware = require(script.loggerMiddleware)
local thunkMiddleware = require(script.thunkMiddleware)

return {
	Store = Store,
	createReducer = createReducer,
	combineReducers = combineReducers,
	makeActionCreator = makeActionCreator,
	loggerMiddleware = loggerMiddleware.middleware,
	thunkMiddleware = thunkMiddleware,
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX36962617c95b4969b4b10cd41674b12e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">NoYield</string>
								<string name="ScriptGuid">{f099a5dd-2b2a-4c8d-a756-e39f7af3308c}</string>
								<ProtectedString name="Source"><![CDATA[--!nocheck

--[[
	Calls a function and throws an error if it attempts to yield.

	Pass any number of arguments to the function after the callback.

	This function supports multiple return; all results returned from the
	given function will be returned.
]]

local function resultHandler(co, ok, ...)
	if not ok then
		local message = (...)
		error(debug.traceback(co, message), 2)
	end

	if coroutine.status(co) ~= "dead" then
		error(debug.traceback(co, "Attempted to yield inside changed event!"), 2)
	end

	return ...
end

local function NoYield(callback, ...)
	local co = coroutine.create(callback)

	return resultHandler(co, coroutine.resume(co, ...))
end

return NoYield
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXfbee39af743340e7b368261b9557a729">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Signal</string>
								<string name="ScriptGuid">{2d5e8db2-5c4d-4dd2-8cb1-45c9cfc75666}</string>
								<ProtectedString name="Source"><![CDATA[--[[
	A limited, simple implementation of a Signal.

	Handlers are fired in order, and (dis)connections are properly handled when
	executing an event.
]]
local function immutableAppend(list, ...)
	local new = {}
	local len = #list

	for key = 1, len do
		new[key] = list[key]
	end

	for i = 1, select("#", ...) do
		new[len + i] = select(i, ...)
	end

	return new
end

local function immutableRemoveValue(list, removeValue)
	local new = {}

	for i = 1, #list do
		if list[i] ~= removeValue then
			table.insert(new, list[i])
		end
	end

	return new
end

local Signal = {}

Signal.__index = Signal

function Signal.new(store)
	local self = {
		_listeners = {},
		_store = store
	}

	setmetatable(self, Signal)

	return self
end

function Signal:connect(callback)
	if typeof(callback) ~= "function" then
		error("Expected the listener to be a function.")
	end

	if self._store and self._store._isDispatching then
		error(
			'You may not call store.changed:connect() while the reducer is executing. ' ..
				'If you would like to be notified after the store has been updated, subscribe from a ' ..
				'component and invoke store:getState() in the callback to access the latest state. '
		)
	end

	local listener = {
		callback = callback,
		disconnected = false,
		connectTraceback = debug.traceback(),
		disconnectTraceback = nil
	}

	self._listeners = immutableAppend(self._listeners, listener)

	local function disconnect()
		if listener.disconnected then
			error((
				"Listener connected at: \n%s\n" ..
				"was already disconnected at: \n%s\n"
			):format(
				tostring(listener.connectTraceback),
				tostring(listener.disconnectTraceback)
			))
		end

		if self._store and self._store._isDispatching then
			error("You may not unsubscribe from a store listener while the reducer is executing.")
		end

		listener.disconnected = true
		listener.disconnectTraceback = debug.traceback()
		self._listeners = immutableRemoveValue(self._listeners, listener)
	end

	return {
		disconnect = disconnect
	}
end

function Signal:fire(...)
	for _, listener in ipairs(self._listeners) do
		if not listener.disconnected then
			listener.callback(...)
		end
	end
end

return Signal]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX489dd37655204060aea44bc93102e634">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Store</string>
								<string name="ScriptGuid">{32f0eea2-6f54-450d-88bc-a67ef3bd60e3}</string>
								<ProtectedString name="Source"><![CDATA[local RunService = game:GetService("RunService")

local Signal = require(script.Parent.Signal)
local NoYield = require(script.Parent.NoYield)

local ACTION_LOG_LENGTH = 3

local rethrowErrorReporter = {
	reportReducerError = function(prevState, action, errorResult)
		error(string.format("Received error: %s\n\n%s", errorResult.message, errorResult.thrownValue))
	end,
	reportUpdateError = function(prevState, currentState, lastActions, errorResult)
		error(string.format("Received error: %s\n\n%s", errorResult.message, errorResult.thrownValue))
	end,
}

local function tracebackReporter(message)
	return debug.traceback(tostring(message))
end

local Store = {}

-- This value is exposed as a private value so that the test code can stay in
-- sync with what event we listen to for dispatching the Changed event.
-- It may not be Heartbeat in the future.
Store._flushEvent = RunService.Heartbeat

Store.__index = Store

--[[
	Create a new Store whose state is transformed by the given reducer function.

	Each time an action is dispatched to the store, the new state of the store
	is given by:

		state = reducer(state, action)

	Reducers do not mutate the state object, so the original state is still
	valid.
]]
function Store.new(reducer, initialState, middlewares, errorReporter)
	assert(typeof(reducer) == "function", "Bad argument #1 to Store.new, expected function.")
	assert(middlewares == nil or typeof(middlewares) == "table", "Bad argument #3 to Store.new, expected nil or table.")
	if middlewares ~= nil then
		for i=1, #middlewares, 1 do
			assert(
				typeof(middlewares[i]) == "function",
				("Expected the middleware ('%s') at index %d to be a function."):format(tostring(middlewares[i]), i)
			)
		end
	end

	local self = {}

	self._errorReporter = errorReporter or rethrowErrorReporter
	self._isDispatching = false
	self._reducer = reducer
	local initAction = {
		type = "@@INIT",
	}
	self._actionLog = { initAction }
	local ok, result = xpcall(function()
		self._state = reducer(initialState, initAction)
	end, tracebackReporter)
	if not ok then
		self._errorReporter.reportReducerError(initialState, initAction, {
			message = "Caught error in reducer with init",
			thrownValue = result,
		})
		self._state = initialState
	end
	self._lastState = self._state

	self._mutatedSinceFlush = false
	self._connections = {}

	self.changed = Signal.new(self)

	setmetatable(self, Store)

	local connection = self._flushEvent:Connect(function()
		self:flush()
	end)
	table.insert(self._connections, connection)

	if middlewares then
		local unboundDispatch = self.dispatch
		local dispatch = function(...)
			return unboundDispatch(self, ...)
		end

		for i = #middlewares, 1, -1 do
			local middleware = middlewares[i]
			dispatch = middleware(dispatch, self)
		end

		self.dispatch = function(_self, ...)
			return dispatch(...)
		end
	end

	return self
end

--[[
	Get the current state of the Store. Do not mutate this!
]]
function Store:getState()
	if self._isDispatching then
		error(("You may not call store:getState() while the reducer is executing. " ..
			"The reducer (%s) has already received the state as an argument. " ..
			"Pass it down from the top reducer instead of reading it from the store."):format(tostring(self._reducer)))
	end

	return self._state
end

--[[
	Dispatch an action to the store. This allows the store's reducer to mutate
	the state of the application by creating a new copy of the state.

	Listeners on the changed event of the store are notified when the state
	changes, but not necessarily on every Dispatch.
]]
function Store:dispatch(action)
	if typeof(action) ~= "table" then
		error(("Actions must be tables. " ..
			"Use custom middleware for %q actions."):format(typeof(action)),
			2
		)
	end

	if action.type == nil then
		error("Actions may not have an undefined 'type' property. " ..
			"Have you misspelled a constant? \n" ..
			tostring(action), 2)
	end

	if self._isDispatching then
		error("Reducers may not dispatch actions.")
	end

	local ok, result = pcall(function()
		self._isDispatching = true
		self._state = self._reducer(self._state, action)
		self._mutatedSinceFlush = true
	end)

	self._isDispatching = false

	if not ok then
		self._errorReporter.reportReducerError(
			self._state,
			action,
			{
				message = "Caught error in reducer",
				thrownValue = result,
			}
		)
	end

	if #self._actionLog == ACTION_LOG_LENGTH then
		table.remove(self._actionLog, 1)
	end
	table.insert(self._actionLog, action)
end

--[[
	Marks the store as deleted, disconnecting any outstanding connections.
]]
function Store:destruct()
	for _, connection in ipairs(self._connections) do
		connection:Disconnect()
	end

	self._connections = nil
end

--[[
	Flush all pending actions since the last change event was dispatched.
]]
function Store:flush()
	if not self._mutatedSinceFlush then
		return
	end

	self._mutatedSinceFlush = false

	-- On self.changed:fire(), further actions may be immediately dispatched, in
	-- which case self._lastState will be set to the most recent self._state,
	-- unless we cache this value first
	local state = self._state

	local ok, errorResult = xpcall(function()
		-- If a changed listener yields, *very* surprising bugs can ensue.
		-- Because of that, changed listeners cannot yield.
		NoYield(function()
			self.changed:fire(state, self._lastState)
		end)
	end, tracebackReporter)

	if not ok then
		self._errorReporter.reportUpdateError(
			self._lastState,
			state,
			self._actionLog,
			{
				message = "Caught error flushing store updates",
				thrownValue = errorResult,
			}
		)
	end

	self._lastState = state
end

return Store
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX4d85709623d241bc885107bb8ff18853">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">combineReducers</string>
								<string name="ScriptGuid">{28045772-3973-4c23-966f-4ec614756b20}</string>
								<ProtectedString name="Source"><![CDATA[--[[
	Create a composite reducer from a map of keys and sub-reducers.
]]
local function combineReducers(map)
	return function(state, action)
		-- If state is nil, substitute it with a blank table.
		if state == nil then
			state = {}
		end

		local newState = {}

		for key, reducer in pairs(map) do
			-- Each reducer gets its own state, not the entire state table
			newState[key] = reducer(state[key], action)
		end

		return newState
	end
end

return combineReducers
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX1d6a7b312b71431cad9c5ca90952eb3c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">createReducer</string>
								<string name="ScriptGuid">{775a857c-d13e-49fd-abde-b4cee2a9e80e}</string>
								<ProtectedString name="Source"><![CDATA[return function(initialState, handlers)
	return function(state, action)
		if state == nil then
			state = initialState
		end

		local handler = handlers[action.type]

		if handler then
			return handler(state, action)
		end

		return state
	end
end
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX77702a928fc0428089ed28f080e091d3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">loggerMiddleware</string>
								<string name="ScriptGuid">{7f88e630-3c8b-46c3-8249-f7d12eae7701}</string>
								<ProtectedString name="Source"><![CDATA[-- We want to be able to override outputFunction in tests, so the shape of this
-- module is kind of unconventional.
--
-- We fix it this weird shape in init.lua.
local prettyPrint = require(script.Parent.prettyPrint)
local loggerMiddleware = {
	outputFunction = print,
}

function loggerMiddleware.middleware(nextDispatch, store)
	return function(action)
		local result = nextDispatch(action)

		loggerMiddleware.outputFunction(("Action dispatched: %s\nState changed to: %s"):format(
			prettyPrint(action),
			prettyPrint(store:getState())
		))

		return result
	end
end

return loggerMiddleware
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXb6cce51b1e374dbcb1176d810f82fb68">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">makeActionCreator</string>
								<string name="ScriptGuid">{521a2359-6220-4423-a3be-0ddbcea9dfbe}</string>
								<ProtectedString name="Source"><![CDATA[--[[
	A helper function to define a Rodux action creator with an associated name.
]]
local function makeActionCreator(name, fn)
	assert(type(name) == "string", "Bad argument #1: Expected a string name for the action creator")

	assert(type(fn) == "function", "Bad argument #2: Expected a function that creates action objects")

	return setmetatable({
		name = name,
	}, {
		__call = function(self, ...)
			local result = fn(...)

			assert(type(result) == "table", "Invalid action: An action creator must return a table")

			result.type = name

			return result
		end
	})
end

return makeActionCreator
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXeb15b21e250a4379a3f9416bed732b2e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">prettyPrint</string>
								<string name="ScriptGuid">{d8aa8a23-5002-484a-9022-4dbeb7757ad0}</string>
								<ProtectedString name="Source"><![CDATA[local indent = "    "

local function prettyPrint(value, indentLevel)
	indentLevel = indentLevel or 0
	local output = {}

	if typeof(value) == "table" then
		table.insert(output, "{\n")

		for tableKey, tableValue in pairs(value) do
			table.insert(output, indent:rep(indentLevel + 1))
			table.insert(output, tostring(tableKey))
			table.insert(output, " = ")

			table.insert(output, prettyPrint(tableValue, indentLevel + 1))
			table.insert(output, "\n")
		end

		table.insert(output, indent:rep(indentLevel))
		table.insert(output, "}")
	elseif typeof(value) == "string" then
		table.insert(output, string.format("%q", value))
		table.insert(output, " (string)")
	else
		table.insert(output, tostring(value))
		table.insert(output, " (")
		table.insert(output, typeof(value))
		table.insert(output, ")")
	end

	return table.concat(output, "")
end

return prettyPrint]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX0a1192e799f74c32b414d8098a97774a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">thunkMiddleware</string>
								<string name="ScriptGuid">{7fc78bce-0aa3-4a19-9221-3e01050d667a}</string>
								<ProtectedString name="Source"><![CDATA[--[[
	A middleware that allows for functions to be dispatched.
	Functions will receive a single argument, the store itself.
	This middleware consumes the function; middleware further down the chain
	will not receive it.
]]
local function tracebackReporter(message)
	return debug.traceback(message)
end

local function thunkMiddleware(nextDispatch, store)
	return function(action)
		if typeof(action) == "function" then
			local ok, result = xpcall(function()
				return action(store)
			end, tracebackReporter)

			if not ok then
				-- report the error and move on so it's non-fatal app
				store._errorReporter.reportReducerError(store:getState(), action, {
					message = "Caught error in thunk",
					thrownValue = result,
				})
				return nil
			end

			return result
		end

		return nextDispatch(action)
	end
end

return thunkMiddleware
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXd153e2f3489942069b9b329620bc3fe3">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">raycast-hitbox</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBXdfbc436dc9ed4bc08a15cdb28a85ec61">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">src</string>
							<string name="ScriptGuid">{51d9ddfc-722c-4e72-9baa-6c2799c9353b}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
--- Main RaycastModuleV4 2021
-- @author Swordphin123

--[[
____________________________________________________________________________________________________________________________________________________________________________

	If you have any questions, feel free to message me on DevForum. Credits not neccessary but is appreciated.
	
	[ How To Use - Quick Start Guide ]
	
		1. Insert Attachments to places where you want your "hitbox" to be. For swords, I like to have attachments 1 stud apart and strung along the blade.
		2. Name those Attachments "DmgPoint" (so the script knows). You can configure what name the script will look for in the variables below.
		3. Open up a script. As an example, maybe we have a sword welded to the character or as a tool. Require this, and initialize:
				
				* Example Code
					
					local Damage = 10
					local Hitbox = RaycastHitbox.new(Character)
					
					Hitbox.OnHit:Connect(function(hit, humanoid)
						print(hit.Name)
						humanoid:TakeDamage(Damage)
					end)
					
					Hitbox:HitStart() --- Turns on the hitbox
					wait(10) --- Waits 10 seconds
					Hitbox:HitStop() --- Turns off the hitbox
		
		4. Profit. Refer to the API below for more information.
				

____________________________________________________________________________________________________________________________________________________________________________

	[ RaycastHitBox API ]

		* local RaycastHitbox = require(RaycastHitboxV4) ---Duh
				--- To use, insert this at the top of your scripts or wherever.


			[ FUNCTIONS ]

		* RaycastHitbox.new(Instance model | BasePart | nil)
				Description
					--- Preps the model and recursively finds attachments in it so it knows where to shoot rays out of later. If a hitbox exists for this
					--- object already, it simply returns the same hitbox.
				Arguments
					--- Instance:  (Like your character, a sword model, etc). Can be left nil in case you want an empty Hitbox or use SetPoints later
				Returns
					Instance HitboxObject
						
		* RaycastHitModule:GetHitbox(Instance model)
				Description
					--- Gets the HitboxObject if it exists.
				Returns
					--- HitboxObject if found, else nil
					
		
		
		* HitboxObject:SetPoints(Instance BasePart | Bone, table vectorPoints, string group)
				Description
					--- Merges existing Hitbox points with new Vector3 values relative to a part/bone position. This part can be a descendent of your original Hitbox model or
						can be an entirely different instance that is not related to the hitbox (example: Have a weapon with attachments and you can then add in more vector3
						points without instancing new attachments, great for dynamic hitboxes)
				Arguments
					--- Instance BasePart | Bone: Sets the part/bone that these vectorPoints will move in relation to the part's origin using Vector3ToWorldSpace
					--- table vectorPoints: Table of vector3 values.
					--- string group: optional group parameter
					
		* HitboxObject:RemovePoints(Instance BasePart | Bone, table vectorPoints)
				Description
					--- Remove given Vector3 values provided the part was the same as the ones you set in SetPoints
				Arguments
					--- Instance BasePart | Bone: Sets the part that these vectorPoints will be removed from in relation to the part's origin using Vector3ToWorldSpace
					--- table vectorPoints: Table of vector3 values.
		
		* HitboxObject:LinkAttachments(Instance attachment1, Instance attachment2)
				Description
					--- Set two attachments to be in a link. The Raycast module will raycast between these two points.
				Arguments
					--- Instance attachment1/attachment2: Attachment objects
					
		* HitboxObject:UnlinkAttachments(Instance attachment1)
				Description
					--- Removes the link of an attachment. Only needs the primary attachment (argument 1 of LinkAttachments) to work. Will automatically sever the connection
						to the second attachment.
				Arguments
					--- Instance attachment1: Attachment object
				
		* HitboxObject:HitStart(seconds)
				Description
					--- Starts drawing the rays. Will only damage the target once. Call HitStop to reset the target pool so you can damage the same targets again.
						If HitStart hits a target(s), OnHit event will be called.
				Arguments
					--- number seconds: Optional numerical value, the hitbox will automatically turn off after this amount of time has elapsed
					
		* HitboxObject:HitStop()
				Description
					--- Stops drawing the rays and resets the target pool. Will do nothing if no rays are being drawn from the initialized model.

		* HitboxObject.OnHit:Connect(returns: Instance part, returns: Instance humanoid, returns: RaycastResults, returns: String group)
				Description
					--- If HitStart hits a fresh new target, OnHit returns information about the hit target
				Arguments
					--- Instance part: Returns the part that the rays hit first
					--- Instance humanoid: Returns the Humanoid object 
					--- RaycastResults RaycastResults: Returns information about the last raycast results
					--- String group: Returns information on the hitbox's group
					
		* HitboxObject.OnUpdate:Connect(returns: Vector3 position)
				Description
					--- This fires every frame, for every point, returning a Vector3 value of its last position in space. Do not use expensive operations in this function.
		

			[ PROPERTIES ]

		* HitboxObject.RaycastParams: RaycastParams
				Description
					--- Takes in a RaycastParams object

		* HitboxObject.Visualizer: boolean
				Description
					--- Turns on or off the debug rays for this hitbox

		* HitboxObject.DebugLog: boolean
				Description
					--- Turns on or off output writing for this hitbox

		* HitboxObject.DetectionMode: number [1 - 3]
				Description
					--- Defaults to 1. Refer to DetectionMode subsection below for more information

			
			[ DETECTION MODES ]

		* RaycastHitbox.DetectionMode.Default
				Description
					--- Checks if a humanoid exists when this hitbox touches a part. The hitbox will not return humanoids it has already hit for the duration
					--- the hitbox has been active.

		* RaycastHitbox.DetectionMode.PartMode
				Description
					--- OnHit will return every hit part (in respect to the hitbox's RaycastParams), regardless if it's ascendant has a humanoid or not.
					--- OnHit will no longer return a humanoid so you will have to check it. The hitbox will not return parts it has already hit for the
					--- duration the hitbox has been active.

		* RaycastHitbox.DetectionMode.Bypass
				Description
					--- PERFORMANCE MAY SUFFER IF THERE ARE A LOT OF PARTS. Use only if necessary.
					--- Similar to PartMode, the hitbox will return every hit part. Except, it will keep returning parts even if it has already hit them.
					--- Warning: If you have multiple raycast or attachment points, each raycast will also call OnHit. Allows you to create your own
					--- filter system.
		
____________________________________________________________________________________________________________________________________________________________________________

--]]

-- Show where the red lines are going. You can change their colour and width in VisualizerCache
local SHOW_DEBUG_RAY_LINES: boolean = true

-- Allow RaycastModule to write to the output
local SHOW_OUTPUT_MESSAGES: boolean = true

-- The tag name. Used for cleanup.
local DEFAULT_COLLECTION_TAG_NAME: string = "_RaycastHitboxV4Managed"

--- Initialize required modules
local CollectionService: CollectionService = game:GetService("CollectionService")
local HitboxData = require(script.HitboxCaster)
local Signal = require(script.Signal)

local RaycastHitbox = {}
RaycastHitbox.__index = RaycastHitbox
RaycastHitbox.__type = "RaycastHitboxModule"

-- Detection mode enums
RaycastHitbox.DetectionMode = {
	Default = 1,
	PartMode = 2,
	Bypass = 3,
}

--- Creates or finds a hitbox object. Returns an hitbox object
-- @param required object parameter that takes in either a part or a model
function RaycastHitbox.new(object: any?)
	local hitbox: any

	if object and CollectionService:HasTag(object, DEFAULT_COLLECTION_TAG_NAME) then
		hitbox = HitboxData:_FindHitbox(object)
	else
		hitbox = setmetatable({
			RaycastParams = nil,
			DetectionMode = RaycastHitbox.DetectionMode.Default,
			HitboxRaycastPoints = {},
			HitboxPendingRemoval = false,
			HitboxStopTime = 0,
			HitboxObject = object,
			HitboxHitList = {},
			HitboxActive = false,
			Visualizer = SHOW_DEBUG_RAY_LINES,
			DebugLog = SHOW_OUTPUT_MESSAGES,
			OnUpdate = Signal:Create(),
			OnHit = Signal:Create(),
			Tag = DEFAULT_COLLECTION_TAG_NAME,
		}, HitboxData)

		hitbox:_Init()
	end

	return hitbox
end

--- Finds a hitbox object if valid, else return nil
-- @param Object instance
function RaycastHitbox:GetHitbox(object: any?)
	if object then
		return HitboxData:_FindHitbox(object)
	end
end

return { default = RaycastHitbox }]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX1d14013714104a848d40208cb0ba2605">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">HitboxCaster</string>
								<string name="ScriptGuid">{4d413aa3-014e-4a4f-9d40-04f76c7013e4}</string>
								<ProtectedString name="Source"><![CDATA[--!nocheck
--- Creates and manages the hitbox class
-- @author Swordphin123

-- Instance options
local DEFAULT_ATTACHMENT_INSTANCE: string = "DmgPoint"
local DEFAULT_GROUP_NAME_INSTANCE: string = "Group"

-- Debug / Test ray visual options
local DEFAULT_DEBUGGER_RAY_DURATION: number = 0.25

-- Debug Message options
local DEFAULT_DEBUG_LOGGER_PREFIX: string = "[ Raycast Hitbox V4 ]\n"
local DEFAULT_MISSING_ATTACHMENTS: string = "No attachments found in object: %s. Can be safely ignored if using SetPoints."
local DEFAULT_ATTACH_COUNT_NOTICE: string = "%s attachments found in object: %s."

-- Hitbox values
local MINIMUM_SECONDS_SCHEDULER: number = 1 / 60
local DEFAULT_SIMULATION_TYPE: RBXScriptSignal = game:GetService("RunService").Heartbeat

--- Variable definitions
local CollectionService: CollectionService = game:GetService("CollectionService")
local VisualizerCache = require(script.Parent.VisualizerCache)

local ActiveHitboxes: {[number]: any} = {}
local Solvers: Instance = script.Parent:WaitForChild("Solvers")

local Hitbox = {}
Hitbox.__index = Hitbox
Hitbox.__type = "RaycastHitbox"

Hitbox.CastModes = {
	LinkAttachments = 1,
	Attachment = 2,
	Vector3 = 3,
	Bone = 4,
}

--- Point type
type Point = {
	Group: string?,
	CastMode: number,
	LastPosition: Vector3?,
	WorldSpace: Vector3?,
	Instances: {[number]: Instance | Vector3}
}

-- AdornmentData type
type AdornmentData = VisualizerCache.AdornmentData

--- Activates the raycasts for the hitbox object.
--- The hitbox will automatically stop and restart if the hitbox was already casting.
-- @param optional number parameter to automatically turn off the hitbox after 'n' seconds
function Hitbox:HitStart(seconds: number?)
	if self.HitboxActive then
		self:HitStop()
	end

	if seconds then
		self.HitboxStopTime = os.clock() + math.max(MINIMUM_SECONDS_SCHEDULER, seconds)
	end

	self.HitboxActive = true
end

--- Disables the raycasts for the hitbox object, and clears all current hit targets.
--- Also automatically cancels any current time scheduling for the current hitbox.
function Hitbox:HitStop()
	self.HitboxActive = false
	self.HitboxStopTime = 0
	table.clear(self.HitboxHitList)
end

--- Queues the hitbox to be destroyed in the next frame
function Hitbox:Destroy()
	self.HitboxPendingRemoval = true

	if self.HitboxObject then
		CollectionService:RemoveTag(self.HitboxObject, self.Tag)
	end

	self:HitStop()
	self.OnHit:Destroy()
	self.OnUpdate:Destroy()
end

--- Searches for attachments for the given instance (if applicable)
function Hitbox:Recalibrate()
	local descendants: {[number]: Instance} = self.HitboxObject:GetDescendants()
	local attachmentCount: number = 0

	for _, attachment: any in ipairs(descendants) do
		if not attachment:IsA("Attachment") or attachment.Name ~= DEFAULT_ATTACHMENT_INSTANCE then
			continue
		end

		local group: string? = attachment:GetAttribute(DEFAULT_GROUP_NAME_INSTANCE)
		local point: Point = self:_CreatePoint(group, Hitbox.CastModes.Attachment, attachment.WorldPosition)

		table.insert(point.Instances, attachment)
		table.insert(self.HitboxRaycastPoints, point)

		attachmentCount += 1
	end

	if self.DebugLog then
		print(string.format("%s%s", DEFAULT_DEBUG_LOGGER_PREFIX,
			attachmentCount > 0 and string.format(DEFAULT_ATTACH_COUNT_NOTICE, attachmentCount, self.HitboxObject.Name) or
				string.format(DEFAULT_MISSING_ATTACHMENTS, self.HitboxObject.Name))
		)
	end
end

--- Creates a link between two attachments. The module will constantly raycast between these two attachments.
-- @param attachment1 Attachment object (can have a group attribute)
-- @param attachment2 Attachment object
function Hitbox:LinkAttachments(attachment1: Attachment, attachment2: Attachment)
	local group: string? = attachment1:GetAttribute(DEFAULT_GROUP_NAME_INSTANCE)
	local point: Point = self:_CreatePoint(group, Hitbox.CastModes.LinkAttachments)

	point.Instances[1] = attachment1
	point.Instances[2] = attachment2
	table.insert(self.HitboxRaycastPoints, point)
end

--- Removes the link of an attachment. Putting one of any of the two original attachments you used in LinkAttachment will automatically sever the other
-- @param attachment
function Hitbox:UnlinkAttachments(attachment: Attachment)
	for i = #self.HitboxRaycastPoints, 1, -1 do
		if #self.HitboxRaycastPoints[i].Instances >= 2 then
			if self.HitboxRaycastPoints[i].Instances[1] == attachment or self.HitboxRaycastPoints[i].Instances[2] == attachment then
				table.remove(self.HitboxRaycastPoints, i)
			end
		end
	end
end

--- Creates raycast points using only vector3 values.
-- @param object BasePart or Bone, the part you want the points to be locally offset from
-- @param table of vector3 values that are in local space relative to the basePart or bone
-- @param optional group string parameter that names the group these points belong to
function Hitbox:SetPoints(object: BasePart | Bone, vectorPoints: {[number]: Vector3}, group: string?)
	for _: number, vector: Vector3 in ipairs(vectorPoints) do
		local point: Point = self:_CreatePoint(group, Hitbox.CastModes[object:IsA("Bone") and "Bone" or "Vector3"])

		point.Instances[1] = object
		point.Instances[2] = vector
		table.insert(self.HitboxRaycastPoints, point)
	end
end

--- Removes raycast points using only vector3 values. Use the same vector3 table from SetPoints
-- @param object BasePart or Bone, the original instance you used for SetPoints
-- @param table of vector values that are in local space relative to the basePart
function Hitbox:RemovePoints(object: BasePart | Bone, vectorPoints: {[number]: Vector3})
	for i = #self.HitboxRaycastPoints, 1, -1 do
		local part = (self.HitboxRaycastPoints[i] :: Point).Instances[1]

		if part == object then
			local originalVector = (self.HitboxRaycastPoints[i] :: Point).Instances[2]

			for _: number, vector: Vector3 in ipairs(vectorPoints) do
				if vector == originalVector :: Vector3 then
					table.remove(self.HitboxRaycastPoints, i)
					break
				end
			end
		end
	end
end

--- Internal function that returns a point type
-- @param group string name
-- @param castMode numeric enum value
-- @param lastPosition Vector3 value
function Hitbox:_CreatePoint(group: string?, castMode: number, lastPosition: Vector3?): Point
	return {
		Group = group,
		CastMode = castMode,
		LastPosition = lastPosition,
		WorldSpace = nil,
		Instances = {},
	}
end

--- Internal function that finds an existing hitbox from a given instance
-- @param instance object
function Hitbox:_FindHitbox(object: any)
	for _: number, hitbox: any in ipairs(ActiveHitboxes) do
		if hitbox.HitboxObject == object then
			return hitbox
		end
	end
end

--- Runs for the very first time whenever a hitbox is created
--- Do not run this more than once, you may introduce memory leaks if you do so
function Hitbox:_Init()
	if not self.HitboxObject then return end

	local tagConnection: RBXScriptConnection

	local function onTagRemoved(instance: Instance)
		if instance == self.HitboxObject then
			tagConnection:Disconnect()
			self:Destroy()
		end
	end

	self:Recalibrate()
	table.insert(ActiveHitboxes, self)
	CollectionService:AddTag(self.HitboxObject, self.Tag)

	tagConnection = CollectionService:GetInstanceRemovedSignal(self.Tag):Connect(onTagRemoved)
end

local function Init()
	--- Reserve table sizing for solver tables
	local solversCache: {[number]: any} = table.create(#Solvers:GetChildren())

	DEFAULT_SIMULATION_TYPE:Connect(function(step: number)
		--- Iterate through all the hitboxes
		for i = #ActiveHitboxes, 1, -1 do
			--- Skip this hitbox if the hitbox will be garbage collected this frame
			if ActiveHitboxes[i].HitboxPendingRemoval then
				local hitbox: any = table.remove(ActiveHitboxes, i)
				setmetatable(hitbox, nil)
				continue
			end

			for _: number, point: Point in ipairs(ActiveHitboxes[i].HitboxRaycastPoints) do
				--- Reset this point if the hitbox is inactive
				if not ActiveHitboxes[i].HitboxActive then
					point.LastPosition = nil
					continue
				end

				--- Calculate rays
				local castMode: any = solversCache[point.CastMode]
				local origin: Vector3, direction: Vector3 = castMode:Solve(point)
				local raycastResult: RaycastResult = workspace:Raycast(origin, direction, ActiveHitboxes[i].RaycastParams)

				--- Draw debug rays
				if ActiveHitboxes[i].Visualizer then
					local adornmentData: AdornmentData? = VisualizerCache:GetAdornment()

					if adornmentData then
						local debugStartPosition: CFrame = castMode:Visualize(point)
						adornmentData.Adornment.Length = direction.Magnitude
						adornmentData.Adornment.CFrame = debugStartPosition
					end
				end

				--- Update the current point's position
				point.LastPosition = castMode:UpdateToNextPosition(point)

				--- If a ray detected a hit
				if raycastResult then
					local part: BasePart = raycastResult.Instance
					local model: Instance?
					local humanoid: Instance?
					local target: Instance?

					if ActiveHitboxes[i].DetectionMode == 1 then
						model = part:FindFirstAncestorOfClass("Model")
						if model then
							humanoid = model:FindFirstChildOfClass("Humanoid")
						end
						target = humanoid
					else
						target = part
					end

					--- Found a target. Fire the OnHit event
					if target then
						if ActiveHitboxes[i].DetectionMode <= 2 then
							if ActiveHitboxes[i].HitboxHitList[target] then
								continue
							else
								ActiveHitboxes[i].HitboxHitList[target] = true
							end
						end

						ActiveHitboxes[i].OnHit:Fire(part, humanoid, raycastResult, point.Group)
					end
				end

				--- Hitbox Time scheduler
				if ActiveHitboxes[i].HitboxStopTime > 0 then
					if ActiveHitboxes[i].HitboxStopTime <= os.clock() then
						ActiveHitboxes[i]:HitStop()
					end
				end

				--- OnUpdate event that fires every frame for every point
				ActiveHitboxes[i].OnUpdate:Fire(point.LastPosition)
			end
		end

		local adornmentsInUse: number = #VisualizerCache._AdornmentInUse

		--- Iterates through all the debug rays to see if they need to be cached or cleaned up
		if adornmentsInUse > 0 then
			for i = adornmentsInUse, 1, -1 do
				if (os.clock() - VisualizerCache._AdornmentInUse[i].LastUse) >= DEFAULT_DEBUGGER_RAY_DURATION then
					local adornment: AdornmentData? = table.remove(VisualizerCache._AdornmentInUse, i)

					if adornment then
						VisualizerCache:ReturnAdornment(adornment)
					end
				end
			end
		end
	end)

	--- Require all solvers
	for castMode: string, enum: number in pairs(Hitbox.CastModes) do
		local moduleScript: Instance? = Solvers:FindFirstChild(castMode)

		if moduleScript then
			local load = require(moduleScript)
			solversCache[enum] = load
		end
	end
end

Init()

return Hitbox]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX5e7bacf39ee844009ff5fac013b329e3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Signal</string>
								<string name="ScriptGuid">{5aca4075-0eae-40b8-b5f9-4c56918134af}</string>
								<ProtectedString name="Source"><![CDATA[--- @Swordphin123, wao such minimalism

local connection = {}
connection.__index = connection

function connection:Create()
	return setmetatable({}, connection)
end

function connection:Connect(Listener)
	self[1] = Listener
end

function connection:Fire(...)
	if not self[1] then return end

	local newThread = coroutine.create(self[1])
	coroutine.resume(newThread, ...)
end

function connection:Destroy()
	self[1] = nil
end

return connection]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBX5041f1fc332f4540abc737b63670293a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Solvers</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="ModuleScript" referent="RBX3022f0d2608a4fed86f59080caacbadc">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">Attachment</string>
									<string name="ScriptGuid">{787067b8-60e0-4e1a-ab68-460d0fe8fe18}</string>
									<ProtectedString name="Source"><![CDATA[--!strict
--- Calculates ray origin and directions for attachment-based raycast points
-- @author Swordphin123

local solver = {}

--- Solve direction and length of the ray by comparing current and last frame's positions
-- @param point type
function solver:Solve(point: {[string]: any}): (Vector3, Vector3)
	--- If LastPosition is nil (caused by if the hitbox was stopped previously), rewrite its value to the current point position
	if not point.LastPosition then
		point.LastPosition = point.Instances[1].WorldPosition
	end

	local origin: Vector3 = point.LastPosition
	local direction: Vector3 = point.Instances[1].WorldPosition - point.LastPosition

	return origin, direction
end

function solver:UpdateToNextPosition(point: {[string]: any}): Vector3
	return point.Instances[1].WorldPosition
end

function solver:Visualize(point: {[string]: any}): CFrame
	return CFrame.lookAt(point.Instances[1].WorldPosition, point.LastPosition)
end

return solver]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXdae0d01b99824cb2b108f9204700c360">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">Bone</string>
									<string name="ScriptGuid">{2428b630-ffc1-44c6-ad0c-30981fe05e89}</string>
									<ProtectedString name="Source"><![CDATA[--!strict
--- Calculates ray origin and directions for vector-based raycast points
-- @author Swordphin123

local solver = {}

local EMPTY_VECTOR: Vector3 = Vector3.new()

--- Solve direction and length of the ray by comparing current and last frame's positions
-- @param point type
function solver:Solve(point: {[string]: any}): (Vector3, Vector3)
	--- Translate localized bone positions to world space values
	local originBone: Bone = point.Instances[1]
	local vector: Vector3 = point.Instances[2]
	local worldCFrame: CFrame = originBone.TransformedWorldCFrame
	local pointToWorldSpace: Vector3 = worldCFrame.Position + worldCFrame:VectorToWorldSpace(vector)

	--- If LastPosition is nil (caused by if the hitbox was stopped previously), rewrite its value to the current point position
	if not point.LastPosition then
		point.LastPosition = pointToWorldSpace
	end

	local origin: Vector3 = point.LastPosition
	local direction: Vector3 = pointToWorldSpace - (point.LastPosition or EMPTY_VECTOR)

	point.WorldSpace = pointToWorldSpace

	return origin, direction
end

function solver:UpdateToNextPosition(point: {[string]: any}): Vector3
	return point.WorldSpace
end

function solver:Visualize(point: {[string]: any}): CFrame
	return CFrame.lookAt(point.WorldSpace, point.LastPosition)
end

return solver]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX06c8196bfd7a46fea06f7a732c9fc77a">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">LinkAttachments</string>
									<string name="ScriptGuid">{29e81a21-f689-45f6-8337-1fe03927079b}</string>
									<ProtectedString name="Source"><![CDATA[--!strict
--- Calculates ray origin and directions for attachment-based raycast points
-- @author Swordphin123

local solver = {}

--- Solve direction and length of the ray by comparing both attachment1 and attachment2's positions
-- @param point type
function solver:Solve(point: {[string]: any}): (Vector3, Vector3)
	local origin: Vector3 = point.Instances[1].WorldPosition
	local direction: Vector3 = point.Instances[2].WorldPosition - point.Instances[1].WorldPosition

	return origin, direction
end

function solver:UpdateToNextPosition(point: {[string]: any}): Vector3
	return point.Instances[1].WorldPosition
end

function solver:Visualize(point: {[string]: any}): CFrame
	return CFrame.lookAt(point.Instances[1].WorldPosition, point.Instances[2].WorldPosition)
end

return solver]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX0d9d98269f2b4940930f2327f6f1a1ee">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">Vector3</string>
									<string name="ScriptGuid">{2a8a7923-4ea2-4218-bf24-3275a0caa248}</string>
									<ProtectedString name="Source"><![CDATA[--!strict
--- Calculates ray origin and directions for vector-based raycast points
-- @author Swordphin123

local solver = {}

local EMPTY_VECTOR: Vector3 = Vector3.new()

--- Solve direction and length of the ray by comparing current and last frame's positions
-- @param point type
function solver:Solve(point: {[string]: any}): (Vector3, Vector3)
	--- Translate localized Vector3 positions to world space values
	local originPart: BasePart = point.Instances[1]
	local vector: Vector3 = point.Instances[2]
	local pointToWorldSpace: Vector3 = originPart.Position + originPart.CFrame:VectorToWorldSpace(vector)

	--- If LastPosition is nil (caused by if the hitbox was stopped previously), rewrite its value to the current point position
	if not point.LastPosition then
		point.LastPosition = pointToWorldSpace
	end

	local origin: Vector3 = point.LastPosition
	local direction: Vector3 = pointToWorldSpace - (point.LastPosition or EMPTY_VECTOR)

	point.WorldSpace = pointToWorldSpace

	return origin, direction
end

function solver:UpdateToNextPosition(point: {[string]: any}): Vector3
	return point.WorldSpace
end

function solver:Visualize(point: {[string]: any}): CFrame
	return CFrame.lookAt(point.WorldSpace, point.LastPosition)
end

return solver]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX6314bc7338ab40e2b10be0e906d3dabb">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">VisualizerCache</string>
								<string name="ScriptGuid">{e0e5bc3d-23ba-4c8d-bd6e-155797a3b492}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
--- Cache LineHandleAdornments or create new ones if not in the cache
-- @author Swordphin123

-- Debug / Test ray visual options
local DEFAULT_DEBUGGER_RAY_COLOUR: Color3 = Color3.fromRGB(255, 0, 0)
local DEFAULT_DEBUGGER_RAY_WIDTH: number = 4
local DEFAULT_DEBUGGER_RAY_NAME: string = "_RaycastHitboxDebugLine"
local DEFAULT_FAR_AWAY_CFRAME: CFrame = CFrame.new(0, math.huge, 0)

local cache = {}
cache.__index = cache
cache.__type = "RaycastHitboxVisualizerCache"
cache._AdornmentInUse = {}
cache._AdornmentInReserve = {}

--- AdornmentData type
export type AdornmentData = {
	Adornment: LineHandleAdornment,
	LastUse: number
}

--- Internal function to create an AdornmentData type
--- Creates a LineHandleAdornment and a timer value
function cache:_CreateAdornment(): AdornmentData
	local line: LineHandleAdornment = Instance.new("LineHandleAdornment")
	line.Name = DEFAULT_DEBUGGER_RAY_NAME
	line.Color3 = DEFAULT_DEBUGGER_RAY_COLOUR
	line.Thickness = DEFAULT_DEBUGGER_RAY_WIDTH

	line.Length = 0
	line.CFrame = DEFAULT_FAR_AWAY_CFRAME

	line.Adornee = workspace.Terrain
	line.Parent = workspace.Terrain

	return {
		Adornment = line,
		LastUse = 0
	}
end

--- Gets an AdornmentData type. Creates one if there isn't one currently available.
function cache:GetAdornment(): AdornmentData?
	if #cache._AdornmentInReserve <= 0 then
		--- Create a new LineAdornmentHandle if none are in reserve
		local adornment: AdornmentData = cache:_CreateAdornment()
		table.insert(cache._AdornmentInReserve, adornment)
	end

	local adornment: AdornmentData? = table.remove(cache._AdornmentInReserve, 1)

	if adornment then
		adornment.Adornment.Visible = true
		adornment.LastUse = os.clock()
		table.insert(cache._AdornmentInUse, adornment)
	end

	return adornment
end

--- Returns an AdornmentData back into the cache.
-- @param AdornmentData
function cache:ReturnAdornment(adornment: AdornmentData)
	adornment.Adornment.Length = 0
	adornment.Adornment.Visible = false
	adornment.Adornment.CFrame = DEFAULT_FAR_AWAY_CFRAME
	table.insert(cache._AdornmentInReserve, adornment)
end

--- Clears the cache in reserve. Should only be used if you want to free up some memory.
--- If you end up turning on the visualizer again for this session, the cache will fill up again.
--- Does not clear adornments that are currently in use.
function cache:Clear()
	for i = #cache._AdornmentInReserve, 1, -1 do
		if cache._AdornmentInReserve[i].Adornment then
			cache._AdornmentInReserve[i].Adornment:Destroy()
		end

		table.remove(cache._AdornmentInReserve, i)
	end
end

return cache]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX40eb9c323ca6458abe20723a865565a4">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Assets</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Folder" referent="RBXf283505cda954e0e82c7b302c0f98189">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Sounds</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBXede9fcb3a5f444479848ce1ebe211e0f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Swing</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Sound" referent="RBX2977883cc1b34af4ae32a33ec6110402">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="EmitterSize">10</float>
							<bool name="Looped">false</bool>
							<string name="Name">Swing1</string>
							<bool name="PlayOnRemove">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://7125725519</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<float name="Volume">0.5</float>
							<float name="xmlRead_MaxDistance_3">10000</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX76263b6c626147f9bf08de65fc87c640">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Hit</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Sound" referent="RBXdfc56cbdc6da4bc9b459fa8ab9387521">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="EmitterSize">10</float>
							<bool name="Looped">false</bool>
							<string name="Name">Hit1</string>
							<bool name="PlayOnRemove">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://7125589095</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
							<float name="xmlRead_MaxDistance_3">10000</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBXc00a16408c07439fabba8c31dedbf18d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="EmitterSize">10</float>
							<bool name="Looped">false</bool>
							<string name="Name">Hit2</string>
							<bool name="PlayOnRemove">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://7125589032</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
							<float name="xmlRead_MaxDistance_3">10000</float>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX9b9c46b09a54433ca2ce88fbdf3d3523">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Blocked</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Sound" referent="RBX58e1838698da447fbc1a3261672218e8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="EmitterSize">10</float>
							<bool name="Looped">false</bool>
							<string name="Name">Blocked1</string>
							<bool name="PlayOnRemove">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://7125545332</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
							<float name="xmlRead_MaxDistance_3">10000</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX3129968a79744e21845c4d44b418db07">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="EmitterSize">10</float>
							<bool name="Looped">false</bool>
							<string name="Name">Blocked2</string>
							<bool name="PlayOnRemove">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://7125545211</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
							<float name="xmlRead_MaxDistance_3">10000</float>
						</Properties>
					</Item>
					<Item class="Sound" referent="RBX8e6323cf96ee4deb8c557c1054b27085">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="EmitterSize">10</float>
							<bool name="Looped">false</bool>
							<string name="Name">Blocked3</string>
							<bool name="PlayOnRemove">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://7125545268</url></Content>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<float name="Volume">1</float>
							<float name="xmlRead_MaxDistance_3">10000</float>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX437ae9ead03347f3bcb256ff28adec72">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Tools</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Model" referent="RBXfa0a115691034497a2cf747843f2f206">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">Kopis</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>-230.205948</X>
								<Y>2.00777435</Y>
								<Z>-18.5429859</Z>
								<R00>-1</R00>
								<R01>-2.41675798e-06</R01>
								<R02>-4.47035617e-08</R02>
								<R10>-2.41675798e-06</R10>
								<R11>1</R11>
								<R12>1.95578693e-07</R12>
								<R20>4.47030892e-08</R20>
								<R21>1.95578792e-07</R21>
								<R22>-1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="UnionOperation" referent="RBXa63cf427003446bf94cc8a814e645a8a">
						<Properties>
							<bool name="Anchored">false</bool>
							<Content name="AssetId"><url>https://www.roblox.com//asset/?id=616535101</url></Content>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-1.54048145</X>
								<Y>4.13980627</Y>
								<Z>-6.41806602</Z>
								<R00>-1.62152412e-06</R00>
								<R01>-1</R01>
								<R02>-2.79702135e-06</R02>
								<R10>1.0000006</R10>
								<R11>-1.62150525e-06</R11>
								<R12>-9.14931388e-06</R12>
								<R20>8.5532829e-06</R20>
								<R21>-2.79703795e-06</R21>
								<R22>1.00000179</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<BinaryString name="ChildData"></BinaryString>
							<SharedString name="ChildData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4284702562</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<token name="FormFactor">0</token>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<Vector3 name="InitialSize">
								<X>2.80006218</X>
								<Y>0.0307459515</Y>
								<Z>0.365213543</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">272</token>
							<BinaryString name="MeshData"></BinaryString>
							<SharedString name="MeshData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<string name="Name">Blade</string>
							<SharedString name="PhysicalConfigData">4alqyfbNPzvjWvssHUVMhw==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.25</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="SmoothingAngle">0</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<bool name="UsePartColor">true</bool>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>2.80006433</X>
								<Y>0.0307459533</Y>
								<Z>0.365213811</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="UnionOperation" referent="RBX2b782f4bef9b43659d3c2564a29a1557">
						<Properties>
							<bool name="Anchored">false</bool>
							<Content name="AssetId"><url>https://www.roblox.com//asset/?id=616535105</url></Content>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-1.54379261</X>
								<Y>2.13803911</Y>
								<Z>-6.42301702</Z>
								<R00>-1.49008841e-08</R00>
								<R01>6.75211652e-07</R01>
								<R02>1</R02>
								<R10>0.173647091</R10>
								<R11>0.984809041</R11>
								<R12>-6.623589e-07</R12>
								<R20>-0.984810531</R20>
								<R21>0.173646614</R21>
								<R22>-1.31924253e-07</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<BinaryString name="ChildData"></BinaryString>
							<SharedString name="ChildData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4291275896</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<token name="FormFactor">0</token>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<Vector3 name="InitialSize">
								<X>0.562749267</X>
								<Y>1.26573467</Y>
								<Z>0.147644073</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">272</token>
							<BinaryString name="MeshData"></BinaryString>
							<SharedString name="MeshData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<string name="Name">Handle2</string>
							<SharedString name="PhysicalConfigData">XDAnmIGUuHcLCH0X3uq+mA==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="SmoothingAngle">0</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<bool name="UsePartColor">true</bool>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>0.562749267</X>
								<Y>1.26573467</Y>
								<Z>0.147644073</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="UnionOperation" referent="RBX0da9fa839532494696cd81b76dbaf3bd">
						<Properties>
							<bool name="Anchored">false</bool>
							<Content name="AssetId"><url>http://www.roblox.com//asset/?id=267388510</url></Content>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-1.54312122</X>
								<Y>2.20256853</Y>
								<Z>-6.31473494</Z>
								<R00>0.669127464</R00>
								<R01>-0.743147671</R01>
								<R02>4.65901394e-06</R02>
								<R10>1.41724888e-06</R10>
								<R11>-4.96515895e-06</R11>
								<R12>-1.00000095</R12>
								<R20>0.743149579</R20>
								<R21>0.669129014</R21>
								<R22>-1.49012203e-06</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<BinaryString name="ChildData"></BinaryString>
							<SharedString name="ChildData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4284107842</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<token name="FormFactor">0</token>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<Vector3 name="InitialSize">
								<X>0.13625893</X>
								<Y>0.138389796</Y>
								<Z>0.452626556</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">512</token>
							<BinaryString name="MeshData"></BinaryString>
							<SharedString name="MeshData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<string name="Name">Handle1</string>
							<SharedString name="PhysicalConfigData">fJSzk9zJwSCKzNXY8vBxhA==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="SmoothingAngle">0</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<bool name="UsePartColor">true</bool>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>0.170474455</X>
								<Y>0.173140302</Y>
								<Z>0.566278815</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXf0b8b40708b74cd48414260e64b61c1b">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-1.54025257</X>
								<Y>2.19997168</Y>
								<Z>-6.30752516</Z>
								<R00>1</R00>
								<R01>2.32680932e-12</R01>
								<R02>-9.09495135e-13</R02>
								<R10>2.32680932e-12</R10>
								<R11>1.00000048</R11>
								<R12>-2.38415055e-07</R12>
								<R20>-9.09495135e-13</R20>
								<R21>-2.38415055e-07</R21>
								<R22>1.00000143</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">256</token>
							<string name="Name">BodyAttach</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.188422859</X>
								<Y>0.706855774</Y>
								<Z>0.192185968</Z>
							</Vector3>
						</Properties>
						<Item class="Weld" referent="RBXd103cb97b76a4dce83f9da6630ea003c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>-0.00354003906</X>
									<Y>-0.0619325638</Y>
									<Z>-0.115491867</Z>
									<R00>-1.49021826e-08</R00>
									<R01>6.75209549e-07</R01>
									<R02>1</R02>
									<R10>0.173646763</R10>
									<R11>0.984808624</R11>
									<R12>-6.62360947e-07</R12>
									<R20>-0.984809041</R20>
									<R21>0.173646599</R21>
									<R22>-1.31923315e-07</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">Handle2</string>
								<Ref name="Part0">RBXf0b8b40708b74cd48414260e64b61c1b</Ref>
								<Ref name="Part1">RBX2b782f4bef9b43659d3c2564a29a1557</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Weld" referent="RBX57217031fa664720afe17381c72d629b">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>-0.00286865234</X>
									<Y>0.00259685516</Y>
									<Z>-0.00720977783</Z>
									<R00>0.669127464</R00>
									<R01>-0.743147671</R01>
									<R02>4.65901621e-06</R02>
									<R10>1.59442425e-06</R10>
									<R11>-4.80562449e-06</R11>
									<R12>-1.00000048</R12>
									<R20>0.743148506</R20>
									<R21>0.66912806</R21>
									<R22>-1.7285347e-06</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">Handle1</string>
								<Ref name="Part0">RBXf0b8b40708b74cd48414260e64b61c1b</Ref>
								<Ref name="Part1">RBX0da9fa839532494696cd81b76dbaf3bd</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Weld" referent="RBXdda00275aaed4fee9d69df9aefd98e26">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>-0.000228881836</X>
									<Y>1.93983364</Y>
									<Z>-0.11054039</Z>
									<R00>-1.62152639e-06</R00>
									<R01>-1</R01>
									<R02>-2.79702044e-06</R02>
									<R10>1.00000012</R10>
									<R11>-1.62150286e-06</R11>
									<R12>-8.91089439e-06</R12>
									<R20>8.7916851e-06</R20>
									<R21>-2.79703522e-06</R21>
									<R22>1.00000036</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">Blade</string>
								<Ref name="Part0">RBXf0b8b40708b74cd48414260e64b61c1b</Ref>
								<Ref name="Part1">RBXa63cf427003446bf94cc8a814e645a8a</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Weld" referent="RBX0da252e82db0453ab3ad4e25aa9b1c9b">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>-0.00723266602</X>
									<Y>1.92727852</Y>
									<Z>-0.107765198</Z>
									<R00>1</R00>
									<R01>1.16340444e-12</R01>
									<R02>-4.54747351e-13</R02>
									<R10>1.16340444e-12</R10>
									<R11>1.00000024</R11>
									<R12>-1.19207471e-07</R12>
									<R20>-4.54747351e-13</R20>
									<R21>-1.19207471e-07</R21>
									<R22>1.00000072</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">DamagePart</string>
								<Ref name="Part0">RBXf0b8b40708b74cd48414260e64b61c1b</Ref>
								<Ref name="Part1">RBX4b259e849bb14437833d19a2be7216a6</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Part" referent="RBX4b259e849bb14437833d19a2be7216a6">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-1.54748523</X>
								<Y>4.12725115</Y>
								<Z>-6.41529083</Z>
								<R00>1</R00>
								<R01>1.16340444e-12</R01>
								<R02>-4.54747351e-13</R02>
								<R10>1.16340444e-12</R10>
								<R11>1.00000024</R11>
								<R12>-1.19207471e-07</R12>
								<R20>-4.54747351e-13</R20>
								<R21>-1.19207471e-07</R21>
								<R22>1.00000072</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">256</token>
							<string name="Name">DmgPart</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.154327154</X>
								<Y>2.84689021</Y>
								<Z>0.415651321</Z>
							</Vector3>
						</Properties>
						<Item class="Attachment" referent="RBX343110780c8e41f7bfc0ef40638a4d61">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>-1.24481058</Y>
									<Z>0.0309391022</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<string name="Name">Start</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX8b14b342ebf74b54ba6413a59c5f7448">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>1.42386961</Y>
									<Z>0.00210189819</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<string name="Name">End</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Model" referent="RBX97c8c8cba6a040a19b3cd44209d13a76">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">Athens</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>25.6980591</X>
								<Y>2.31672621</Y>
								<Z>30.2337494</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="MeshPart" referent="RBXb1e60817ab5f4d5583e8aa96b2b9852e">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>26.4272022</X>
								<Y>1.53173399</Y>
								<Z>30.4474735</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>54.8149986</X>
								<Y>54.8149986</Y>
								<Z>5.32070017</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Content name="MeshID"><url>rbxassetid://3073593653</url></Content>
							<Content name="MeshId"><url>rbxassetid://3073593653</url></Content>
							<string name="Name">Outer</string>
							<SharedString name="PhysicalConfigData">oAqLOvZlGicIFwMMS0nliA==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><url>rbxassetid://3073656775</url></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>3.06346822</X>
								<Y>3.06346822</Y>
								<Z>0.297360152</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="MeshPart" referent="RBXbc964caa94d24246a464eb637ea1b025">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>26.4272022</X>
								<Y>1.53173399</Y>
								<Z>30.4522934</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>51.240799</X>
								<Y>51.240799</Y>
								<Z>3.82559991</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Content name="MeshID"><url>rbxassetid://3073592760</url></Content>
							<Content name="MeshId"><url>rbxassetid://3073592760</url></Content>
							<string name="Name">Inner</string>
							<SharedString name="PhysicalConfigData">dlzy6TJA41gb6Xk/+m7GaA==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><url>rbxassetid://3073658957</url></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>2.86371565</X>
								<Y>2.86371565</Y>
								<Z>0.213802859</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="MeshPart" referent="RBXe6e4dc6960d4448bb15e80fc7de930e3">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>26.4272022</X>
								<Y>1.53173399</Y>
								<Z>30.4165955</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>18.5741997</X>
								<Y>45.2714005</Y>
								<Z>5.34459972</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Content name="MeshID"><url>rbxassetid://3073592012</url></Content>
							<Content name="MeshId"><url>rbxassetid://3073592012</url></Content>
							<string name="Name">grip</string>
							<SharedString name="PhysicalConfigData">QW93F1Nr+IPKJqDYM9uuEw==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><url>rbxassetid://3073659938</url></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>1.03806388</X>
								<Y>2.5301013</Y>
								<Z>0.298695862</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX3e6e2034afe849b4ab9449f6dfde4af4">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>26.3927498</X>
								<Y>1.79537344</Y>
								<Z>30.2417583</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="Name">BodyAttach</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.921800733</X>
								<Y>1.1151818</Y>
								<Z>0.0926035643</Z>
							</Vector3>
						</Properties>
						<Item class="Weld" referent="RBX5f23162dfa0f49dda2729a2c4106f096">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>0.0344524384</X>
									<Y>-0.26363945</Y>
									<Z>0.174837112</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">grip</string>
								<Ref name="Part0">RBX3e6e2034afe849b4ab9449f6dfde4af4</Ref>
								<Ref name="Part1">RBXe6e4dc6960d4448bb15e80fc7de930e3</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Weld" referent="RBX876c9e29910440bcb7827ffbab78e0b2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>0.0344524384</X>
									<Y>-0.26363945</Y>
									<Z>0.205715179</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">Outer</string>
								<Ref name="Part0">RBX3e6e2034afe849b4ab9449f6dfde4af4</Ref>
								<Ref name="Part1">RBXb1e60817ab5f4d5583e8aa96b2b9852e</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Weld" referent="RBX615de82742d14a4d860d6986a90a5e9b">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>0.0344524384</X>
									<Y>-0.26363945</Y>
									<Z>0.210535049</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">Inner</string>
								<Ref name="Part0">RBX3e6e2034afe849b4ab9449f6dfde4af4</Ref>
								<Ref name="Part1">RBXbc964caa94d24246a464eb637ea1b025</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Model" referent="RBX18272b821e894423aed0e74ed28c6d64">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">Shield</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>5.70561218</X>
								<Y>1.6924057</Y>
								<Z>-18.778244</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>-0</R12>
								<R20>-1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="MeshPart" referent="RBX4c8a2c7432314a7bb7f3638457438c9e">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>8.19128704</X>
								<Y>1.45770645</Y>
								<Z>-19.1140442</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>0.985727787</X>
								<Y>3.71904278</Y>
								<Z>3.71904325</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">1088</token>
							<Content name="MeshID"><url>rbxassetid://3064291081</url></Content>
							<Content name="MeshId"><url>rbxassetid://3064291081</url></Content>
							<string name="Name"> Pegasus</string>
							<SharedString name="PhysicalConfigData">e5KCADyg5zoQUR1gMWV5Ng==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><url>rbxassetid://3064958253</url></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>0.411225557</X>
								<Y>2.90904331</Y>
								<Z>2.90904331</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX65ae512e11cc44649c5b0ac32dc32e68">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>8.12109852</X>
								<Y>1.57892704</Y>
								<Z>-19.3272934</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="Name">BodyAttach</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.921800733</X>
								<Y>1.1151818</Y>
								<Z>0.0926035643</Z>
							</Vector3>
						</Properties>
						<Item class="Weld" referent="RBXf17205bc50e34f52bdb82550cd7dde5c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>0.0701885223</X>
									<Y>-0.121220589</Y>
									<Z>0.213249207</Z>
									<R00>0</R00>
									<R01>0</R01>
									<R02>-1</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>1</R20>
									<R21>0</R21>
									<R22>0</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name"> Pegasus</string>
								<Ref name="Part0">RBX65ae512e11cc44649c5b0ac32dc32e68</Ref>
								<Ref name="Part1">RBX4c8a2c7432314a7bb7f3638457438c9e</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Model" referent="RBX98d75dcfc95446d9a738aa826472e76e">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">Sparta</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>21.3313332</X>
								<Y>3.61223507</Y>
								<Z>31.1711006</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="MeshPart" referent="RBX4f7b7485ef35443c8cf47aa35a2b5ed4">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>22.0604763</X>
								<Y>2.82724595</Y>
								<Z>31.3848248</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>54.8149986</X>
								<Y>54.8149986</Y>
								<Z>5.32070017</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Content name="MeshID"><url>rbxassetid://3073593653</url></Content>
							<Content name="MeshId"><url>rbxassetid://3073593653</url></Content>
							<string name="Name">Outer</string>
							<SharedString name="PhysicalConfigData">oAqLOvZlGicIFwMMS0nliA==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><url>rbxassetid://3074555514</url></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>3.06346822</X>
								<Y>3.06346822</Y>
								<Z>0.297360152</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="MeshPart" referent="RBX3d46f5b9c6144a1797959ba32945027f">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>22.0604763</X>
								<Y>2.82724595</Y>
								<Z>31.3896446</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>51.240799</X>
								<Y>51.240799</Y>
								<Z>3.82559991</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Content name="MeshID"><url>rbxassetid://3073592760</url></Content>
							<Content name="MeshId"><url>rbxassetid://3073592760</url></Content>
							<string name="Name">Inner</string>
							<SharedString name="PhysicalConfigData">dlzy6TJA41gb6Xk/+m7GaA==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><url>rbxassetid://3074554543</url></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>2.86371565</X>
								<Y>2.86371565</Y>
								<Z>0.213802859</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="MeshPart" referent="RBX711e819aa4904966a58a0b3205172cb3">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>22.0604763</X>
								<Y>2.82724595</Y>
								<Z>31.3539467</Z>
								<R00>-1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>-1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>18.5741997</X>
								<Y>45.2714005</Y>
								<Z>5.34459972</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="LODData"></BinaryString>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<Content name="MeshID"><url>rbxassetid://3073592012</url></Content>
							<Content name="MeshId"><url>rbxassetid://3073592012</url></Content>
							<string name="Name">grip</string>
							<SharedString name="PhysicalConfigData">QW93F1Nr+IPKJqDYM9uuEw==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><url>rbxassetid://3073659938</url></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="size">
								<X>1.03806388</X>
								<Y>2.5301013</Y>
								<Z>0.298695862</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX66c950bdd3704785bf22d4d05cb0eb66">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>22.0260239</X>
								<Y>3.0908854</Y>
								<Z>31.1791096</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">256</token>
							<string name="Name">BodyAttach</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">1</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>0.921800733</X>
								<Y>1.1151818</Y>
								<Z>0.0926035643</Z>
							</Vector3>
						</Properties>
						<Item class="Weld" referent="RBX29fda591e18b4f82903b8f71af29bdba">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>0.0344524384</X>
									<Y>-0.26363945</Y>
									<Z>0.174837112</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">grip</string>
								<Ref name="Part0">RBX66c950bdd3704785bf22d4d05cb0eb66</Ref>
								<Ref name="Part1">RBX711e819aa4904966a58a0b3205172cb3</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Weld" referent="RBX6e0bb5d6f4f84dea9bf4fe19f78a64c6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>0.0344524384</X>
									<Y>-0.26363945</Y>
									<Z>0.205715179</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">Outer</string>
								<Ref name="Part0">RBX66c950bdd3704785bf22d4d05cb0eb66</Ref>
								<Ref name="Part1">RBX4f7b7485ef35443c8cf47aa35a2b5ed4</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Weld" referent="RBX78345efd517548debdae36e09af6f738">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="C0">
									<X>0.0344524384</X>
									<Y>-0.26363945</Y>
									<Z>0.210535049</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<CoordinateFrame name="C1">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="Enabled">true</bool>
								<string name="Name">Inner</string>
								<Ref name="Part0">RBX66c950bdd3704785bf22d4d05cb0eb66</Ref>
								<Ref name="Part1">RBX3d46f5b9c6144a1797959ba32945027f</Ref>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX8da2ca1461244226b752743ab405b401">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Particles</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ParticleEmitter" referent="RBXb5a068775bea4ab0a67deef6bdb64d5f">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>-5</Y>
							<Z>0</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="Brightness">1</float>
						<ColorSequence name="Color">0 0.666667 0 0 0 1 0.423529 0 0 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">5</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">0.3 0.5 </NumberRange>
						<float name="LightEmission">0.400000006</float>
						<float name="LightInfluence">1</float>
						<bool name="LockedToPart">false</bool>
						<string name="Name">Blood1</string>
						<token name="Orientation">0</token>
						<float name="Rate">10000000</float>
						<NumberRange name="RotSpeed">-40 270 </NumberRange>
						<NumberRange name="Rotation">-360 360 </NumberRange>
						<token name="Shape">0</token>
						<token name="ShapeInOut">0</token>
						<float name="ShapePartial">1</float>
						<token name="ShapeStyle">0</token>
						<NumberSequence name="Size">0 0 0 1 2.875 0 </NumberSequence>
						<int64 name="SourceAssetId">-1</int64>
						<NumberRange name="Speed">5 10 </NumberRange>
						<Vector2 name="SpreadAngle">
							<X>360</X>
							<Y>360</Y>
						</Vector2>
						<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>rbxassetid://73547327</url></Content>
						<float name="TimeScale">1</float>
						<NumberSequence name="Transparency">0 0.1 0 0.397245 0.14375 0 0.50287 0.49375 0 1 1 0 </NumberSequence>
						<float name="VelocityInheritance">0</float>
						<float name="ZOffset">0</float>
					</Properties>
				</Item>
				<Item class="ParticleEmitter" referent="RBX6a10234f54734e7b9884b01e315b20ce">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>-20</Y>
							<Z>0</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="Brightness">1</float>
						<ColorSequence name="Color">0 0.45098 0 0 0 1 0.45098 0 0 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">5</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">0.5 1.5 </NumberRange>
						<float name="LightEmission">0.200000003</float>
						<float name="LightInfluence">1</float>
						<bool name="LockedToPart">false</bool>
						<string name="Name">Blood2</string>
						<token name="Orientation">0</token>
						<float name="Rate">100000</float>
						<NumberRange name="RotSpeed">0 0 </NumberRange>
						<NumberRange name="Rotation">0 0 </NumberRange>
						<token name="Shape">0</token>
						<token name="ShapeInOut">0</token>
						<float name="ShapePartial">1</float>
						<token name="ShapeStyle">0</token>
						<NumberSequence name="Size">0 0.125 0.125 1 0 0 </NumberSequence>
						<int64 name="SourceAssetId">-1</int64>
						<NumberRange name="Speed">5 14 </NumberRange>
						<Vector2 name="SpreadAngle">
							<X>360</X>
							<Y>360</Y>
						</Vector2>
						<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>http://www.roblox.com/asset/?id=134531274</url></Content>
						<float name="TimeScale">1</float>
						<NumberSequence name="Transparency">0 0.3 0 1 0.3 0 </NumberSequence>
						<float name="VelocityInheritance">0</float>
						<float name="ZOffset">1</float>
					</Properties>
				</Item>
				<Item class="ParticleEmitter" referent="RBX0326f9ade24949fdaeeefa66902dbe4c">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>-5</Y>
							<Z>0</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="Brightness">1</float>
						<ColorSequence name="Color">0 0.486275 0 0 0 1 0.258824 0 0 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">5</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">0.4 1 </NumberRange>
						<float name="LightEmission">0.200000003</float>
						<float name="LightInfluence">1</float>
						<bool name="LockedToPart">false</bool>
						<string name="Name">Blood3</string>
						<token name="Orientation">0</token>
						<float name="Rate">3000</float>
						<NumberRange name="RotSpeed">-40 270 </NumberRange>
						<NumberRange name="Rotation">-360 360 </NumberRange>
						<token name="Shape">0</token>
						<token name="ShapeInOut">0</token>
						<float name="ShapePartial">1</float>
						<token name="ShapeStyle">0</token>
						<NumberSequence name="Size">0 0 0 1 2.875 0 </NumberSequence>
						<int64 name="SourceAssetId">-1</int64>
						<NumberRange name="Speed">3 7 </NumberRange>
						<Vector2 name="SpreadAngle">
							<X>360</X>
							<Y>360</Y>
						</Vector2>
						<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>rbxassetid://241779220</url></Content>
						<float name="TimeScale">1</float>
						<NumberSequence name="Transparency">0 1 0 0.097589 0.4875 0 0.401837 0.75625 0 1 1 0 </NumberSequence>
						<float name="VelocityInheritance">0</float>
						<float name="ZOffset">0.5</float>
					</Properties>
				</Item>
				<Item class="ParticleEmitter" referent="RBX88a8c11b1f8a414db3d4e0cbeb267362">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<float name="Brightness">1</float>
						<ColorSequence name="Color">0 0.368627 0.0784314 0.0196078 0 0.468858 0.980392 0.980392 0.486275 0 1 1 0.988235 0.592157 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">2</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">0.3 0.3 </NumberRange>
						<float name="LightEmission">1</float>
						<float name="LightInfluence">0</float>
						<bool name="LockedToPart">false</bool>
						<string name="Name">SparkEmitter</string>
						<token name="Orientation">0</token>
						<float name="Rate">100</float>
						<NumberRange name="RotSpeed">360 360 </NumberRange>
						<NumberRange name="Rotation">180 180 </NumberRange>
						<token name="Shape">0</token>
						<token name="ShapeInOut">0</token>
						<float name="ShapePartial">1</float>
						<token name="ShapeStyle">0</token>
						<NumberSequence name="Size">0 2.82051 0 0.0775758 3.17949 0 0.151515 0.820513 0 0.96 0 0 1 0 0 </NumberSequence>
						<int64 name="SourceAssetId">-1</int64>
						<NumberRange name="Speed">9 9 </NumberRange>
						<Vector2 name="SpreadAngle">
							<X>360</X>
							<Y>360</Y>
						</Vector2>
						<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
						<BinaryString name="Tags"></BinaryString>
						<Content name="Texture"><url>rbxasset://textures/particles/sparkles_main.dds</url></Content>
						<float name="TimeScale">1</float>
						<NumberSequence name="Transparency">0 0 0 0.145455 0 0 0.460606 1 0 0.859394 0 0 0.924848 1 0 1 1 0 </NumberSequence>
						<float name="VelocityInheritance">0</float>
						<float name="ZOffset">0</float>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXf6a67ffbcf7045e88667c7f822e0ca23">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">shared</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Folder" referent="RBXde980b04a95a4e66b9e6235877055fa7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">components</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBXf79c75c5ef8a44d4867f7326a1f9f731">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">keep</string>
						<string name="ScriptGuid">{093985a6-215d-43bf-8f72-413d4c053f43}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
return nil
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXfc52c68f1d12453fa8f645550dd4dec7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">modules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX46c434ce3f25469aab8ae57957f96910">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ToolTypes</string>
						<string name="ScriptGuid">{6f7f4df1-99e8-4c1a-a30e-7f93bf123b32}</string>
						<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
return nil
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0dd2c063663b43ce90ff6e597f30902a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">spring</string>
						<string name="ScriptGuid">{cb0268f1-832d-4acd-ab9d-9a38857fa27d}</string>
						<ProtectedString name="Source"><![CDATA[--[[
class Spring

Description:
	A physical model of a spring, useful in many applications. Properties only evaluate
	upon index making this model good for lazy applications

API:
	Spring = Spring.new(number position)
		Creates a new spring in 1D
	Spring = Spring.new(Vector3 position)
		Creates a new spring in 3D

	Spring.Position
		Returns the current position
	Spring.Velocity
		Returns the current velocity
	Spring.Target
		Returns the target
	Spring.Damper
		Returns the damper
	Spring.Speed
		Returns the speed

	Spring.Target = number/Vector3
		Sets the target
	Spring.Position = number/Vector3
		Sets the position
	Spring.Velocity = number/Vector3
		Sets the velocity
	Spring.Damper = number [0, 1]
		Sets the spring damper, defaults to 1
	Spring.Speed = number [0, infinity)
		Sets the spring speed, defaults to 1

	Spring:TimeSkip(number DeltaTime)
		Instantly skips the spring forwards by that amount of now
	Spring:Impulse(number/Vector3 velocity)
		Impulses the spring, increasing velocity by the amount given
]]


local Spring = {}

--- Creates a new spring
-- @param initial A number or Vector3 (anything with * number and addition/subtraction defined)
function Spring.new(initial)
	local target = initial or 0

	return setmetatable({
		_time0 = tick();
		_position0 = target;
		_velocity0 = 0*target;
		_target = target;
		_damper = 1;
		_speed = 1;
	}, Spring)
end

--- Impulse the spring with a change in velocity
-- @param velocity The velocity to impulse with
function Spring:Impulse(velocity)
	self.Velocity = self.Velocity + velocity
end

--- Skip forwards in now
-- @param delta now to skip forwards
function Spring:TimeSkip(delta)
	local now = tick()
	local position, velocity = self:_positionVelocity(now+delta)
	self._position0 = position
	self._velocity0 = velocity
	self._time0 = now
end

function Spring:__index(index)
	if Spring[index] then
		return Spring[index]
	elseif index == "Value" or index == "Position" or index == "p" then
		local position, _ = self:_positionVelocity(tick())
		return position
	elseif index == "Velocity" or index == "v" then
		local _, velocity = self:_positionVelocity(tick())
		return velocity
	elseif index == "Target" or index == "t" then
		return self._target
	elseif index == "Damper" or index == "d" then
		return self._damper
	elseif index == "Speed" or index == "s" then
		return self._speed
	else
		error(("%q is not a valid member of Spring"):format(tostring(index)), 2)
	end
end

function Spring:__newindex(index, value)
	local now = tick()

	if index == "Value" or index == "Position" or index == "p" then
		local _, velocity = self:_positionVelocity(now)
		self._position0 = value
		self._velocity0 = velocity
	elseif index == "Velocity" or index == "v" then
		local position, _ = self:_positionVelocity(now)
		self._position0 = position
		self._velocity0 = value
	elseif index == "Target" or index == "t" then
		local position, velocity = self:_positionVelocity(now)
		self._position0 = position
		self._velocity0 = velocity
		self._target = value
	elseif index == "Damper" or index == "d" then
		local position, velocity = self:_positionVelocity(now)
		self._position0 = position
		self._velocity0 = velocity
		self._damper = math.clamp(value, 0, 1)
	elseif index == "Speed" or index == "s" then
		local position, velocity = self:_positionVelocity(now)
		self._position0 = position
		self._velocity0 = velocity
		self._speed = value < 0 and 0 or value
	else
		error(("%q is not a valid member of Spring"):format(tostring(index)), 2)
	end

	self._time0 = now
end

function Spring:_positionVelocity(now)
	local p0 = self._position0
	local v0 = self._velocity0
	local p1 = self._target
	local d = self._damper
	local s = self._speed

	local t = s*(now - self._time0)
	local d2 = d*d

	local h, si, co
	if d2 < 1 then
		h = math.sqrt(1 - d2)
		local ep = math.exp(-d*t)/h
		co, si = ep*math.cos(h*t), ep*math.sin(h*t)
	elseif d2 == 1 then
		h = 1
		local ep = math.exp(-d*t)/h
		co, si = ep, ep*t
	else
		h = math.sqrt(d2 - 1)
		local u = math.exp((-d + h)*t)/(2*h)
		local v = math.exp((-d - h)*t)/(2*h)
		co, si = u + v, u - v
	end

	local a0 = h*co + d*si
	local a1 = 1 - (h*co + d*si)
	local a2 = si/s

	local b0 = -s*si
	local b1 = s*si
	local b2 = h*co - d*si

	return
		a0*p0 + a1*p1 + a2*v0,
		b0*p0 + b1*p1 + b2*v0
end

return Spring]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXdb922017c73840e78baee3c3150abe2c">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Config</string>
					<string name="ScriptGuid">{100145fd-4ff0-4aa6-b133-a19316c0f243}</string>
					<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
-- CONFIG:
local Config = {
	Animations = {
		Walk = 6492892050,
		Stunned = {
			Stab = 7129179801,
			Left = 7129183472,
			Right = 7129034287,
		},
		Sword = {
			Left = 7632564332,
			Right = 7632959453,
			Stab = 7632993927,
			Holster = 7566107081,
			Equip = 7532918137,
		},
		Shield = {
			Block = 7566699306,
			Holster = 7566057875,
			Equip = 7566034212,
		},
	},
	Elements = {
		Gore = true,
		Rotation = true,
		Direction = true,
		CameraShake = true,
		Sprinting = true,
		SpringCamera = true,
	},
	Attributes = {
		WalkingSpeed = 14,
		SprintingSpeed = 18,
	},
	Tools = {
		Kopis = "Sword",
		Shield = "Shield",
		Sparta = "Shield",
		Athens = "Shield",
	},
}
return Config
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXe5153c5222044013a686d944b63269f9">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">events</string>
					<string name="ScriptGuid">{5215e069-8568-4bcf-863c-5238c398019c}</string>
					<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"))
local createNetworkingEvent = TS.import(script, TS.getModule(script, "@flamework", "networking").out.events.createNetworkingEvent).createNetworkingEvent
local t = TS.import(script, TS.getModule(script, "@rbxts", "t").lib.ts).t
local GlobalEvents = createNetworkingEvent("shared/events@GlobalEvents", {
	Direction = { t.union(t.literal("DOWN"), t.literal("UP")) },
	Input = { t.interface({
		UserInputState = t.enum(Enum.UserInputState),
		UserInputType = t.enum(Enum.UserInputType),
		KeyCode = t.enum(Enum.KeyCode),
	}) },
	UpdateRotation = { t.CFrame, t.CFrame, t.CFrame, t.CFrame },
}, {
	AttackStatus = { t.union(t.literal("BLOCKED"), t.literal("DAMAGED"), t.literal("HIT"), t.literal("SWUNG")) },
	UpdateRotation = { t.instanceIsA("Player"), t.CFrame, t.CFrame, t.CFrame, t.CFrame },
	ButtonChanged = { t.instanceIsA("Model"), t.number },
})
return {
	GlobalEvents = GlobalEvents,
}
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX382a86a4daea4c94a7febf16173f2e75">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Types</string>
					<string name="ScriptGuid">{bc83c0fb-016d-4ac7-9e93-d98122e73e0a}</string>
					<ProtectedString name="Source"><![CDATA[-- Compiled with roblox-ts v1.2.3
return nil
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBXf764a7984ddc422bb80ec50a518caef3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="LanguageService" referent="RBX1d59a36c4cd2410ea68aee0a1a3a1bd4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LanguageService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX0842687aab8b490292086f8ab7d1ae29">
		<Properties>
			<Color3 name="Ambient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="EnvironmentDiffuseScale">0</float>
			<float name="EnvironmentSpecularScale">0</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.75</R>
				<G>0.75</G>
				<B>0.75</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">false</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<bool name="Outlines">true</bool>
			<float name="ShadowSoftness">0.5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">2</token>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
		<Item class="Atmosphere" referent="RBX1e062338af1d41da8ffb6fd4407393bb">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="Color">
					<R>0.784300029</R>
					<G>0.666700006</G>
					<B>0.423500001</B>
				</Color3>
				<Color3 name="Decay">
					<R>0.360799998</R>
					<G>0.235300004</G>
					<B>0.0549000017</B>
				</Color3>
				<float name="Density">0.5</float>
				<float name="Glare">0</float>
				<float name="Haze">0</float>
				<string name="Name">Atmosphere</string>
				<float name="Offset">0</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Sky" referent="RBX7686c10d04674628b62e75e9a2ad6f2c">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="CelestialBodiesShown">true</bool>
				<float name="MoonAngularSize">11</float>
				<Content name="MoonTextureId"><url>rbxasset://sky/moon.jpg</url></Content>
				<string name="Name">SunsetSereneSky</string>
				<Content name="SkyboxBk"><url>rbxassetid://653719502</url></Content>
				<Content name="SkyboxDn"><url>rbxassetid://653718790</url></Content>
				<Content name="SkyboxFt"><url>rbxassetid://653719067</url></Content>
				<Content name="SkyboxLf"><url>rbxassetid://653719190</url></Content>
				<Content name="SkyboxRt"><url>rbxassetid://653718931</url></Content>
				<Content name="SkyboxUp"><url>rbxassetid://653719321</url></Content>
				<int64 name="SourceAssetId">903259919</int64>
				<int name="StarCount">1336</int>
				<float name="SunAngularSize">21</float>
				<Content name="SunTextureId"><url>rbxasset://sky/sun.jpg</url></Content>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="BloomEffect" referent="RBX4a3eada98a9746be9e5b34374e18abff">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<float name="Intensity">1</float>
				<string name="Name">Bloom</string>
				<float name="Size">24</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="Threshold">1</float>
			</Properties>
		</Item>
		<Item class="BlurEffect" referent="RBXaeb43a0e01d5434ba6cd69b394801532">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<string name="Name">Blur</string>
				<float name="Size">2</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ColorCorrectionEffect" referent="RBX1047fe01e5504538a151b1c824b8b59f">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="Brightness">0</float>
				<float name="Contrast">0.400000006</float>
				<bool name="Enabled">true</bool>
				<string name="Name">ColorCorrection</string>
				<float name="Saturation">-0.100000001</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TintColor">
					<R>1</R>
					<G>0.92549026</G>
					<B>0.847058892</B>
				</Color3>
			</Properties>
		</Item>
		<Item class="DepthOfFieldEffect" referent="RBX442820b0f7c0458cbd670a32039fd0a7">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<float name="FarIntensity">0.100000001</float>
				<float name="FocusDistance">25</float>
				<float name="InFocusRadius">32</float>
				<string name="Name">DepthOfField</string>
				<float name="NearIntensity">0.100000001</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="SunRaysEffect" referent="RBXe8bc7950dcab40c6b9e84890779dabfc">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Enabled">true</bool>
				<float name="Intensity">0.25</float>
				<string name="Name">SunRays</string>
				<int64 name="SourceAssetId">-1</int64>
				<float name="Spread">1</float>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
	<Item class="HttpService" referent="RBXa5c9d1a48d954fe59bdb9ebbcbe9754c">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="HttpEnabled">true</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBXeefe3448132145559bbe341b1eb53702">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Enabled">true</bool>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Teams" referent="RBXb1c956c8612e4daba824dd506daedab9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Teams</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Team" referent="RBX96efa8a66fe14bb9a7e1dc45f56f1325">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoAssignable">false</bool>
				<string name="Name">Defenders</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">102</int>
			</Properties>
			<Item class="Model" referent="RBXc573a0ceafdf49fcbca40a5720417206">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">Athens</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
				</Properties>
			</Item>
		</Item>
		<Item class="Team" referent="RBX9f010da7b8154e8c876c8b370fc516b4">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoAssignable">true</bool>
				<string name="Name">Neutral</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">1</int>
			</Properties>
			<Item class="Model" referent="RBX1f2619f654f54bd5ac7fa871803b0d34">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">Shield</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
				</Properties>
			</Item>
		</Item>
		<Item class="Team" referent="RBX6e5dc4adb99c4fd6b2c3f85b1f4e7c00">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoAssignable">false</bool>
				<string name="Name">Invaders</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">331</int>
			</Properties>
			<Item class="Model" referent="RBXef74d7fbda5f49bd85ba27cf4e507278">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">Sparta</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="TestService" referent="RBXd6cae736f18f4aa89a2bdf096d04acbd">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<bool name="Is30FpsThrottleEnabled">true</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="QW93F1Nr+IPKJqDYM9uuEw==">Q1NHUEhTBgAAAOyGO0Tgi7g7y0mEvXSTDL+f+xFHhE2fwijEnL8jhxFGsrCdQbD9LkcQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQAAACtFQxB6hW1wCz2
E8DptAFB6hW1wBw2UL+8tglBDm3BwEgiMb/2lxRBDm3BwCz2E8D2l5RADm3BwPD96j/2l5RA
4f+5wDAmzj/2l5RA6hW1wJgTuz85WPBA6hW1wFlNlb4b1dJADm3BwG6niT9qjsZA6hW1wC/v
WT8wAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAA
AAAAAAUAAAAGAAAAAAAAAAYAAAAJAAAAAAAAAAkAAAAHAAAAAAAAAAcAAAABAAAAAQAAAAcA
AAAIAAAAAQAAAAgAAAACAAAAAgAAAAgAAAAEAAAAAgAAAAQAAAADAAAABAAAAAkAAAAGAAAA
BAAAAAYAAAAFAAAABAAAAAgAAAAJAAAABwAAAAkAAAAIAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPx4AAAAEAAAA9pcUwQ5twUAs9hPArRUMweoVtUAs9hPA
vLYJwQ5twUBIIjG/9peUwA5twUDw/eo/6bQBweoVtUAcNlC/9peUwOH/uUAwJs4/9peUwOoV
tUCYE7s/G9XSwA5twUBup4k/ao7GwOoVtUAv71k/OVjwwOoVtUBZTZW+MAAAAAAAAAABAAAA
AgAAAAAAAAACAAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAAAQAAAAEAAAAEAAAAAgAAAAEA
AAADAAAABQAAAAEAAAAFAAAABgAAAAEAAAAGAAAACAAAAAEAAAAIAAAACQAAAAEAAAAJAAAA
BAAAAAIAAAAEAAAABwAAAAMAAAAHAAAACAAAAAMAAAAIAAAABgAAAAMAAAAGAAAABQAAAAQA
AAAJAAAABwAAAAcAAAAJAAAACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8eAAAABAAAAK0VDEHqFbVALPYTwPaXFEEObcFALPYTwLy2CUEObcFASCIxv3gL
BUHqFbVAkMqhv/aXlEDqFbVAmBO7P/aXlEBPYrxATmbXP/aXlEAObcFA8P3qPxvV0kAObcFA
bqeJP+m0AUHqFbVAHDZQv2qOxkDqFbVAL+9ZPzAAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMA
AAAAAAAAAwAAAAgAAAAAAAAACAAAAAkAAAAAAAAACQAAAAQAAAAAAAAABAAAAAUAAAAAAAAA
BQAAAAYAAAAAAAAABgAAAAEAAAABAAAABgAAAAcAAAABAAAABwAAAAIAAAACAAAABwAAAAgA
AAACAAAACAAAAAMAAAAEAAAACQAAAAYAAAAEAAAABgAAAAUAAAAGAAAACQAAAAcAAAAHAAAA
CQAAAAgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQA
AAD2lxTBDm3BwCz2E8C8tgnBDm3BwEgiMb+tFQzB6hW1wCz2E8D2l5TADm3BwPD96j94CwXB
6hW1wJDKob8b1dLADm3BwG6niT/ptAHB6hW1wBw2UL/2l5TA6hW1wJgTuz/2l5TAT2K8wE5m
1z9qjsbA6hW1wC/vWT8wAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAFAAAA
AAAAAAUAAAABAAAAAQAAAAQAAAACAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAAEAAAAAgAAAAQA
AAAGAAAAAgAAAAYAAAAJAAAAAgAAAAkAAAAHAAAAAgAAAAcAAAAIAAAAAgAAAAgAAAADAAAA
AwAAAAgAAAAHAAAAAwAAAAcAAAAJAAAAAwAAAAkAAAAFAAAABQAAAAkAAAAGAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPxsAAAAEAAAAsAsrwCZznkHPXJy+
sAsrwCZznkGgooo+AABSOCZznkEORg0+ID2qv6pdkUFMyES/zvoYwOnQh0FGY36/zvoYwOnQ
h0FW19W+kmwov+nQh0EVH+G+AABSOFjQh0Fp/O2+AABSOEv5k0FkgDu+KgAAAAAAAAABAAAA
AgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAAAQAAAAEA
AAAFAAAABgAAAAEAAAAGAAAABwAAAAEAAAAHAAAAAgAAAAIAAAAHAAAACAAAAAIAAAAIAAAA
AwAAAAMAAAAIAAAABwAAAAMAAAAHAAAABAAAAAQAAAAHAAAABQAAAAUAAAAHAAAABgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8YAAAABAAAAAAAAABw0AfB
ZOfjv+vU279w0AfBrCbjvwAAAADqFTXBRHq7v5u8XcBw0AfBhlwWwJu8XcBw0AfBSAHjv8pM
YsDqFTXBNPC5vx12YMDqFTXBFPO5v8pMYsDqFTXBbNUBwCQAAAAAAAAAAQAAAAIAAAAAAAAA
AgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAABAAAABQAAAAYA
AAABAAAABgAAAAIAAAACAAAABgAAAAUAAAACAAAABQAAAAcAAAACAAAABwAAAAMAAAADAAAA
BwAAAAUAAAADAAAABQAAAAQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/GAAAAAQAAACbvF1AcNAHwUgB47/KTGJA6hU1wTTwub+bvF1AcNAHwYZcFsDr1Ns/
cNAHwawm47/KTGJA6hU1wWzVAcAddmBA6hU1wRTzub8AAAAA6hU1wUR6u78AAAAAcNAHwWTn
478kAAAAAAAAAAEAAAAEAAAAAAAAAAQAAAACAAAAAAAAAAIAAAAHAAAAAAAAAAcAAAADAAAA
AAAAAAMAAAABAAAAAQAAAAMAAAAFAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAAEAAAAAgAAAAYA
AAAHAAAAAgAAAAQAAAAGAAAAAwAAAAcAAAAGAAAAAwAAAAYAAAAFAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPxgAAAAEAAAAAAAAAOoVNUFEeru/69Tbv3DQ
B0GsJuO/AAAAAHDQB0Fk5+O/m7xdwHDQB0GGXBbAykxiwOoVNUFs1QHAHXZgwOoVNUEU87m/
m7xdwHDQB0FIAeO/ykxiwOoVNUE08Lm/JAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAA
AAADAAAABAAAAAAAAAAEAAAABwAAAAAAAAAHAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAGAAAA
AwAAAAEAAAADAAAAAgAAAAEAAAAFAAAABwAAAAEAAAAHAAAABgAAAAMAAAAGAAAABwAAAAMA
AAAHAAAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8YAAAA
BAAAAMpMYkDqFTVBNPC5v8pMYkDqFTVBbNUBwB12YEDqFTVBFPO5v+vU2z9w0AdBrCbjv5u8
XUBw0AdBSAHjv5u8XUBw0AdBhlwWwAAAAADqFTVBRHq7vwAAAABw0AdBZOfjvyQAAAAAAAAA
AQAAAAYAAAAAAAAABgAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUA
AAAAAAAABQAAAAEAAAABAAAABQAAAAYAAAACAAAABgAAAAMAAAADAAAABgAAAAcAAAADAAAA
BwAAAAUAAAADAAAABQAAAAQAAAAFAAAABwAAAAYAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/FQAAAAQAAAAAgFI49BW1Qf7t0D0AgFI4JnOeQQ6MDT5wBivA
JnOeQfJTnL4IrHTA5KmpQagVvD0IrHTA5KmpQT3vKj8AgFI4d6+zQZ0JSj9wBivAJnOeQSmT
ij4eAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAA
AAAAAAUAAAABAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAACAAAAAgAAAAYAAAAEAAAAAgAAAAQA
AAADAAAABAAAAAYAAAAFAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPx4AAAAEAAAArv34QOoVNcAs9hPADinuQNYMNcB7ksq/lwnmQNYMNcA0lIS/WBmMQOoV
NcDkWmE/WBmMQAAAAABqRmE/rv34QAAAAAAs9hPAlwnmQAAAAAA0lIS/URawQNYMNcCcnOE+
WBmMQNgqDcDkWmE/URawQAAAAACcnOE+MAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAA
AAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAGAAAAAgAAAAEAAAAFAAAA
BgAAAAIAAAAGAAAACQAAAAIAAAAJAAAABwAAAAIAAAAHAAAAAwAAAAMAAAAHAAAACQAAAAMA
AAAJAAAACAAAAAMAAAAIAAAABAAAAAQAAAAIAAAACQAAAAQAAAAJAAAABgAAAAQAAAAGAAAA
BQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8qAAAABAAAAK79
+EAAAAAALPYTwK79+EDrFTVALPYTwJcJ5kAAAAAANJSEv1gZjEAAAAAAakZhP1gZjED0Zgo/
akZhP1gZjEBiETVA5FphPwTlzkDrFTVAu4HOvnzb8EDrFTVA1OPhv5cJ5kBiETVANJSEv6p4
2kBiETVAKCA4v1EWsEAAAAAAnJzhPlgZjEAMwC9A5FphP3zGnkBiETVA7vUmP1EWsEBiETVA
nJzhPkgAAAAAAAAAAQAAAAgAAAAAAAAACAAAAAIAAAAAAAAAAgAAAAoAAAAAAAAACgAAAAMA
AAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAABAAAABQAAAAYAAAABAAAA
BgAAAAcAAAABAAAABwAAAAgAAAACAAAACAAAAAkAAAACAAAACQAAAAoAAAADAAAACgAAAAsA
AAADAAAACwAAAAUAAAADAAAABQAAAAQAAAAFAAAACwAAAAwAAAAFAAAADAAAAAYAAAAGAAAA
CQAAAAgAAAAGAAAACAAAAAcAAAAGAAAADAAAAA0AAAAGAAAADQAAAAkAAAAJAAAADQAAAAoA
AAAKAAAADQAAAAwAAAAKAAAADAAAAAsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/JAAAAAQAAACu/fjA6xU1wCz2E8CXCebA6xU1wDSUhL+u/fjAAAAAACz2
E8BYGYzA9GYKv2pGYT9YGYzAYhE1wORaYT9RFrDA6xU1wJyc4T6XCebAAAAAADSUhL+qeNrA
6xU1wCggOL9YGYzAAAAAAGpGYT9YGYzADMAvwORaYT98xp7AYhE1wO71Jj9RFrDAAAAAAJyc
4T48AAAAAAAAAAEAAAAGAAAAAAAAAAYAAAACAAAAAAAAAAIAAAAIAAAAAAAAAAgAAAADAAAA
AAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAHAAAAAAAAAAcAAAABAAAAAQAAAAcA
AAAGAAAAAgAAAAYAAAALAAAAAgAAAAsAAAAIAAAAAwAAAAgAAAAJAAAAAwAAAAkAAAAEAAAA
BAAAAAkAAAAKAAAABAAAAAoAAAAFAAAABQAAAAoAAAALAAAABQAAAAsAAAAHAAAABgAAAAcA
AAALAAAACAAAAAsAAAAJAAAACQAAAAsAAAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAPyEAAAAEAAAArv34wAAAAAAs9hPArv34wOoVNUAs9hPAWBmMwAAA
AABqRmE/lwnmwAAAAAA0lIS/DinuwNYMNUB7ksq/UhnqwOoVNUBYk6e/WBmMwOoVNUDkWmE/
WBmMwNgqDUDkWmE/URawwAAAAACcnOE+lwnmwOoVNUA0lIS/URawwOoVNUCcnOE+NgAAAAAA
AAABAAAAAgAAAAAAAAACAAAACAAAAAAAAAAIAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAA
AQAAAAEAAAAEAAAABQAAAAEAAAAFAAAACQAAAAEAAAAJAAAACgAAAAEAAAAKAAAABgAAAAEA
AAAGAAAAAgAAAAIAAAAGAAAABwAAAAIAAAAHAAAACAAAAAMAAAAIAAAACgAAAAMAAAAKAAAA
CQAAAAMAAAAJAAAABQAAAAMAAAAFAAAABAAAAAYAAAAKAAAACAAAAAYAAAAIAAAABwAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8bAAAABAAAAAAAAADqFbXB
2qvQPQAAAABur7PBBAlKPwAAAABw0IfBjPztvls8qj9MXpHBk9NEv8j3GEBw0IfBYmt+vwis
dEANp6nBivC7PQisdEANp6nBfPsqP+qCKD9w0IfBWh7hvsj3GEBw0IfB79vVvioAAAAAAAAA
AQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAYA
AAAAAAAABgAAAAEAAAABAAAABgAAAAIAAAACAAAABgAAAAcAAAACAAAABwAAAAgAAAACAAAA
CAAAAAQAAAACAAAABAAAAAMAAAAEAAAACAAAAAYAAAAEAAAABgAAAAUAAAAGAAAACAAAAAcA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/GwAAAAQAAAAIrHTA
DaepwYrwuz0AAAAA6hW1wdqr0D0IrHTADaepwXz7Kj/I9xjAcNCHwWJrfr8AAAAAbq+zwQQJ
Sj9bPKq/TF6RwZPTRL8AAAAAcNCHwYz87b7qgii/cNCHwVoe4b7I9xjAcNCHwe/b1b4qAAAA
AAAAAAEAAAACAAAAAAAAAAIAAAAIAAAAAAAAAAgAAAADAAAAAAAAAAMAAAABAAAAAQAAAAQA
AAACAAAAAQAAAAMAAAAFAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAAEAAAAAgAAAAQAAAAGAAAA
AgAAAAYAAAAHAAAAAgAAAAcAAAAIAAAAAwAAAAgAAAAHAAAAAwAAAAcAAAAGAAAAAwAAAAYA
AAAFAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPxsAAAAEAAAA
AAAAAHDQh0GM/O2+hGsoP3DQh0FaHuG+rK10QA2nqUF8+yo/AAAAAG6vs0EECUo/AAAAAOoV
tUHaq9A9fz2qP0xekUGT00S/z/gYQHDQh0Fia36/z/gYQHDQh0Hv29W+rK10QA2nqUGK8Ls9
KgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAA
AAAFAAAABgAAAAAAAAAGAAAABwAAAAAAAAAHAAAAAQAAAAEAAAAHAAAAAgAAAAIAAAAIAAAA
BAAAAAIAAAAEAAAAAwAAAAIAAAAHAAAABgAAAAIAAAAGAAAACAAAAAQAAAAIAAAABgAAAAQA
AAAGAAAABQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8qAAAA
BAAAANLxGEBw0IdBMODVvtLxGEBw0IdBiH1+v9LxGMBw0IdBMODVvihCYkDqFTVBIOe5v8KG
a0DaY3hB2fowv8KGa0DaY3hBpDSiv9LxGMBw0IdBiH1+v8KGa8DaY3hB2fowvyhCYsDqFTVB
IOe5vyhCYkDqFTVB7NYBwMRZYkCA1DVBFH8BwMKGa8DaY3hBpDSivyhCYsDqFTVB7NYBwMRZ
YsCA1DVBFH8BwEgAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAIAAAAAAAAAAgAAAAgAAAAAAAAA
CAAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAsA
AAABAAAACwAAAAYAAAACAAAABgAAAAsAAAACAAAACwAAAAcAAAACAAAABwAAAAgAAAADAAAA
CQAAAAUAAAADAAAABQAAAAQAAAADAAAACAAAAAwAAAADAAAADAAAAAkAAAAFAAAACgAAAA0A
AAAFAAAADQAAAAsAAAAFAAAACQAAAAoAAAAHAAAACwAAAAwAAAAHAAAADAAAAAgAAAAJAAAA
DAAAAA0AAAAJAAAADQAAAAoAAAALAAAADQAAAAwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/KgAAAAQAAAAoQmJA6hU1wSDnub8oQmJA6hU1wezWAcAoQmLA
6hU1wSDnub/S8RhAcNCHwTDg1b7ChmtA2mN4wdn6ML/ChmtA2mN4waQ0or/EWWJAgNQ1wRR/
AcAoQmLA6hU1wezWAcDS8RjAcNCHwTDg1b7ChmvA2mN4wdn6ML/S8RhAcNCHwYh9fr/ChmvA
2mN4waQ0or/EWWLAgNQ1wRR/AcDS8RjAcNCHwYh9fr9IAAAAAAAAAAEAAAAHAAAAAAAAAAcA
AAACAAAAAAAAAAIAAAAIAAAAAAAAAAgAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAA
AAAAAAUAAAABAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAAMAAAAAQAAAAwAAAAHAAAAAgAAAAcA
AAALAAAAAgAAAAsAAAAJAAAAAgAAAAkAAAAIAAAAAwAAAAoAAAAFAAAAAwAAAAUAAAAEAAAA
AwAAAAgAAAANAAAAAwAAAA0AAAAKAAAABQAAAAoAAAANAAAABQAAAA0AAAALAAAABQAAAAsA
AAAMAAAABQAAAAwAAAAGAAAABwAAAAwAAAALAAAACAAAAAkAAAALAAAACAAAAAsAAAANAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPx4AAAAEAAAAnhaMwFQN
Q0BCTx/AnhaMwAkGtUAU4x3AnhaMwHMaNUDQP2E//vr4wHMaNUBT9BPAnhYMwaYTtUBT9BPA
nhaMwKYTtUD8asg/gxWwwHMaNUA8h+E+kgfmwHMaNUALnoS/tbEBwaYTtUDhIFC/Ho/GwKYT
tUDk7lk/MAAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAA
BAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAIAAAAFAAAABgAAAAIAAAAGAAAABwAAAAIA
AAAHAAAAAwAAAAMAAAAHAAAACAAAAAMAAAAIAAAABAAAAAQAAAAIAAAACQAAAAQAAAAJAAAA
BQAAAAUAAAAJAAAABgAAAAYAAAAJAAAACAAAAAYAAAAIAAAABwAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAAJ4WjEBUDUPAQk8fwJ4WjEAJBrXA
FOMdwJ4WjEBzGjXA0D9hP/76+EBzGjXAU/QTwJ4WDEGmE7XAU/QTwJ4WjECmE7XA/GrIP4MV
sEBzGjXAPIfhPpIH5kBzGjXAC56Ev7WxAUGmE7XA4SBQvx6PxkCmE7XA5O5ZPzAAAAAAAAAA
AQAAAAUAAAAAAAAABQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEA
AAABAAAABAAAAAUAAAACAAAABgAAAAcAAAACAAAABwAAAAMAAAACAAAABQAAAAYAAAADAAAA
BwAAAAgAAAADAAAACAAAAAQAAAAEAAAACAAAAAkAAAAEAAAACQAAAAUAAAAFAAAACQAAAAYA
AAAGAAAACQAAAAgAAAAGAAAACAAAAAcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/JwAAAAQAAACeFozAVg1DwEJPH8CeFozA7BU1wFg/YT+eFozACga1wBTj
HcCeFgzBYhG1wNTtE8D++vjA7BU1wNTtE8CDFbDA7BU1wGqG4T6eFozAYhG1wLRqyD9BCgXB
YhG1wM/Hob9T4PDA7BU1wNzY4b8ej8bAYhG1wGzuWT/+787A7BU1wN+Hzr61sQHBYhG1wCA7
UL+SB+bA7BU1wCWehL9CAAAAAAAAAAEAAAAGAAAAAAAAAAYAAAACAAAAAAAAAAIAAAADAAAA
AAAAAAMAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAUAAAAGAAAAAQAAAAQAAAAIAAAAAQAAAAgA
AAAMAAAAAQAAAAwAAAAKAAAAAQAAAAoAAAAFAAAAAgAAAAYAAAADAAAAAwAAAAcAAAAEAAAA
AwAAAAYAAAAJAAAAAwAAAAkAAAALAAAAAwAAAAsAAAAHAAAABAAAAAcAAAAIAAAABQAAAAkA
AAAGAAAABQAAAAoAAAAJAAAABwAAAAsAAAAIAAAACAAAAAsAAAAMAAAACQAAAAoAAAALAAAA
CgAAAAwAAAALAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPycA
AAAEAAAAnhaMQFYNQ0BCTx/AnhaMQOwVNUBXP2E/nhaMQAoGtUAU4x3AnhYMQWIRtUBV9BPA
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
YAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAA
AAAFAAAABgAAAAAAAAAGAAAADgAAAAAAAAAOAAAABwAAAAAAAAAHAAAAAQAAAAEAAAAHAAAA
DwAAAAEAAAAPAAAAEQAAAAEAAAARAAAAEAAAAAEAAAAQAAAACQAAAAEAAAAJAAAACAAAAAEA
AAAIAAAAAgAAAAIAAAAIAAAAAwAAAAMAAAAIAAAACQAAAAMAAAAJAAAACgAAAAMAAAAKAAAA
CwAAAAMAAAALAAAABAAAAAQAAAAMAAAABgAAAAQAAAAGAAAABQAAAAQAAAALAAAADAAAAAYA
AAAMAAAADQAAAAYAAAANAAAADgAAAAcAAAAOAAAADwAAAAkAAAAQAAAACgAAAAoAAAAQAAAA
CwAAAAsAAAAQAAAAEQAAAAsAAAARAAAADAAAAAwAAAARAAAADQAAAA0AAAAPAAAADgAAAA0A
AAARAAAADwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD85AAAA
BAAAAPaXlEC+cMFALfDqP+AnZEC+cMFAMHcQQPaXlEB6Y7xA1mbXP/aXlEDqFbVAvRm7P2AM
ikDqFbVA0bcewA66XUBw0AdB1VoWwA66XUBw0AdBvPrivwAAAAC+cMFA9gYrQHGShj/qFbVA
r+QOQIjcVkDqFbVAo2X7P+j3h0DqFbVAd9bOP6VGWUDqFbVARroqwMA3WUCA1LVAtbEqwAAA
AABw0AdBZtnjv3Dd2z9w0AdB/RzjvwAAAADqFbVAprgWQE4wWUDqFbVARroqwAAAAADs17hA
OUsFwAAAAADqFbVAOUsFwGYAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQA
AAAAAAAABAAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAAAAEAAAABAAAABwAAAAgAAAABAAAA
CAAAAAkAAAABAAAACQAAAAoAAAABAAAACgAAAAIAAAABAAAABgAAAAcAAAACAAAACgAAAAMA
AAADAAAACgAAAAkAAAADAAAACQAAAAgAAAADAAAACAAAAA8AAAADAAAADwAAABIAAAADAAAA
EgAAABAAAAADAAAAEAAAAAsAAAADAAAACwAAAAQAAAAEAAAACwAAAAwAAAAEAAAADAAAAAUA
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
BUBVPFlAphO1wFK4KsCIEGBAcxo1wI7YKsAAAAAAphO1wNCzFkAAAAAAcxo1wFJ6BcBFJ1lA
phO1wFK4KsDUoFRAcxo1wI7YKsAAAAAAphO1wPdJBcBgAAAAAAAAAAEAAAACAAAAAAAAAAIA
AAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAKAAAAAAAAAAoAAAANAAAAAAAAAA0AAAARAAAA
AAAAABEAAAAPAAAAAAAAAA8AAAALAAAAAAAAAAsAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYA
AAAHAAAAAAAAAAcAAAABAAAAAQAAAAcAAAAIAAAAAQAAAAgAAAAMAAAAAQAAAAwAAAAQAAAA
AQAAABAAAAAOAAAAAQAAAA4AAAAJAAAAAQAAAAkAAAADAAAAAQAAAAMAAAACAAAAAwAAAAkA
AAAKAAAAAwAAAAoAAAAEAAAABQAAAAsAAAAIAAAABQAAAAgAAAAHAAAABQAAAAcAAAAGAAAA
CAAAAAsAAAAMAAAACQAAAA0AAAAKAAAACQAAAA4AAAARAAAACQAAABEAAAANAAAACwAAAA8A
AAAQAAAACwAAABAAAAAMAAAADgAAABAAAAARAAAADwAAABEAAAAQAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzMAAAAEAAAAnhaMQKYTtUDPacg/j+dWQKYT
tUCqafs/Bo0+QHMaNUCOuLY/nhaMQHMaNUCuSWE/nhaMQAkGtUAe2B3AkAuKQKYTtUC3sR7A
AAAAAKYTtUDQsxZAxc/ZP3MaNUBLvMk/xlGKQHMaNUBwJCDAnhaMQFQNQ0DXSh/AVTxZQKYT
tUBSuCrAAAAAAKYTtUD3SQXAAAAAAHMaNUDeC+M/iBBgQHMaNUCO2CrARSdZQKYTtUBSuCrA
1KBUQHMaNUCO2CrAAAAAAHMaNUBSegXAWgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAA
AAADAAAACQAAAAAAAAAJAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAACgAAAAAAAAAKAAAA
DgAAAAAAAAAOAAAACwAAAAAAAAALAAAABgAAAAAAAAAGAAAAAQAAAAEAAAAGAAAABwAAAAEA
AAAHAAAAAgAAAAIAAAAHAAAADAAAAAIAAAAMAAAAEAAAAAIAAAAQAAAADwAAAAIAAAAPAAAA
DQAAAAIAAAANAAAACAAAAAIAAAAIAAAAAwAAAAMAAAAIAAAACQAAAAQAAAAJAAAABQAAAAUA
AAAJAAAACAAAAAUAAAAIAAAACgAAAAYAAAALAAAAEAAAAAYAAAAQAAAADAAAAAYAAAAMAAAA
BwAAAAgAAAANAAAACgAAAAoAAAANAAAADwAAAAoAAAAPAAAADgAAAAsAAAAOAAAADwAAAAsA
AAAPAAAAEAAAAA==</SharedString>
		<SharedString md5="XDAnmIGUuHcLCH0X3uq+mA==">Q1NHUEhTBgAAAA1h1z0AAAAAAAAAAAAAAAC+T4o8AAAAAAAAAAAr44w7AAAAACXdpTwQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/PAAAAAQAAACcFD+++GMOv457
kz0SYb29+GMOvxAulz3iJLy9+GMOvwSSfL2cFD++eqkYvzE9FT1QTOa9mAMivzIWgDycFD++
Gz8Pvy8ul72cFD++fakYv+HGKL3iJLy9QrMgv2vQ5rziJLy9RbMgv1O6vzziJLy9z4IXv83H
db3TEf+90Hchv4Yrp7ziJLy96mYSv2hclT1VVQ++7lkRv1Eul725Pg2++GMOv1Iul72cFD++
+GMOvy8ul721Ef+90Hchv1YWgDxgTOa9lgMiv60rp7y7QTO++GMOvxAulz2qesK9hgESvxou
lz3iJLy9+GMOv6Lalj1sAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAAAAAAAwAAAAAAAAAFAAAA
BgAAAAMAAAAFAAAABgAAAAUAAAAHAAAACAAAAAQAAAAHAAAACAAAAAcAAAACAAAACAAAAAAA
AAAEAAAACQAAAAIAAAAHAAAACQAAAAcAAAAFAAAACgAAAAYAAAAHAAAACgAAAAMAAAAGAAAA
CwAAAAAAAAAIAAAACwAAAAgAAAACAAAADAAAAAIAAAAJAAAADAAAAAkAAAAFAAAADQAAAAIA
AAAMAAAADQAAAAwAAAAFAAAADQAAAAAAAAACAAAADgAAAAUAAAAAAAAADgAAAAAAAAANAAAA
DgAAAA0AAAAFAAAADwAAAAQAAAADAAAADwAAAAMAAAAKAAAADwAAAAoAAAAEAAAAEAAAAAcA
AAAEAAAAEAAAAAQAAAAKAAAAEAAAAAoAAAAHAAAAEQAAAAEAAAAAAAAAEQAAAAAAAAALAAAA
EgAAAAsAAAABAAAAEgAAAAEAAAARAAAAEgAAABEAAAALAAAAEwAAAAIAAAABAAAAEwAAAAEA
AAALAAAAEwAAAAsAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPycAAAAEAAAAEmG9vfhjDr8QLpc9nBQ/vvhjDr+Oe5M9nBQ/vvhjDr8vLpe9nBQ/vrGI
9b7YLZc9nBQ/vuqI9b4mLpe94iS8vemCCb/0GYC94iS8vfhjDr8Ekny94iS8ve2CCb8CLpc9
Ma4HvkuABr9ULpe9uT4NvvhjDr9SLpe9nBQ/voreDb8PLpc9u0EzvvhjDr8QLpc94iS8vfhj
Dr+i2pY9QgAAAAAAAAABAAAAAgAAAAMAAAACAAAAAQAAAAQAAAACAAAAAwAAAAQAAAADAAAA
BQAAAAYAAAAAAAAAAgAAAAcAAAAGAAAABQAAAAcAAAADAAAAAAAAAAcAAAAFAAAAAwAAAAgA
AAAFAAAABgAAAAgAAAACAAAABAAAAAgAAAAEAAAABQAAAAkAAAAGAAAAAgAAAAkAAAACAAAA
CAAAAAkAAAAIAAAABgAAAAoAAAAAAAAAAwAAAAoAAAADAAAAAQAAAAsAAAABAAAAAAAAAAsA
AAAAAAAACgAAAAsAAAAKAAAAAQAAAAwAAAAAAAAABgAAAAwAAAAGAAAABwAAAAwAAAAHAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8qAAAABAAAAFkf
0zwQMRm/jYQmPYz3xz09UPK+RWDhPKAqPTvg1AC/d2NRPTNxRj18reC+BGwsPTNxRj18reC+
f5H2vIwe0zwOMRm/ycLqvKAqPTvX1AC/OUAgvf0kqT26AQ+/2TN+vG73xz04UPK+0jN+vKgq
PTsCpxq/dSo+PaAqPTv+phq/LwcNvRwlqT26AQ+/QmDhPGD9Fz3+mOe+UvcEvQb+Fz3mmOe+
dxo2PUgAAAAAAAAAAQAAAAIAAAADAAAAAgAAAAEAAAAEAAAAAwAAAAEAAAAEAAAABQAAAAYA
AAAHAAAABQAAAAQAAAAHAAAAAAAAAAUAAAAIAAAABAAAAAEAAAAIAAAAAQAAAAcAAAAIAAAA
BwAAAAQAAAAJAAAABQAAAAAAAAAJAAAAAAAAAAIAAAAJAAAAAgAAAAYAAAAKAAAABgAAAAUA
AAAKAAAABQAAAAkAAAAKAAAACQAAAAYAAAALAAAAAQAAAAAAAAALAAAAAAAAAAcAAAALAAAA
BwAAAAEAAAAMAAAAAwAAAAQAAAAMAAAABAAAAAYAAAAMAAAABgAAAAIAAAANAAAAAgAAAAMA
AAANAAAAAwAAAAwAAAANAAAADAAAAAIAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/NgAAAAQAAAAOa0G+ZQXzviMul71ZC5C+ZQXzvrx/4zzcakG+ZQXzvtQt
lz1jC5C+ZQXzvnyHC72uTGi+9G0NvxIul727m3W+cq0IvwAulz2cFD++Gz8Pvy8ul72cFD++
fakYv+LGKL2cFD++eqkYvzE9FT2cFD++it4Nvw8ulz2ELnK+ZQXzvgkul70y6Wq+ZQXzviMu
lz2qanu+oJoGvwIul709B0++uHMWv76eKj0Is2y+u9sLvwkulz1jB0++tnMWv2woPr2cFD++
6Yj1viYul72cFD++soj1vtgtlz1gAAAAAAAAAAEAAAACAAAAAwAAAAQAAAABAAAAAwAAAAEA
AAAAAAAABQAAAAEAAAAEAAAABgAAAAQAAAAAAAAABwAAAAQAAAAGAAAABwAAAAYAAAAIAAAA
CQAAAAgAAAAGAAAACQAAAAIAAAAFAAAACgAAAAAAAAAEAAAACgAAAAMAAAAAAAAACwAAAAIA
AAABAAAACwAAAAEAAAAFAAAACwAAAAUAAAACAAAADAAAAAQAAAADAAAADAAAAAMAAAAKAAAA
DAAAAAoAAAAEAAAADQAAAAgAAAAJAAAADQAAAAcAAAAIAAAADQAAAAUAAAAEAAAADgAAAAkA
AAAFAAAADgAAAAUAAAANAAAADgAAAA0AAAAJAAAADwAAAAQAAAAHAAAADwAAAAcAAAANAAAA
DwAAAA0AAAAEAAAAEAAAAAYAAAAAAAAAEAAAAAkAAAAGAAAAEAAAAAAAAAACAAAAEQAAAAIA
AAAJAAAAEQAAAAkAAAAQAAAAEQAAABAAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAPycAAAAEAAAAoCo9O9XUAL83QCC9oCo9O/ymGr8vBw294iS8vemC
Cb/0GYC9qCo9OwCnGr90Kj494iS8vUOzIL9Tur88oCo9O97UAL91Y1E9nn22vdaBCb8CLpc9
4iS8vUCzIL9s0Oa84iS8vc2CF7/Ox3W94iS8vehmEr9oXJU9NB40vbCkHb9Lcz29zxeOvJbx
G79qElM94iS8ve2CCb8CLpc9QgAAAAAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAA
AAAAAAUAAAAGAAAAAwAAAAUAAAADAAAAAAAAAAUAAAAAAAAAAgAAAAcAAAABAAAABAAAAAcA
AAAEAAAAAgAAAAgAAAACAAAAAQAAAAgAAAAHAAAAAgAAAAkAAAADAAAABgAAAAkAAAACAAAA
BAAAAAoAAAABAAAABwAAAAoAAAAHAAAACAAAAAoAAAAIAAAAAQAAAAsAAAAEAAAAAwAAAAsA
AAADAAAACQAAAAsAAAAJAAAABAAAAAwAAAACAAAACQAAAAwAAAAJAAAABgAAAAwAAAAGAAAA
BQAAAAwAAAAFAAAAAgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD8kAAAABAAAAE8QkD7+mBE/oTN+vM/Tjj1VawU/LJ2Nvc/Tjj2YJhs//rOVvc/Tjj1JawU/
OS6XPSA7jD6gugY/NmDhPM/Tjj25+ho/+C2XPXl24z0sHRk//y2XPVUQkD7+mBE/O2DhPBk7
jD6gugY/oDN+vAbVyz2kXAg/MS6XPbr1Nz6gugY/DoxWPc/Tjj2XJhs/4BU0PTwAAAAAAAAA
AQAAAAIAAAADAAAAAgAAAAEAAAAEAAAAAwAAAAEAAAAFAAAAAgAAAAMAAAAFAAAAAwAAAAYA
AAAHAAAAAAAAAAIAAAAHAAAABgAAAAQAAAAHAAAABAAAAAAAAAAIAAAAAQAAAAAAAAAIAAAA
AAAAAAQAAAAIAAAABAAAAAEAAAAJAAAABgAAAAMAAAAJAAAABAAAAAYAAAAKAAAAAwAAAAQA
AAAKAAAABAAAAAkAAAAKAAAACQAAAAMAAAALAAAABQAAAAYAAAALAAAABgAAAAcAAAALAAAA
AgAAAAUAAAALAAAABwAAAAIAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/JwAAAAQAAADbakG+ZgXzvtQtlz1ZC5C+ZgXzvrt/4zyELnK+ZgXzvgkul71IqSS+
nAOivh0ul73zyIG+nAOivohbC712Cya+nAOivmItlz0Na0G+ZgXzviMul73nyIG+nAOivgso
4zxjC5C+ZgXzvnyHC71AnVW+nAOivooul70y6Wq+ZgXzviMulz3uV06+nAOivoIulz1FqSS+
nAOivh4c2bxCAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAAAAAACAAAABgAAAAIA
AAADAAAABgAAAAMAAAAAAAAABwAAAAUAAAAEAAAABwAAAAQAAAABAAAACAAAAAIAAAABAAAA
CAAAAAEAAAAEAAAACAAAAAQAAAACAAAACQAAAAIAAAAEAAAACQAAAAQAAAADAAAACQAAAAMA
AAACAAAACgAAAAcAAAABAAAACgAAAAAAAAAFAAAACgAAAAEAAAAAAAAACwAAAAUAAAAHAAAA
CwAAAAcAAAAKAAAACwAAAAoAAAAFAAAADAAAAAUAAAAAAAAADAAAAAAAAAADAAAADAAAAAMA
AAAFAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAA
k+S3PFcF8z4vLpe9jOa3PFcF8z5dLpc9nisivIwDoj7VLpc9AnfpvVcF8z4uKOM8xEwRvowD
oj4hKOM8b7DGvYwDoj7zLpe9IC8ivIwDoj4vLpe95o2NvVcF8z5qLpe9dAZ+vVcF8z5dLpc9
wiW4vYwDoj7VLpc9LnfpvVcF8z5SWwu92kwRvowDoj5cWwu9PAAAAAAAAAABAAAAAgAAAAAA
AAADAAAAAQAAAAQAAAAFAAAAAgAAAAYAAAACAAAABQAAAAYAAAAFAAAAAAAAAAYAAAAAAAAA
AgAAAAcAAAADAAAAAAAAAAcAAAAAAAAABQAAAAgAAAADAAAABAAAAAgAAAACAAAAAQAAAAgA
AAABAAAAAwAAAAkAAAAEAAAAAgAAAAkAAAACAAAACAAAAAkAAAAIAAAABAAAAAoAAAADAAAA
BwAAAAoAAAAHAAAABQAAAAoAAAAEAAAAAwAAAAsAAAAFAAAABAAAAAsAAAAEAAAACgAAAAsA
AAAKAAAABQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD82AAAA
BAAAAHQGfr1WBfM+XS6XPeaNjb1WBfM+ai6XvZTktzxWBfM+Ly6Xva7pLb0kNyA/6C2Xvc7T
jj1JawU/OS6XPc7Tjj25+ho/+i2XPc7Tjj2YJhs//rOVvQN36b1WBfM+LCjjPOgsEr0CvR8/
7C2XPYzmtzxWBfM+XS6XPc7Tjj1VawU/LJ2NvadUsL2QAyI/R1sLvX1UsL2QAyI/OCjjPC93
6b1WBfM+UlsLvWbySj3OzQE/PS6Xva1liT08RRs/OS6XvTWXXb2mvSA/YRhpPc7Tjj2XJhs/
4BU0PWAAAAAAAAAAAQAAAAIAAAADAAAAAgAAAAEAAAAEAAAABQAAAAAAAAAEAAAABgAAAAUA
AAAHAAAAAQAAAAAAAAAIAAAAAAAAAAUAAAAJAAAAAAAAAAIAAAAJAAAAAgAAAAQAAAAJAAAA
BAAAAAAAAAAKAAAABgAAAAQAAAAKAAAABAAAAAIAAAALAAAABwAAAAwAAAALAAAAAwAAAAEA
AAANAAAAAQAAAAcAAAANAAAABwAAAAsAAAANAAAACwAAAAEAAAAOAAAABgAAAAoAAAAOAAAA
CgAAAAIAAAAOAAAAAgAAAAMAAAAPAAAAAwAAAAYAAAAPAAAABgAAAA4AAAAPAAAADgAAAAMA
AAAQAAAAAwAAAAsAAAAQAAAACwAAAAwAAAAQAAAAAAAAAAgAAAAQAAAABgAAAAMAAAAQAAAA
CAAAAAUAAAAQAAAADAAAAAcAAAAQAAAABwAAAAAAAAARAAAABQAAAAYAAAARAAAABgAAABAA
AAARAAAAEAAAAAUAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
MwAAAAQAAADyioa9AACAtDMul71Jb0q+AACAtBso4zyCioa9AACAtHwslz3nyIG+nAOivg4o
4zxAnVW+nAOivooul712Cya+nAOivmItlz0FnNm9ITJ1vjoul73Aehy+AACAtP4vl72PdtW9
N0BvviYtlz1IqSS+nAOivh4ul71oNRW+AACAtD8vlz3zyIG+nAOivohbC71hb0q+AACAtHJb
C73uV06+nAOivoIulz2Ym9m9KDJ1viotlz39dtW9LkBvvjoul72VrRy+xG6cvlotlz1aAAAA
AAAAAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAQAAAAAAAAABwAAAAEAAAAAAAAABwAAAAAA
AAAEAAAACAAAAAAAAAACAAAACQAAAAUAAAAEAAAACQAAAAQAAAAGAAAACgAAAAUAAAAIAAAA
CgAAAAgAAAACAAAACgAAAAEAAAADAAAACgAAAAIAAAABAAAACwAAAAcAAAAEAAAACwAAAAQA
AAADAAAACwAAAAMAAAABAAAADAAAAAEAAAAHAAAADAAAAAcAAAALAAAADAAAAAsAAAABAAAA
DQAAAAMAAAAFAAAADQAAAAUAAAAKAAAADQAAAAoAAAADAAAADgAAAAYAAAAIAAAADgAAAAgA
AAAFAAAADwAAAAYAAAAAAAAADwAAAAAAAAAIAAAADwAAAAgAAAAGAAAAEAAAAAkAAAAGAAAA
EAAAAAYAAAAOAAAAEAAAAAUAAAAJAAAAEAAAAA4AAAAFAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAgoqGvQAAgLR8LJc9SG9KvgAAgLQbKOM8
wHocvgAAgLT+L5e9IC8ivIwDoj4vLpe92kwRvowDoj5cWwu9nisivIwDoj7VLpc98oqGvQAA
gLQzLpe9wiW4vYwDoj7VLpc9aDUVvgAAgLQ/L5c9xEwRvowDoj4fKOM8b7DGvYwDoj7zLpe9
YG9KvgAAgLRyWwu9PAAAAAAAAAABAAAAAgAAAAMAAAAEAAAABQAAAAMAAAAFAAAAAAAAAAYA
AAAAAAAAAgAAAAYAAAACAAAAAwAAAAYAAAADAAAAAAAAAAcAAAAFAAAABAAAAAgAAAABAAAA
AAAAAAgAAAAHAAAAAQAAAAgAAAAAAAAABQAAAAgAAAAFAAAABwAAAAkAAAAEAAAAAQAAAAkA
AAABAAAABwAAAAkAAAAHAAAABAAAAAoAAAACAAAABAAAAAoAAAAEAAAAAwAAAAoAAAADAAAA
AgAAAAsAAAACAAAAAQAAAAsAAAABAAAABAAAAAsAAAAEAAAAAgAAAA==</SharedString>
		<SharedString md5="dlzy6TJA41gb6Xk/+m7GaA==">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
AAAAAAQAAAAFAAAAAAAAAAUAAAAPAAAAAAAAAA8AAAAQAAAAAAAAABAAAAAGAAAAAAAAAAYA
AAABAAAAAQAAAAYAAAACAAAAAgAAAAYAAAAHAAAAAgAAAAcAAAAIAAAAAwAAAAkAAAAKAAAA
AwAAAAoAAAALAAAAAwAAAAsAAAAEAAAABAAAAAsAAAAMAAAABAAAAAwAAAANAAAABAAAAA0A
AAASAAAABAAAABIAAAAOAAAABAAAAA4AAAAFAAAABQAAAA4AAAAPAAAABgAAABAAAAAHAAAA
BwAAAAwAAAALAAAABwAAAAsAAAAKAAAABwAAAAoAAAAJAAAABwAAAAkAAAAIAAAABwAAABAA
AAARAAAABwAAABEAAAAMAAAADAAAABEAAAASAAAADAAAABIAAAANAAAADgAAABEAAAAPAAAA
DgAAABIAAAARAAAADwAAABEAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPzkAAAAEAAAAAACAtCT5TMFgw2q/AACAtO64mcFou0I+AACAtFyEUcFUZ2G/
XIMjwKt+TcGEcmK/oxwjwCT5TMFRhmO/lPbMwCT5TMGuMzK/lPbMwO64mcHoXdo+AACAtLpQ
hcEGNZu+0zR0wO64mcEZfIE+RQNQwKfAgsHQHJ++dA/MwOpbdsHCAqm+1MWpwCT5TMGfukW/
GEEqwCT5TMFfjGK/lPbMwEkedsE8Jam+lPbMwMF7k8E+RXI+z4d1wO64mcGH44E+jJt0wO64
mcFWjYE+lPbMwE40jcEof7g9lPbMwBpsd8EJAqK+ZgAAAAAAAAABAAAABwAAAAAAAAAHAAAA
AgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAADAAAAAAAAAAMAAAACwAAAAAA
AAALAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAAAQAAAAEAAAAGAAAADwAAAAEAAAAPAAAA
EAAAAAEAAAAQAAAACAAAAAEAAAAIAAAABwAAAAIAAAAHAAAACQAAAAIAAAAJAAAAAwAAAAMA
AAAJAAAACgAAAAMAAAAKAAAACwAAAAMAAAALAAAADAAAAAMAAAAMAAAABAAAAAUAAAALAAAA
DQAAAAUAAAANAAAAEgAAAAUAAAASAAAAEQAAAAUAAAARAAAADgAAAAUAAAAOAAAABgAAAAYA
AAAOAAAADwAAAAcAAAAIAAAACQAAAAgAAAAQAAAACQAAAAkAAAAQAAAADwAAAAkAAAAPAAAA
EQAAAAkAAAARAAAAEgAAAAkAAAASAAAACgAAAAoAAAASAAAADQAAAAoAAAANAAAACwAAAA4A
AAARAAAADwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9FAAAA
BAAAAO64mUE/gjBBVpN1P+64mUGqhrBAqBS7Pu64mUESxC9BnkBzP+xZmUE/gjBB+y9xPyT5
TEE/gjBB0c2WviT5TEGqhrBAjuxBvx6llUGqhrBAa154PpLUkEF+/+9AN8ZqPu64mUEYdsxA
3NnYPu64mUEsbylBpe9fP1pilUE/gjBBjIJCP7dkgUE/gjBBIJ5QPtC2XUEKIhRBhPCyviT5
TEH7hihBKAG1viT5TEFf8ghBuoALv+4TVUGqhrBA4I0vv7CKekGqhrBAm0qmvupbdkE4GcxA
dQupvqhYgkFmLy5BSSJRPu64mUGYt/5AbuoHP+64mUGWSyBBBw9EP5oThEE/gjBBjDWKPu64
mUE+8w5BJRgkP34AAAAAAAAAAQAAAAgAAAAAAAAACAAAABMAAAAAAAAAEwAAABYAAAAAAAAA
FgAAABQAAAAAAAAAFAAAAAkAAAAAAAAACQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAoA
AAAAAAAACgAAABUAAAAAAAAAFQAAAAsAAAAAAAAACwAAAAQAAAAAAAAABAAAAAUAAAAAAAAA
BQAAAAEAAAABAAAABQAAAA8AAAABAAAADwAAABAAAAABAAAAEAAAAAYAAAABAAAABgAAAAcA
AAABAAAABwAAAAgAAAACAAAACQAAAAoAAAACAAAACgAAAAMAAAAEAAAACwAAAAwAAAAEAAAA
DAAAAA0AAAAEAAAADQAAAA4AAAAEAAAADgAAAAUAAAAFAAAADgAAAAwAAAAFAAAADAAAAA8A
AAAGAAAAEAAAAAcAAAAHAAAAEAAAABEAAAAHAAAAEQAAABIAAAAHAAAAEgAAABMAAAAHAAAA
EwAAAAgAAAAJAAAAFAAAAAoAAAAKAAAAFAAAABIAAAAKAAAAEgAAABUAAAALAAAAFQAAABIA
AAALAAAAEgAAAAwAAAAMAAAAEgAAABEAAAAMAAAAEQAAAA8AAAAMAAAADgAAAA0AAAAPAAAA
EQAAABAAAAASAAAAFAAAABYAAAASAAAAFgAAABMAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/RQAAAAQAAAAk+UzBVIKwwIDhQb8k+UzBHIAwwXnDlr4k+UzB
OPAIwWB4C79huV3BGiIUwcbksr7uE1XBVIKwwLuDL7/uuJnBVIKwwDsOuz7uuJnBHIAwwZSI
dT+3ZIHBHIAwwX6ZUD4k+UzBDocowVD1tL6oWILBQy0uwaAdUT7qW3bBUBnMwDUAqb6winrB
VIKwwH4/pr7Vo5XBVIKwwM9XeD6S1JDBmv/vwEjAaj7uuJnBMXbMwPXR2D7uuJnBJsQvwfo1
cz/sWZnBHIAwwXAlcT+aE4TBHIAwwYwxij7uuJnBqEsgwboGRD/uuJnBTvMOwW4RJD/uuJnB
tbf+wB7lBz/uuJnBPm8pwfblXz9aYpXBHIAwwVN6Qj9+AAAAAAAAAAEAAAAIAAAAAAAAAAgA
AAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAALAAAAAAAAAAsAAAAMAAAA
AAAAAAwAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAABAAAAAQAAAAcAAAADAAAAAQAAAAMA
AAAIAAAAAQAAAAYAAAAQAAAAAQAAABAAAAAWAAAAAQAAABYAAAARAAAAAQAAABEAAAAHAAAA
AgAAAAgAAAADAAAAAwAAAAcAAAAJAAAAAwAAAAkAAAAKAAAAAwAAAAoAAAAEAAAABAAAAAoA
AAALAAAABQAAAAwAAAANAAAABQAAAA0AAAAOAAAABQAAAA4AAAAUAAAABQAAABQAAAATAAAA
BQAAABMAAAASAAAABQAAABIAAAAVAAAABQAAABUAAAAPAAAABQAAAA8AAAAGAAAABgAAAA8A
AAAQAAAABwAAABEAAAAJAAAACQAAABEAAAASAAAACQAAABIAAAATAAAACQAAABMAAAAUAAAA
CQAAABQAAAANAAAACQAAAA0AAAAKAAAACgAAAA0AAAALAAAACwAAAA0AAAAMAAAADQAAABQA
AAAOAAAADwAAABUAAAAWAAAADwAAABYAAAAQAAAAEQAAABYAAAASAAAAEgAAABYAAAAVAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0UAAAAEAAAAJPlMwVuC
MEGP3pa+JPlMwTOLsEAyB0K/JPlMwRaHKEF1+LS+YbldwSEiFEGK5rK+YbldwVuCMEEwNg++
7riZwVuCMEEiiXY/7hNVwTOLsEAXki+/6lt2wVkZzEBY+6i+JPlMwQpz10AsbCy/7riZwTOL
sEA0qbs+JPlMwT7wCEGieQu/qFiCwUwtLkEf3FA+t2SBwVuCMEGkV1A+WmKVwVuCMEHke0I/
7riZwa9LIEFUCUQ/qyZtwTOLsECq+ui+sIp6wTOLsEDeTqa+ktSQwaT/70Dxj2o+7riZwcC3
/kCc6wc/1aOVwTOLsECTMHg+mhOEwVuCMEE8EYo+qEKKwTOLsECYmLq8sp6VwTOLsEAYrHc+
fgAAAAAAAAABAAAACAAAAAAAAAAIAAAACgAAAAAAAAAKAAAAAgAAAAAAAAACAAAAAwAAAAAA
AAADAAAABAAAAAAAAAAEAAAADAAAAAAAAAAMAAAAFAAAAAAAAAAUAAAADQAAAAAAAAANAAAA
BQAAAAAAAAAFAAAAAQAAAAEAAAAGAAAABwAAAAEAAAAHAAAAAwAAAAEAAAADAAAACAAAAAEA
AAAFAAAACQAAAAEAAAAJAAAAEwAAAAEAAAATAAAAFgAAAAEAAAAWAAAAFQAAAAEAAAAVAAAA
EAAAAAEAAAAQAAAADwAAAAEAAAAPAAAABgAAAAIAAAAKAAAAAwAAAAMAAAAHAAAACwAAAAMA
AAALAAAADAAAAAMAAAAMAAAABAAAAAMAAAAKAAAACAAAAAUAAAANAAAADgAAAAUAAAAOAAAA
EgAAAAUAAAASAAAACQAAAAYAAAAPAAAABwAAAAcAAAAPAAAAEAAAAAcAAAAQAAAAEQAAAAcA
AAARAAAACwAAAAkAAAASAAAAEQAAAAkAAAARAAAAEwAAAAsAAAARAAAAEgAAAAsAAAASAAAA
DgAAAAsAAAAOAAAAFAAAAAsAAAAUAAAADAAAAA0AAAAUAAAADgAAABAAAAAVAAAAEQAAABEA
AAAVAAAAFgAAABEAAAAWAAAAEwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD9FAAAABAAAAO64mUG8hrDAJZS7Pu64mUFSgjDB4n52P+64mUGzt/7AKOEHP5LU
kEGX/+/AupFqPtWjlUG8hrDAYjJ4PiT5TEG8hrDALPxBv1pilUFSgjDBlnxCP+64mUGnSyDB
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
AAAAAAAAFwAAABQAAAAAAAAAFAAAAAwAAAAAAAAADAAAAAQAAAAAAAAABAAAAAEAAAABAAAA
BQAAAAYAAAABAAAABgAAAAcAAAABAAAABAAAAAgAAAABAAAACAAAAAUAAAACAAAACQAAAAoA
AAACAAAACgAAAAMAAAADAAAACgAAAAsAAAAEAAAADAAAAA0AAAAEAAAADQAAAA4AAAAEAAAA
DgAAAAgAAAAFAAAACAAAAA8AAAAFAAAADwAAAAYAAAAGAAAACQAAABAAAAAGAAAAEAAAAAcA
AAAGAAAADwAAAA4AAAAGAAAADgAAABEAAAAGAAAAEQAAABIAAAAGAAAAEgAAAAkAAAAIAAAA
DgAAAA8AAAAJAAAAEgAAAAoAAAAKAAAAEgAAAAsAAAALAAAAEgAAABMAAAAMAAAAFAAAABUA
AAAMAAAAFQAAAA0AAAANAAAAFgAAAA4AAAANAAAAFQAAABYAAAAOAAAAFgAAABEAAAARAAAA
FgAAABIAAAASAAAAFgAAABUAAAASAAAAFQAAABMAAAATAAAAFQAAABcAAAAUAAAAFwAAABUA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/RQAAAAQAAACU9kxB
9vhMwVS0rL2U9kxBEHRrwRxOSj6pJxRBnbhdwSLJsr71iShB9vhMwUjrtL6U9sxA9vhMwV6y
Mb+U9kxBpwqWwQ0NlD+U9kxBLxCDwYbMBj/GLy5Bq1iCwUgrUT6U9sxArGp3wS7/ob6U9sxA
AB12wdgLqb6U9sxAgNV1wQhwqr619QhB9vhMwS97C7+U9sxApwqWwTuEoD5cgkhBpwqWwSCL
ij+U9kxBVyaMwalaQD+PiUFBKtWQwUPdQD/B3xNBpwqWwZhwEj/FnvhApwqWwXzSzz5gA/BA
KtWQwQwkaz6U9sxAbHyTwTkBcj7QJdtApwqWwQSLrz7qHzdBpwqWwTtoXj9kDi5BpwqWwSy4
Qj9+AAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAALAAAAAAAAAAsAAAAEAAAA
AAAAAAQAAAAFAAAAAAAAAAUAAAAOAAAAAAAAAA4AAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYA
AAAHAAAAAQAAAAcAAAACAAAAAgAAAAgAAAAJAAAAAgAAAAkAAAAKAAAAAgAAAAoAAAAEAAAA
AgAAAAQAAAALAAAAAgAAAAsAAAADAAAAAgAAAAcAAAAIAAAABAAAAAoAAAAJAAAABAAAAAkA
AAAIAAAABAAAAAgAAAATAAAABAAAABMAAAAMAAAABAAAAAwAAAAFAAAABQAAAA0AAAAOAAAA
BQAAAAwAAAAUAAAABQAAABQAAAARAAAABQAAABEAAAAQAAAABQAAABAAAAAWAAAABQAAABYA
AAAVAAAABQAAABUAAAANAAAABgAAAA4AAAAPAAAABgAAAA8AAAAHAAAABwAAAA8AAAAQAAAA
BwAAABAAAAARAAAABwAAABEAAAASAAAABwAAABIAAAAIAAAACAAAABIAAAATAAAADAAAABMA
AAAUAAAADQAAABUAAAAPAAAADQAAAA8AAAAOAAAADwAAABUAAAAWAAAADwAAABYAAAAQAAAA
EQAAABQAAAASAAAAEgAAABQAAAATAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPz8AAAAEAAAAoPhMQXSEMEF40pa+oPhMQZD4TEFwuay9WrddQeezXUGUnUY+
jWWBQXSEMEEYy1A+KkuPQXSEMEF2YRY/KkuPQVdSckGi1vQ/GheGQa9hhEGi1vQ/oPhMQa9h
hEEXWw8/oPhMQeezXUFAHZA9oPhMQepva0F8YEo+yOlfQa9hhEHJiD8/r1h2QZxWdkG9ez4/
KkuPQVRRRUFRwEA/KkuPQa3WQkEIcjo/KkuPQRuBP0F++zE/thOEQXSEMEG0P4o+KkuPQa9h
hEGi1vQ/EsiAQa9hhEGy86c/O8GCQdnAgkGe7Kc/KkuPQSt3W0G6eY8/KkuPQTz0ZkGUQag/
cgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAADwAAAAAAAAAPAAAABAAAAAAA
AAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAABwAAAAAAAAAHAAAACQAAAAAAAAAJAAAA
CAAAAAAAAAAIAAAAAQAAAAEAAAAIAAAAAgAAAAIAAAAJAAAABwAAAAIAAAAHAAAACgAAAAIA
AAAKAAAACwAAAAIAAAALAAAADAAAAAIAAAAMAAAADQAAAAIAAAANAAAADgAAAAIAAAAOAAAA
DwAAAAIAAAAPAAAAAwAAAAIAAAAIAAAACQAAAAQAAAAPAAAADgAAAAQAAAAOAAAADQAAAAQA
AAANAAAADAAAAAQAAAAMAAAAEwAAAAQAAAATAAAAFAAAAAQAAAAUAAAAEAAAAAQAAAAQAAAA
BQAAAAUAAAAQAAAABgAAAAYAAAAQAAAAEQAAAAYAAAARAAAACgAAAAYAAAAKAAAABwAAAAoA
AAARAAAACwAAAAsAAAARAAAAEgAAAAsAAAASAAAAEwAAAAsAAAATAAAADAAAABAAAAAUAAAA
EgAAABAAAAASAAAAEQAAABIAAAAUAAAAEwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD8/AAAABAAAAClMj8G+YYTBodb0P54WhsG+YYTBodb0PylMj8EZVHLB
odb0PylMj8F982bBpEioP5zBgsH5wYLBmeynP1nIgMG+YYTBwvqnP5T2TMG+YYTBBFsPP5T2
TMFSgjDBtNKWvilMj8FSgjDBY2EWPylMj8HwUUXBQMBAPx1Kj8FYeFvBtHmPP7BYdsFBVnbB
rHs+P7fqX8G+YYTB4pY/PyK2XcG2sF3BOJ1GPpT2TMFIb2vBIGBKPpT2TMEo90zBkCutvdZk
gcFSgjDBvMpQPiEThMFSgjDBhj+KPilMj8GRgT/BlgkyPylMj8ED1ULB93E6P5T2TMG2sF3B
MKuPPXIAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAgAAAAAAAAACAAAABIAAAAAAAAAEgAAABMA
AAAAAAAAEwAAAAkAAAAAAAAACQAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAA
BQAAAAwAAAAAAAAADAAAAAYAAAAAAAAABgAAAAEAAAABAAAABgAAAAcAAAABAAAABwAAAAIA
AAACAAAABwAAAAgAAAADAAAACQAAAAoAAAADAAAACgAAAAQAAAAEAAAACgAAAAsAAAAEAAAA
CwAAAAUAAAAFAAAACwAAAAwAAAAGAAAADAAAAA0AAAAGAAAADQAAAA4AAAAGAAAADgAAABQA
AAAGAAAAFAAAAA8AAAAGAAAADwAAAAcAAAAHAAAADwAAAA0AAAAHAAAADQAAABAAAAAHAAAA
EAAAABEAAAAHAAAAEQAAAAgAAAAIAAAAEQAAABIAAAAJAAAAEwAAABEAAAAJAAAAEQAAAA0A
AAAJAAAADQAAAAsAAAAJAAAACwAAAAoAAAALAAAADQAAAAwAAAANAAAAEQAAABAAAAANAAAA
DwAAABQAAAANAAAAFAAAAA4AAAARAAAAEwAAABIAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/PAAAAAQAAAAvTI/BXIIwQa+xFj8vTI/BO4E/QUsFMj8mE4TB
XIIwQZpsij6U9kzBXIIwQUDilr4vTI/BflJyQaDW9D8vTI/BdVFFQVPKQD8wuF3B1bFdQaS9
Rj7aZIHBXIIwQUzrUD4wuF3BXIIwQfRWD76U9kzBsvhMQZDyrL2U9kzBqWCEQe05Dz+pF4bB
qWCEQaDW9D8vTI/BqWCEQaDW9D8vTI/BYvRmQZZHqD+2WHbBw1Z2QbeFPj+66l/BqWCEQceS
Pz+U9kzBEHBrQZiASj5dyIDBqWCEQbL5pz+gwYLB7sCCQYrrpz+KDGrBqWCEQSicaj9sAAAA
AAAAAAEAAAACAAAAAAAAAAIAAAAHAAAAAAAAAAcAAAAIAAAAAAAAAAgAAAADAAAAAAAAAAMA
AAAEAAAAAAAAAAQAAAAMAAAAAAAAAAwAAAANAAAAAAAAAA0AAAAFAAAAAAAAAAUAAAABAAAA
AQAAAAUAAAAGAAAAAQAAAAYAAAAHAAAAAQAAAAcAAAACAAAAAwAAAAgAAAAJAAAAAwAAAAkA
AAAQAAAAAwAAABAAAAAKAAAAAwAAAAoAAAALAAAAAwAAAAsAAAAEAAAABAAAAAsAAAAMAAAA
BQAAAA0AAAAOAAAABQAAAA4AAAAGAAAABgAAAAkAAAAIAAAABgAAAAgAAAAHAAAABgAAAA4A
AAAPAAAABgAAAA8AAAAKAAAABgAAAAoAAAAQAAAABgAAABAAAAAJAAAACgAAAA8AAAATAAAA
CgAAABMAAAARAAAACgAAABEAAAAMAAAACgAAAAwAAAALAAAADAAAABEAAAASAAAADAAAABIA
AAANAAAADQAAABIAAAAOAAAADgAAABIAAAARAAAADgAAABEAAAATAAAADgAAABMAAAAPAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzwAAAAEAAAAlPZMQb5h
hMHXOQ8/t+pfQb5hhMG0kj8/nhaGQb5hhMGh1vQ/lPZMQVKCMMGM4pa+lPZMQUhva8GAR0o+
IrZdQbawXcGMhEY+sFh2QUFWdsGkhT4/hgxqQb5hhMHvjWo/KUyPQb5hhMGh1vQ/KUyPQRlU
csGh1vQ/KUyPQVKCMMGZsRY/IrZdQVKCMMGAVw++lPZMQSj3TMGg86y91mSBQVKCMME0slA+
KUyPQZGBP8EO9zE/KUyPQfBRRcEWvEA/nMGCQfnBgsGF66c/KUyPQX3zZsGRR6g/WciAQb5h
hMGu+ac/IROEQVKCMMEQUIo+bAAAAAAAAAABAAAABwAAAAAAAAAHAAAAEgAAAAAAAAASAAAA
CAAAAAAAAAAIAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAADAAAAAAAAAAMAAAABAAAAAAA
AAAEAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAABgAAAAEAAAAGAAAABwAAAAIAAAAIAAAA
CQAAAAIAAAAJAAAAAwAAAAMAAAAKAAAAEwAAAAMAAAATAAAADQAAAAMAAAANAAAACwAAAAMA
AAALAAAADAAAAAMAAAAJAAAACgAAAAQAAAAMAAAABQAAAAUAAAAMAAAACwAAAAUAAAALAAAA
DQAAAAUAAAANAAAADgAAAAUAAAAOAAAADwAAAAUAAAAPAAAABgAAAAYAAAAQAAAABwAAAAYA
AAAPAAAAEQAAAAYAAAARAAAAEAAAAAcAAAAQAAAAEgAAAAgAAAASAAAAEAAAAAgAAAAQAAAA
EQAAAAgAAAARAAAADwAAAAgAAAAPAAAADgAAAAgAAAAOAAAACgAAAAgAAAAKAAAACQAAAAoA
AAAOAAAAEwAAAA0AAAATAAAADgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8nAAAABAAAAC5Nj0G+YYTBodb0P/g7m0G+YYTBodb0Py5Nj0EZVHLBodb0Py5N
j0F982bBu0moP/g7m0G+YYTBiLGuPzZqqkGVumPBodb0P8aVpUFSgjDBodb0Py5Nj0FSgjDB
Pp4WPy5Nj0HwUUXBJrxAPy5Nj0GRgT/BQvcxPzZqqkGVumPBiLGuPwgduEFSgjDBodb0Pwgd
uEFSgjDBiLGuP0IAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAsAAAAAAAAACwAAAAYAAAAAAAAA
BgAAAAIAAAAAAAAAAgAAAAcAAAAAAAAABwAAAAkAAAAAAAAACQAAAAgAAAAAAAAACAAAAAMA
AAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAoAAAABAAAACgAAAAUAAAACAAAA
BgAAAAcAAAADAAAACAAAAAQAAAAEAAAACAAAAAkAAAAEAAAACQAAAAcAAAAEAAAABwAAAAoA
AAAFAAAACgAAAAwAAAAFAAAADAAAAAsAAAAGAAAACwAAAAwAAAAGAAAADAAAAAcAAAAHAAAA
DAAAAAoAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/LQAAAAQA
AAA6To9BdIQwQdZdFj86To9BG4E/QWH/MT8APJtBr2GEQXiurj9AaqpBabtjQXiurj8UHbhB
dIQwQXiurj/PlaVBdIQwQWHS9D86To9BV1JyQWHS9D86To9BrdZCQVp3Oj86To9BVFFFQbTG
QD86To9BK3dbQbuHjz86To9BPPRmQdxJqD86To9Br2GEQWHS9D8APJtBr2GEQWHS9D9AaqpB
abtjQWHS9D8UHbhBdIQwQWHS9D9OAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMA
AAAEAAAAAAAAAAQAAAAOAAAAAAAAAA4AAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAALAAAA
AAAAAAsAAAAKAAAAAAAAAAoAAAAJAAAAAAAAAAkAAAAIAAAAAAAAAAgAAAAHAAAAAAAAAAcA
AAABAAAAAQAAAAcAAAACAAAAAgAAAAcAAAAIAAAAAgAAAAgAAAAJAAAAAgAAAAkAAAAKAAAA
AgAAAAoAAAALAAAAAgAAAAsAAAAMAAAAAgAAAAwAAAANAAAAAgAAAA0AAAADAAAAAwAAAA0A
AAAOAAAAAwAAAA4AAAAEAAAABQAAAA4AAAANAAAABQAAAA0AAAAMAAAABQAAAAwAAAALAAAA
BQAAAAsAAAAGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPycA
AAAEAAAAChu4wVyCMEFdra4/MEyPwVyCMEGinhY/Chu4wVyCMEGh1vQ/QWqqwY67Y0Fdra4/
y5SlwVyCMEGh1vQ/AjybwalghEFdra4/MEyPwTuBP0Ge9zE/MEyPwX5SckGh1vQ/QWqqwY67
Y0Gh1vQ/AjybwalghEGh1vQ/MEyPwalghEGh1vQ/MEyPwWL0ZkGSRag/MEyPwXVRRUH8xEA/
QgAAAAAAAAABAAAABAAAAAAAAAAEAAAAAgAAAAAAAAACAAAACAAAAAAAAAAIAAAAAwAAAAAA
AAADAAAAAQAAAAEAAAADAAAABQAAAAEAAAAFAAAABgAAAAEAAAAGAAAADAAAAAEAAAAMAAAA
CwAAAAEAAAALAAAACgAAAAEAAAAKAAAABwAAAAEAAAAHAAAABAAAAAIAAAAEAAAABwAAAAIA
AAAHAAAACgAAAAIAAAAKAAAACQAAAAIAAAAJAAAACAAAAAMAAAAIAAAACQAAAAMAAAAJAAAA
BQAAAAUAAAAJAAAACgAAAAUAAAAKAAAACwAAAAUAAAALAAAADAAAAAUAAAAMAAAABgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8qAAAABAAAAAgduMFSgjDB
+bCuPwgduMFSgjDBodb0PzROj8FSgjDB5l0WP+RqqsGVumPB+bCuP1WWpcFSgjDBodb0P+Rq
qsGVumPBodb0PzROj8EZVHLBodb0PyhMj8FYeFvBdomPPzROj8GRgT/BoPcxP0U8m8G+YYTB
+bCuP0U8m8G+YYTBodb0PzROj8G+YYTBodb0PzROj8F982bB9UeoPzROj8HwUUXBUb9AP0gA
AAAAAAAAAQAAAAQAAAAAAAAABAAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAUAAAAAAAAA
BQAAAAEAAAABAAAABQAAAAoAAAABAAAACgAAAAsAAAABAAAACwAAAAYAAAABAAAABgAAAAQA
AAACAAAABAAAAAYAAAACAAAABgAAAAcAAAACAAAABwAAAAgAAAACAAAACAAAAAkAAAACAAAA
CQAAAAMAAAADAAAACQAAAAoAAAADAAAACgAAAAUAAAAGAAAACwAAAAcAAAAHAAAACwAAAAwA
AAAHAAAADAAAAAkAAAAHAAAACQAAAA0AAAAHAAAADQAAAAgAAAAIAAAADQAAAAkAAAAJAAAA
DAAAAAsAAAAJAAAACwAAAAoAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/IQAAAAQAAACU9kxBP4KwQaHW9D8WwWNBHGuqQaHW9D+U9kxBP4KwQYqprj+U9kxB
fPqdQaHW9D8WwWNBHGuqQYqprj/17ZBBDu+QQaHW9D+U9kxBr2GEQcZWDz92F4ZBr2GEQaHW
9D/17ZBBDu+QQYqprj/8OptBr2GEQaHW9D/8OptBr2GEQYqprj82AAAAAAAAAAEAAAAEAAAA
AAAAAAQAAAACAAAAAAAAAAIAAAAGAAAAAAAAAAYAAAADAAAAAAAAAAMAAAAHAAAAAAAAAAcA
AAAJAAAAAAAAAAkAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAIAAAAAQAAAAgAAAAEAAAA
AgAAAAQAAAAGAAAAAwAAAAYAAAAHAAAABAAAAAgAAAAGAAAABQAAAAkAAAAKAAAABQAAAAoA
AAAIAAAABgAAAAgAAAAKAAAABgAAAAoAAAAJAAAABgAAAAkAAAAHAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyEAAAAEAAAAlPZMwb5hhMEmVw8/lPZMwan7
ncGh1vQ/lPZMwVKCsMH1ra4/CMFjwRNqqsH1ra4/3e2QwR7vkMH1ra4/3jqbwb5hhMH1ra4/
ZBeGwb5hhMGh1vQ/lPZMwVKCsMGh1vQ/CMFjwRNqqsGh1vQ/3e2QwR7vkMGh1vQ/3jqbwb5h
hMGh1vQ/NgAAAAAAAAABAAAABwAAAAAAAAAHAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAA
BAAAAAAAAAAEAAAABQAAAAAAAAAFAAAACgAAAAAAAAAKAAAABgAAAAAAAAAGAAAAAQAAAAEA
AAAGAAAACgAAAAEAAAAKAAAACQAAAAEAAAAJAAAACAAAAAEAAAAIAAAABwAAAAIAAAAHAAAA
CAAAAAIAAAAIAAAAAwAAAAMAAAAIAAAACQAAAAMAAAAJAAAABAAAAAQAAAAJAAAACgAAAAQA
AAAKAAAABQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAA
BAAAAJT2TMFAgbBBStL0P5T2TMFAgbBBI6uuP7TDY8FDaqpBStL0P5T2TMHx+Z1BStL0P5T2
TMHEYYRByzMPP7TDY8FDaqpBI6uuP+rtkMHw75BBStL0PxsWhsHEYYRBStL0P+46m8HEYYRB
I6uuP+rtkMHw75BBI6uuP+46m8HEYYRBStL0PzYAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAIA
AAAAAAAAAgAAAAYAAAAAAAAABgAAAAoAAAAAAAAACgAAAAcAAAAAAAAABwAAAAMAAAAAAAAA
AwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAACAAAABQAAAAkAAAACAAAACQAAAAYA
AAADAAAABwAAAAQAAAAEAAAABwAAAAoAAAAEAAAACgAAAAgAAAAEAAAACAAAAAkAAAAEAAAA
CQAAAAUAAAAGAAAACQAAAAgAAAAGAAAACAAAAAoAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/IQAAAAQAAADeOptBvmGEwaDW9D/eOptBvmGEwZitrj9kF4ZB
vmGEwaDW9D/d7ZBBHu+QwaDW9D/d7ZBBHu+QwZitrj+U9kxBvmGEwYAqDz+U9kxBqfudwaDW
9D8IwWNBE2qqwaDW9D8IwWNBE2qqwZitrj+U9kxBUoKwwZitrj+U9kxBUoKwwaDW9D82AAAA
AAAAAAEAAAAFAAAAAAAAAAUAAAACAAAAAAAAAAIAAAAGAAAAAAAAAAYAAAAKAAAAAAAAAAoA
AAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAFAAAA
AgAAAAUAAAAGAAAAAwAAAAcAAAAIAAAAAwAAAAgAAAAEAAAABAAAAAgAAAAFAAAABQAAAAgA
AAAJAAAABQAAAAkAAAAKAAAABQAAAAoAAAAGAAAABwAAAAoAAAAJAAAABwAAAAkAAAAIAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP10AAAAEAAAAlPZMwZT2
TMGAL629lPZMwWSHKMG4EbW+GYg8wRmIPME3J7e+9YkowZT2TMG4EbW+lPbMwJT2TMH8QDK/
lPZMwQAAALWWwGq/lPZMwSTzCMHWiwu/tfUIwZT2TMHWiwu/xi8uwT3F6MDUeGe/qScUwfUf
FMGyeWi/YMrowMYvLsHUeGe/om/XwJT2TMHwgCy/lPbMwL7GSsFxOze/lPbMwAAAALWA88+/
GFAQwQAAALWkuLO/lPZMwekmI8A9f2O/lPZMwWDaqcAEyEW/j4lBwSBioMCp9mS/ElQFwe7u
XMAiNLS/YAPwwCBioMAciLS/lPbMwLw5AcEEbJ+/lPbMwMgTy8Cgr7S/lPbMwJT2zMCOEbS/
lPbMwHxcGcHCm4y/lPbMwMDlJMGwYYK/lPbMwCOcNcHXgWa/lPbMwHQ7o7+KqM6/T4sNweBY
4b8427O/lPZMwV9LKsBffmK/lPbMwBrQKcBuh8q/lPbMwK8HicBfisK/rgAAAAAAAAABAAAA
AgAAAAAAAAACAAAAAwAAAAAAAAADAAAABwAAAAAAAAAHAAAACwAAAAAAAAALAAAABAAAAAAA
AAAEAAAABQAAAAAAAAAFAAAADwAAAAAAAAAPAAAAHAAAAAAAAAAcAAAAEAAAAAAAAAAQAAAA
BgAAAAAAAAAGAAAAAQAAAAEAAAAGAAAAAgAAAAIAAAAHAAAAAwAAAAIAAAAGAAAACAAAAAIA
AAAIAAAACQAAAAIAAAAJAAAACgAAAAIAAAAKAAAABwAAAAQAAAALAAAADAAAAAQAAAAMAAAA
GQAAAAQAAAAZAAAAGAAAAAQAAAAYAAAAFwAAAAQAAAAXAAAAFAAAAAQAAAAUAAAAFgAAAAQA
AAAWAAAAFQAAAAQAAAAVAAAAHgAAAAQAAAAeAAAAHQAAAAQAAAAdAAAAGgAAAAQAAAAaAAAA
DQAAAAQAAAANAAAABQAAAAUAAAANAAAADgAAAAUAAAAOAAAADwAAAAYAAAAQAAAAEQAAAAYA
AAARAAAACAAAAAcAAAAKAAAACwAAAAgAAAARAAAAEgAAAAgAAAASAAAAEwAAAAgAAAATAAAA
CQAAAAkAAAAUAAAACgAAAAkAAAATAAAAFQAAAAkAAAAVAAAAFgAAAAkAAAAWAAAAFAAAAAoA
AAAUAAAAFwAAAAoAAAAXAAAAGAAAAAoAAAAYAAAAGQAAAAoAAAAZAAAACwAAAAsAAAAZAAAA
DAAAAA0AAAAaAAAAGwAAAA0AAAAbAAAADgAAAA4AAAAbAAAADwAAAA8AAAAbAAAAEQAAAA8A
AAARAAAAHAAAABAAAAAcAAAAEQAAABEAAAAbAAAAEgAAABIAAAAbAAAAGgAAABIAAAAaAAAA
HQAAABIAAAAdAAAAEwAAABMAAAAdAAAAHgAAABMAAAAeAAAAFQAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9jAAAABAAAAJT2zEAAAAA1gPPPv5T2zEB0O6M/
iajOv0+LDUHgWOE/IOCzvxhQEEEAAAA1m7izv5T2TEEAAAA1XcBqv5T2zECU9kxBsUAyv5T2
zEAa0ClAfILKvxJUBUHu7lxACjm0v5T2TEHpJiNAAn9jv4+JQUEgYqBAbvZkv5T2TEGU9kxB
mCutvaJv10CU9kxBwnYsv5T2zEC+xkpBRjE3v5T2zECvB4lAaoXCv2AD8EAgYqBABI20v8Yv
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
AAAAAAYAAAABAAAAAQAAAAUAAAACAAAAAQAAAAYAAAALAAAAAQAAAAsAAAAKAAAAAQAAAAoA
AAAFAAAAAgAAAAUAAAAKAAAAAgAAAAoAAAAHAAAAAgAAAAcAAAAIAAAAAgAAAAgAAAAJAAAA
AwAAAAkAAAAEAAAABAAAAAgAAAALAAAABAAAAAsAAAAGAAAABAAAAAkAAAAIAAAABwAAAAoA
AAALAAAABwAAAAsAAAAIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPyQAAAAEAAAA+sTHQbyGsMCh1vQ/n1q9QYvbHMGh1vQ/+sTHQbyGsMBzrK4/MrC2QbyG
sMCh1vQ/ohu4QVKCMMGh1vQ/n1q9QYvbHMFzrK4/FrqZQbyGsMA8vrs+9ZelQVKCMMGh1vQ/
ohu4QVKCMMFzrK4/FrqZQbO3/sB68gc/FrqZQVKCMMFxj3Y/FrqZQadLIMHME0Q/PAAAAAAA
AAABAAAABQAAAAAAAAAFAAAAAgAAAAAAAAACAAAABgAAAAAAAAAGAAAAAwAAAAAAAAADAAAA
BwAAAAAAAAAHAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAACAAAAAEAAAAIAAAABQAAAAIA
AAAFAAAABgAAAAMAAAAGAAAABwAAAAQAAAAHAAAACgAAAAQAAAAKAAAACAAAAAUAAAAIAAAA
CQAAAAUAAAAJAAAABgAAAAYAAAAJAAAACwAAAAYAAAALAAAACgAAAAYAAAAKAAAABwAAAAgA
AAAKAAAACwAAAAgAAAALAAAACQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8wAAAABAAAAIQbuEE/gjBBqtH0P4QbuEE/gjBBbKquP+qXpUE/gjBBqtH0P6Jb
vUH82hxBqtH0P6JbvUH82hxBbKquPxe6mUGOuf5As/sHPxe6mUGd9A5BKCskPxe6mUFkTSBB
Vh1EPxe6mUFExi9B9lVzPxe6mUE/gjBBiJ91Pz2xtkGqhrBAqtH0Pxe6mUGqhrBAjiO7PqTD
x0GqhrBAqtH0P6TDx0GqhrBAbKquPxe6mUHMdsxAyP3YPsUApUE+grBAmf40P1QAAAAAAAAA
AQAAAAkAAAAAAAAACQAAAAIAAAAAAAAAAgAAAAoAAAAAAAAACgAAAAwAAAAAAAAADAAAAAMA
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
CgAAAAQAAAAKAAAABQAAAAUAAAAKAAAACwAAAAUAAAALAAAADAAAAAUAAAAMAAAABgAAAAYA
AAAMAAAACwAAAAYAAAALAAAACgAAAAYAAAAKAAAADQAAAAYAAAANAAAABwAAAAcAAAANAAAA
CQAAAAcAAAAJAAAACAAAAAkAAAANAAAACgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD8nAAAABAAAAJT2zECKnMVBodb0P5T2zECKnMVB+q+uP5T2zEDSh7RB
odb0PyvaHEF6W71Bodb0PyvaHEF6W71B+q+uP5T2zEBMDpZBHAOhPpT2TEEg/Z1Bodb0P5T2
TEHqgLBBodb0P8We+EBMDpZBfAjQPpT2TEHqgLBB+q+uP5T2TEFMDpZBqRKUP2QOLkFMDpZB
OMZCP1yCSEFMDpZB4Z6KP0IAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAIAAAAAAAAAAgAAAAYA
AAAAAAAABgAAAAcAAAAAAAAABwAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAA
BAAAAAUAAAACAAAABQAAAAYAAAADAAAABwAAAAkAAAADAAAACQAAAAQAAAAEAAAACAAAAAUA
AAAEAAAACQAAAAgAAAAFAAAACAAAAAsAAAAFAAAACwAAAAwAAAAFAAAADAAAAAoAAAAFAAAA
CgAAAAYAAAAGAAAACgAAAAkAAAAGAAAACQAAAAcAAAAIAAAACQAAAAsAAAAJAAAACgAAAAwA
AAAJAAAADAAAAAsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
JwAAAAQAAACU9szATA6WwZgXoT6U9szA0oe0waDW9D+U9szAipzFwZqsrj8r2hzBelu9wZqs
rj/FnvjATA6Wwcob0D6U9kzBTA6WwfQPlD+U9kzBIP2dwaDW9D+U9szAipzFwaDW9D+U9kzB
6oCwwZqsrj8r2hzBelu9waDW9D9kDi7BTA6WwZnNQj9cgkjBTA6WwWmcij+U9kzB6oCwwaDW
9D9CAAAAAAAAAAEAAAAHAAAAAAAAAAcAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAA
AAAAAAQAAAAKAAAAAAAAAAoAAAALAAAAAAAAAAsAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYA
AAABAAAAAQAAAAYAAAAMAAAAAQAAAAwAAAAJAAAAAQAAAAkAAAAHAAAAAgAAAAcAAAAJAAAA
AgAAAAkAAAADAAAAAwAAAAgAAAAEAAAAAwAAAAkAAAAMAAAAAwAAAAwAAAAIAAAABAAAAAgA
AAAKAAAABQAAAAsAAAAIAAAABQAAAAgAAAAMAAAABQAAAAwAAAAGAAAACAAAAAsAAAAKAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzAAAAAEAAAAyPbMwGac
xUGh1vQ/yPbMwGacxUGcrK4/ydwcwVdbvUGh1vQ/yPbMwLGHtEGh1vQ/yPbMwPwMlkEEoKA+
ydwcwVdbvUGcrK4/lPZMwcmAsEGh1vQ/lPZMwQD9nUGh1vQ/ACbbwPwMlkGYxa8+lPZMwfwM
lkESDJQ/lPZMwcmAsEGcrK4/7p74wPwMlkEm/c8+zH9IwfwMlkFHnIo/YeITwfwMlkG6jBI/
2gsuwfwMlkFIwUI/gSI3wfwMlkHse14/VAAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAA
AAACAAAABgAAAAAAAAAGAAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAA
AQAAAAEAAAAEAAAABQAAAAIAAAAFAAAACgAAAAIAAAAKAAAABgAAAAMAAAAHAAAABAAAAAQA
AAAIAAAABQAAAAQAAAAHAAAACQAAAAQAAAAJAAAADAAAAAQAAAAMAAAADwAAAAQAAAAPAAAA
DgAAAAQAAAAOAAAADQAAAAQAAAANAAAACwAAAAQAAAALAAAACAAAAAUAAAAIAAAACwAAAAUA
AAALAAAACgAAAAYAAAAKAAAACQAAAAYAAAAJAAAABwAAAAkAAAAKAAAADAAAAAoAAAALAAAA
DQAAAAoAAAANAAAADgAAAAoAAAAOAAAADwAAAAoAAAAPAAAADAAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8wAAAABAAAAJT2TEE6DpbBdwmUP5T2TEEK/Z3B
oNb0P5T2TEHNgLDBT6muP1yCSEE6DpbB65mKP5T2zEA6DpbB5MmgPpT2TEHNgLDBoNb0P5T2
zECzh7TBoNb0P2QOLkE6DpbB+chCP+ofN0E6DpbBonhePyvaHEFXW73BT6muP8We+EA6DpbB
RBHQPsHfE0E6DpbBrpUSP9Al20A6DpbBjtqvPpT2zEBknMXBT6muPyvaHEFXW73BoNb0P5T2
zEBknMXBoNb0P1QAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAA
AwAAAAgAAAAAAAAACAAAAAcAAAAAAAAABwAAAAsAAAAAAAAACwAAAAoAAAAAAAAACgAAAAwA
AAAAAAAADAAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAYAAAABAAAABgAAAA8AAAABAAAA
DwAAAA4AAAABAAAADgAAAAUAAAACAAAABwAAAAgAAAACAAAACAAAAAMAAAACAAAABQAAAA4A
AAACAAAADgAAAAkAAAACAAAACQAAAAoAAAACAAAACgAAAAsAAAACAAAACwAAAAcAAAAEAAAA
DAAAAAkAAAAEAAAACQAAAA0AAAAEAAAADQAAAA8AAAAEAAAADwAAAAYAAAAJAAAADAAAAAoA
AAAJAAAADgAAAA8AAAAJAAAADwAAAA0AAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/KgAAAAQAAACU9sxA8LiZwWCA2T6U9sxAsIi0waHW9D+U9sxAGJvFwbSs
rj/na8xA8LiZwazl2D4AAIA08LiZwQjWQj6U9sxAGJvFwaHW9D8AAIA0zIm8waHW9D8h8Z9A
JgTJwbSsrj/Ph3VA8LiZwcr2gT6Mm3RA8LiZwWSegT7SpXRANsOZweQMgj4AAIA0TPXMwbSs
rj8h8Z9AJgTJwaHW9D8AAIA0TPXMwaHW9D9IAAAAAAAAAAEAAAAFAAAAAAAAAAUAAAACAAAA
AAAAAAIAAAADAAAAAAAAAAMAAAAIAAAAAAAAAAgAAAAJAAAAAAAAAAkAAAAEAAAAAAAAAAQA
AAABAAAAAQAAAAQAAAAGAAAAAQAAAAYAAAANAAAAAQAAAA0AAAAMAAAAAQAAAAwAAAAFAAAA
AgAAAAcAAAAIAAAAAgAAAAgAAAADAAAAAgAAAAUAAAAMAAAAAgAAAAwAAAAHAAAABAAAAAkA
AAAKAAAABAAAAAoAAAALAAAABAAAAAsAAAANAAAABAAAAA0AAAAGAAAABwAAAAwAAAANAAAA
BwAAAA0AAAALAAAABwAAAAsAAAAKAAAABwAAAAoAAAAIAAAACAAAAAoAAAAJAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyoAAAAEAAAAAAAAAEz1zEGh1vQ/
AAAAAMyJvEGh1vQ/AAAAAEz1zEG0rK4/SvGfwCYEyUGh1vQ/AAAAAPC4mUEI1kI+yPbMwLCI
tEGh1vQ/EKZ0wDbDmUHkDII+SvGfwCYEyUG0rK4/yPbMwBibxUGh1vQ/ypt0wPC4mUFknoE+
yPbMwPC4mUFggNk+U5J1wPC4mUHK9oE+yPbMwBibxUG0rK4/G2zMwPC4mUGs5dg+SAAAAAAA
AAABAAAABAAAAAAAAAAEAAAAAgAAAAAAAAACAAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAA
CAAAAAAAAAAIAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAABAAAAAIAAAAEAAAABgAAAAIA
AAAGAAAABwAAAAMAAAAHAAAADAAAAAMAAAAMAAAACAAAAAQAAAAJAAAABgAAAAQAAAAFAAAA
CgAAAAQAAAAKAAAADQAAAAQAAAANAAAACwAAAAQAAAALAAAACQAAAAUAAAAIAAAADAAAAAUA
AAAMAAAACgAAAAYAAAALAAAABwAAAAYAAAAJAAAACwAAAAcAAAALAAAADAAAAAoAAAAMAAAA
DQAAAAsAAAANAAAADAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD8qAAAABAAAAAAAgDRM9cxBodb0PwAAgDRM9cxBtKyuPwAAgDTMibxBodb0PyHxn0AmBMlB
odb0PyHxn0AmBMlBtKyuP9KldEA2w5lB5AyCPgAAgDTwuJlBCNZCPpT2zECwiLRBodb0P5T2
zEAYm8VBodb0P8+HdUDwuJlByvaBPpT2zEAYm8VBtKyuP4ybdEDwuJlBZJ6BPtM0dEDwuJlB
SoiBPpT2zEDwuJlBYF3aPkgAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAIAAAAAAAAAAgAAAAcA
AAAAAAAABwAAAAgAAAAAAAAACAAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAA
BAAAAAUAAAABAAAABQAAAAYAAAACAAAABgAAAAcAAAADAAAACAAAAAoAAAADAAAACgAAAAQA
AAAEAAAACQAAAAUAAAAEAAAACgAAAAkAAAAFAAAACwAAAAwAAAAFAAAADAAAAAYAAAAFAAAA
CQAAAAsAAAAGAAAADQAAAAcAAAAGAAAADAAAAAsAAAAGAAAACwAAAAkAAAAGAAAACQAAAA0A
AAAHAAAADQAAAAoAAAAHAAAACgAAAAgAAAAJAAAACgAAAA0AAAAQAAAAAAAAAAAAAAAAAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/KgAAAAQAAAAAAIC08LiZwQjWQj4AAIC0zIm8waHW
9D8AAIC0TPXMwbSsrj/SpXTANsOZweQMgj7TNHTA8LiZwUqIgT6U9szA8LiZwXpz2j6U9szA
sIi0waHW9D8AAIC0TPXMwaHW9D8h8Z/AJgTJwbSsrj+Mm3TA8LiZwWSegT7Ph3XA8LiZwcr2
gT6U9szAGJvFwbSsrj+U9szAGJvFwaHW9D8h8Z/AJgTJwaHW9D9IAAAAAAAAAAEAAAAHAAAA
AAAAAAcAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAJAAAAAAAAAAkA
AAAKAAAAAAAAAAoAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYAAAAMAAAA
AQAAAAwAAAANAAAAAQAAAA0AAAAHAAAAAgAAAAcAAAANAAAAAgAAAA0AAAAIAAAAAgAAAAgA
AAADAAAAAwAAAAkAAAAEAAAAAwAAAAgAAAAKAAAAAwAAAAoAAAAJAAAABQAAAAoAAAALAAAA
BQAAAAsAAAAMAAAABQAAAAwAAAAGAAAACAAAAA0AAAAMAAAACAAAAAwAAAALAAAACAAAAAsA
AAAKAAAA</SharedString>
		<SharedString md5="e5KCADyg5zoQUR1gMWV5Ng==">Q1NHUEhTBgAAAPExPkDvUIK8QAchu0G9yDsA/4JASOkLu0g2JjtoAA9AXMp3O1nQC0AQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/GwAAAAQAAABmDtq+kpuaPwbR
sr92beG+kpuaP3GXmr9mDtq+zU+oP+FLqL8ErP+9kpuaP8oHbr8aU+S+kpuaPzQ9jr+iHuK+
UqqzP8oHbr9mDtq+CCDOP8oHbr92dLa+kpuaP8oHbr8aU+S+JGysP8oHbr8qAAAAAAAAAAEA
AAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAHAAAAAAAAAAcAAAAEAAAAAAAAAAQAAAABAAAA
AQAAAAQAAAACAAAAAgAAAAQAAAAFAAAAAgAAAAUAAAAGAAAAAgAAAAYAAAADAAAAAwAAAAYA
AAAFAAAAAwAAAAUAAAAIAAAAAwAAAAgAAAAHAAAABAAAAAcAAAAIAAAABAAAAAgAAAAFAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPxgAAAAEAAAAGA7aviEg
zr+fB24/MFfkvjlsrL+fB24/qJr/vRGZmr+fB24/GA7avuJPqL/fS6g/MFfkvhGZmr8oPY4/
OnO2vhGZmr+fB24/GA7avhGZmr8J0bI/Wm3hvhGZmr9ql5o/JAAAAAAAAAABAAAABQAAAAAA
AAAFAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAAAQAAAAEAAAADAAAABAAAAAEAAAAEAAAA
BQAAAAIAAAAFAAAABAAAAAIAAAAEAAAABwAAAAIAAAAHAAAABgAAAAIAAAAGAAAAAwAAAAMA
AAAGAAAABwAAAAMAAAAHAAAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8bAAAABAAAABCc/73EB26/C5mav1Nztr7EB26/C5mavx4O2r6C0rK/C5mavx4O
2r7dS6i/6U6ovx4O2r7EB26/ZSHOvxJT5L7EB26/pWysvxJT5L4wPY6/C5mav1xt4b5tl5q/
C5mav4se4r7EB26/A6uzvyoAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAcAAAAAAAAABwAAAAIA
AAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAUAAAAAAAAA
BQAAAAEAAAABAAAABQAAAAYAAAACAAAABwAAAAMAAAADAAAABwAAAAYAAAADAAAABgAAAAgA
AAADAAAACAAAAAQAAAAFAAAACAAAAAYAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/GwAAAAQAAACIKrm+SpqaP58Hbj/Iif+9SpqaP58Hbj84V+S+SpqaPyo9
jj84V+S+JmysP58Hbj/7Edq+wB7OP58Hbj/7Edq+z0+oP+NLqD/7Edq+SpqaP47Psj9uceG+
SpqaP22Xmj+iIuK+VaqzP58Hbj8qAAAAAAAAAAEAAAAGAAAAAAAAAAYAAAAHAAAAAAAAAAcA
AAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAIAAAAAAAAAAgAAAAEAAAAAAAAAAQAAAABAAAA
AQAAAAQAAAAFAAAAAQAAAAUAAAAGAAAAAgAAAAcAAAAFAAAAAgAAAAUAAAAIAAAAAgAAAAgA
AAADAAAABAAAAAgAAAAFAAAABQAAAAcAAAAGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAPx4AAAAEAAAAI7xuvgAAAABK/u0+bSShvgAAAABBBO4+I7xuvvD8
cr5K/u0+WOnYvgAAAAAA0CY4bSShvvD8cr5BBO4+pJPfvgAAAADhfpA+WOnYvvD8cr4A0CY4
YlX8vvD8cr4AAMC2uFj8vgAAAAAA0CY4pJPfvvD8cr7hfpA+MAAAAAAAAAABAAAABAAAAAAA
AAAEAAAAAgAAAAAAAAACAAAABgAAAAAAAAAGAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAA
BQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAACQAAAAEAAAAJAAAABAAAAAIAAAAEAAAACQAAAAIA
AAAJAAAABwAAAAIAAAAHAAAABgAAAAMAAAAGAAAABwAAAAMAAAAHAAAACAAAAAUAAAAIAAAA
CQAAAAcAAAAJAAAACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD8nAAAABAAAACO8br7/+XI+Sv7tPpw5mL7/+XI+QQTuPiO8br4AAAAASv7tPhTm2L7/+XI+
AADAtmnp2L4WAHM+ANAmOHUkob7/+XI+Sv7tPnUkob4AAAAASv7tPmnp2L4AAAAAANAmOHpV
/L4AAAAAANAmONBY/L7/+XI+ANAmOLeT377/+XI+4X6QPp2str4AAAAAbsXNPreT374AAAAA
4X6QPkIAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEA
AAABAAAABAAAAAUAAAABAAAABQAAAAYAAAABAAAABgAAAAIAAAACAAAABgAAAAsAAAACAAAA
CwAAAAwAAAACAAAADAAAAAgAAAACAAAACAAAAAcAAAACAAAABwAAAAMAAAADAAAABwAAAAgA
AAADAAAACAAAAAkAAAADAAAACQAAAAQAAAAEAAAACgAAAAUAAAAEAAAACQAAAAoAAAAFAAAA
CwAAAAYAAAAFAAAACgAAAAsAAAAIAAAADAAAAAkAAAAJAAAADAAAAAoAAAAKAAAADAAAAAsA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/IQAAAAQAAACKDtq+
fSZOP+a61D84V+S+jA1TPybGtj84V+S+fSZOP6bJtz/Au+29fSZOPzLfpT+KDtq+9gZuPwog
zj+KDtq+tJeaP1XUsj84V+S+2BV/PzLfpT+f9rO+fSZOPzLfpT+UYLa+2pRQPzLfpT8PtMO+
tJeaPzLfpT/m/d2+tJeaPzLfpT82AAAAAAAAAAEAAAACAAAAAAAAAAIAAAAHAAAAAAAAAAcA
AAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAFAAAAAQAAAAUAAAAGAAAA
AQAAAAYAAAACAAAAAgAAAAYAAAAIAAAAAgAAAAgAAAAHAAAAAwAAAAkAAAAFAAAAAwAAAAUA
AAAEAAAAAwAAAAcAAAAIAAAAAwAAAAgAAAAGAAAAAwAAAAYAAAAKAAAAAwAAAAoAAAAJAAAA
BQAAAAkAAAAKAAAABQAAAAoAAAAGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPycAAAAEAAAAjg7avgy81L/5I06/jg7avgUgzr8KB26/irztvWTgpb/5I06/
2r7jviVoub/5I06/wk7kvvvEtr+eDVO/kpbivmTgpb948oa/jg7avlfUsr/Bl5q/6tK2vmTg
pb/5I06/GrTDvmTgpb/Bl5q/wk7kvqfJt7/5I06/wk7kvmTgpb/uFX+/6f3dvmTgpb/Bl5q/
9WvevmTgpb8pwHi/QgAAAAAAAAABAAAAAgAAAAAAAAACAAAABwAAAAAAAAAHAAAACQAAAAAA
AAAJAAAAAwAAAAAAAAADAAAAAQAAAAEAAAADAAAABAAAAAEAAAAEAAAABQAAAAEAAAAFAAAA
BgAAAAEAAAAGAAAAAgAAAAIAAAAGAAAACAAAAAIAAAAIAAAACwAAAAIAAAALAAAABQAAAAIA
AAAFAAAACgAAAAIAAAAKAAAADAAAAAIAAAAMAAAABwAAAAMAAAAJAAAABAAAAAQAAAAJAAAA
CgAAAAQAAAAKAAAABQAAAAUAAAALAAAABgAAAAYAAAALAAAACAAAAAcAAAAMAAAACQAAAAkA
AAAMAAAACgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8kAAAA
BAAAABe0w75qlpo/Ot+lv4oO2r5qlpo/rNSyv+T93b5qlpo/Ot+lv2oA7r09Lk4/Ot+lv7C8
7b1UIU4/Ot+lv4oO2r72Bm4/CiHOvzRX5L7ZFX8/Ot+lv+nStr5UIU4/Ot+lv4oO2r5UIU4/
DrzUv/hS5L6NDVM/asW2v1ua3L5UIU4/mZDNv/hS5L5UIU4/HMq3vzwAAAAAAAAAAQAAAAIA
AAAAAAAAAgAAAAYAAAAAAAAABgAAAAcAAAAAAAAABwAAAAQAAAAAAAAABAAAAAMAAAAAAAAA
AwAAAAEAAAABAAAAAwAAAAQAAAABAAAABAAAAAUAAAABAAAABQAAAAYAAAABAAAABgAAAAIA
AAAEAAAABwAAAAsAAAAEAAAACwAAAAoAAAAEAAAACgAAAAgAAAAEAAAACAAAAAUAAAAFAAAA
CQAAAAYAAAAFAAAACAAAAAoAAAAFAAAACgAAAAkAAAAGAAAACQAAAAsAAAAGAAAACwAAAAcA
AAAJAAAACgAAAAsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
MwAAAAQAAADgrW6+AGDTt8cE7r7grW6+afRyvscE7r5UYqq+AGDTt8cE7r5I6di+AAAAAAAA
gDSFoXW+AGDTtzF3176FoXW+M8WDvjF3176hape+M8WDvscE7r5UYqq+M8WDvscE7r6GuNq+
AGDTt0Wbpb6bk9++AGDTt3t/kL7f8u2+AGDTt2CLEL4jUvy+AGDTtwAAgDRI6di+afRyvgAA
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
AAAHAAAAAAAAAAcAAAAMAAAAAAAAAAwAAAALAAAAAAAAAAsAAAAKAAAAAAAAAAoAAAAIAAAA
AAAAAAgAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUA
AAANAAAAAAAAAA0AAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYAAAAHAAAAAgAAAAgAAAADAAAA
AwAAAAkAAAAEAAAAAwAAAAgAAAAKAAAAAwAAAAoAAAALAAAAAwAAAAsAAAAMAAAAAwAAAAwA
AAAHAAAAAwAAAAcAAAAJAAAABAAAAAYAAAANAAAABAAAAA0AAAAFAAAABAAAAAkAAAAGAAAA
BgAAAAkAAAAHAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzYA
AAAEAAAAo0/kvo48jr/Bl5q/5nHhvtuXmr/Bl5q/o0/kvt04lb+cOJW/NFfkvuDcpb/uFX+/
1XO2vsgEbr/Bl5q/cQTevuDcpb/Bl5q/K9a2vuDcpb/5I06/MqAKvsgEbr/5I06/Up//vcgE
br/Bl5q/NbjDvuDcpb/Bl5q/esbtveDcpb/5I06/iAsTPsgEbr/5I06/G8TrvcgEbr8Ehpm/
APFyO8gEbr8AUYq/G8TrvX+Mir/QiYq/G8Trvd7Bpb/5I06/bEepPX33hL/5I06/bEepPcgE
br+jgXK/YAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAA
CAAAAAAAAAAIAAAACQAAAAAAAAAJAAAABQAAAAAAAAAFAAAAAQAAAAEAAAADAAAAAgAAAAEA
AAAFAAAAAwAAAAMAAAAFAAAACQAAAAMAAAAJAAAACgAAAAMAAAAKAAAABgAAAAMAAAAGAAAA
BAAAAAQAAAAGAAAABwAAAAQAAAAHAAAACwAAAAQAAAALAAAAEQAAAAQAAAARAAAADQAAAAQA
AAANAAAADAAAAAQAAAAMAAAACAAAAAYAAAAKAAAADwAAAAYAAAAPAAAAEAAAAAYAAAAQAAAA
CwAAAAYAAAALAAAABwAAAAgAAAAMAAAACQAAAAkAAAAMAAAADQAAAAkAAAANAAAADgAAAAkA
AAAOAAAADwAAAAkAAAAPAAAACgAAAAsAAAAQAAAAEQAAAA0AAAARAAAAEAAAAA0AAAAQAAAA
DgAAAA4AAAAQAAAADwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD85AAAABAAAALq9/71qlpo/zARuvzq4w75qlpo/Dt6lv0pstr5qlpo/zARuv4Ti6734hZk/
zARuv3UE3r5qlpo/Dt6lv0Drcjv1UIo/zARuv4Ti673FiYo/gYyKv4Ti671UIU4/4MGlvyQD
7r09Lk4/Dt6lv6DOtr5UIU4/Dt6lv2avCr5UIU4/zARuvzhX5L5qlpo/kDyOvxdI5L7ZFX8/
Dt6lvzhX5L6QOJU/3ziVv+tx4b5qlpo/3Zeav/YoqT2QgXI/zARuv/YoqT1UIU4/f/eEv6HG
7b1UIU4/Dt6lv2wLEz5UIU4/zARuv2YAAAAAAAAAAQAAAAQAAAAAAAAABAAAAA4AAAAAAAAA
DgAAAAsAAAAAAAAACwAAAAIAAAAAAAAAAgAAAAoAAAAAAAAACgAAABIAAAAAAAAAEgAAAA8A
AAAAAAAADwAAAAUAAAAAAAAABQAAAAMAAAAAAAAAAwAAAAEAAAABAAAAAwAAAAUAAAABAAAA
BQAAAAYAAAABAAAABgAAAAcAAAABAAAABwAAAAgAAAABAAAACAAAABEAAAABAAAAEQAAAAkA
AAABAAAACQAAAAwAAAABAAAADAAAAAQAAAACAAAACQAAAAoAAAACAAAACwAAAAwAAAACAAAA
DAAAAAkAAAAEAAAADAAAAA0AAAAEAAAADQAAAA4AAAAFAAAADwAAABAAAAAFAAAAEAAAAAcA
AAAFAAAABwAAAAYAAAAHAAAAEQAAAAgAAAAHAAAAEAAAABIAAAAHAAAAEgAAAAoAAAAHAAAA
CgAAAAkAAAAHAAAACQAAABEAAAALAAAADgAAAA0AAAALAAAADQAAAAwAAAAPAAAAEgAAABAA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/QgAAAAQAAAAct/+9
tJeaP1AJbj+jJLm+tJeaP1AJbj9IrcO+tJeaPzDfpT8gzeu994WZP1AJbj++87O+fSZOPzDf
pT84V+S+2BV/PzDfpT84V+S+tJeaP388jj8MY/G9fSZOP1AJbj8+992+tJeaPzDfpT99vu29
fSZOPzDfpT8gzeu9fSZOP9bBpT/gPiQ8fSZOPye7lT82KKk9yg9UP1Mtij8gzeu9xYmKP2+M
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
AAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAABAAAAAQAAAAQAAAAFAAAAAQAAAAUAAAALAAAA
AQAAAAsAAAAGAAAAAQAAAAYAAAACAAAAAQAAAAMAAAAHAAAAAQAAAAcAAAAIAAAAAQAAAAgA
AAAPAAAAAQAAAA8AAAAMAAAAAQAAAAwAAAAKAAAAAQAAAAoAAAAEAAAAAgAAAAYAAAAJAAAA
BAAAAAoAAAALAAAABAAAAAsAAAAFAAAABgAAAAsAAAAKAAAABgAAAAoAAAAMAAAABgAAAAwA
AAANAAAABgAAAA0AAAAOAAAABgAAAA4AAAAJAAAABwAAAAkAAAAOAAAABwAAAA4AAAANAAAA
BwAAAA0AAAAQAAAABwAAABAAAAAPAAAABwAAAA8AAAAIAAAADAAAAA8AAAAQAAAADAAAABAA
AAANAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0IAAAAEAAAA
/PyIProE7r6SB26/k0OBPmQ9D7+SB26/k0OBPrAK7r64Eni/OlKpPbAK7r7lb52/FNoavbAK
7r7bmK6/yn2XvrAK7r7bmK6/AAopPLAK7r6SB26/tB1YPkygNr+SB26/OlKpPW8HVL9OLYq/
tnzrvTQzLL/bmK6/MFfkvn1PaL/bmK6/MFfkvscEbr/xaKy/hcZFvswBbr+SB26/9dwCPhbH
XL+SB26/OlKpPcwBbr9Cg3K/IE9xO8wBbr9OVIq/tnzrvQTrQ79arKm/48E3vlyXSb/bmK6/
QKnjvscEbr/bmK6/bqC4PcwBbr+SB26/tnzrvcwBbr91hpm/JeScvswBbr/bmK6/eAAAAAAA
AAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAA
BgAAAAAAAAAGAAAADAAAAAAAAAAMAAAAEwAAAAAAAAATAAAADQAAAAAAAAANAAAABwAAAAAA
AAAHAAAAAQAAAAEAAAAHAAAAAgAAAAIAAAAHAAAAAwAAAAMAAAAIAAAACQAAAAMAAAAJAAAA
BAAAAAMAAAAHAAAACAAAAAQAAAAJAAAAEQAAAAQAAAARAAAAFQAAAAQAAAAVAAAAEgAAAAQA
AAASAAAACgAAAAQAAAAKAAAABQAAAAUAAAAKAAAACwAAAAUAAAALAAAADAAAAAUAAAAMAAAA
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
AAAaAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1EAAAAEAAAA
yW/VvlQhTj+Pg7I/Rm9sviocTj+Pg7I/r6LrvVQhTj9VwqU/REPxvVQhTj+aB24/GM6BvgAA
AACPg7I/WNUovnIBMD+Pg7I/r6LrvajrQz9ErKk/TG0kPFQhTj8uu5U/tYsjPlQhTj+aB24/
yYCMPQAAAACaB24/bPiDPAAAAACPg7I/r6LrvRVEGT+Pg7I/VDupPVQhTj+wZ4s/NhnePVQh
Tj+QU4Y/0ApYPoSaNj+aB24/fl6hPgAAAACaB24/VDupPQAAAABErKk/VDupPeXqNT6gqqw/
SP4GPYQ8CD6Pg7I/yP9UPJBigj6Pg7I/7IxwPqfsHz+aB24/EuOiPpjBXj2aB24/BTyBPgAA
AACEjIo/BqJcPgAAAAB/VZE/BTyBPg6BFD66/ow/BTyBPuY8Dz+aB24/bcakPsTX+j2aB24/
lgAAAAAAAAABAAAAAgAAAAAAAAACAAAABwAAAAAAAAAHAAAADAAAAAAAAAAMAAAADQAAAAAA
AAANAAAACAAAAAAAAAAIAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAACgAAAAAAAAAKAAAA
EgAAAAAAAAASAAAAEwAAAAAAAAATAAAACwAAAAAAAAALAAAABQAAAAAAAAAFAAAAAQAAAAEA
AAAFAAAABgAAAAEAAAAGAAAAAgAAAAIAAAAGAAAABwAAAAMAAAAIAAAADgAAAAMAAAAOAAAA
FAAAAAMAAAAUAAAAGQAAAAMAAAAZAAAAGgAAAAMAAAAaAAAAFQAAAAMAAAAVAAAADwAAAAMA
AAAPAAAACQAAAAMAAAAJAAAABAAAAAQAAAAJAAAADwAAAAQAAAAPAAAAFgAAAAQAAAAWAAAA
FwAAAAQAAAAXAAAAEAAAAAQAAAAQAAAACgAAAAUAAAALAAAABgAAAAYAAAALAAAADAAAAAYA
AAAMAAAABwAAAAgAAAANAAAADgAAAAoAAAAQAAAAEQAAAAoAAAARAAAAEgAAAAsAAAATAAAA
DAAAAAwAAAATAAAAEQAAAAwAAAARAAAAFAAAAAwAAAAUAAAADQAAAA0AAAAUAAAADgAAAA8A
AAAVAAAAFgAAABAAAAAXAAAAEQAAABEAAAATAAAAEgAAABEAAAAXAAAAGAAAABEAAAAYAAAA
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
/kWBPrFig7+nodm+lg2NPsIHbr+AjOu+pNeBvhuCsr8AAGA03pUKvsIHbr8+HE6/4PWDPBuC
sr8AAGA0XoqJvBuCsr/ImoS+8FqpPWzloL9BRQW/8FqpPTz4hL8+HE6/b6g2PsIHbr++Tjm/
/kWBPsIHbr/sCQ2/cicVvgBjcr8+HE6/aHnVvhuCsr8+HE6/HP0SPsIHbr8+HE6/Cn5svhuC
sr9oIU6/ARAlvRuCsr8N9OK+TqHrvRuCsr8jRBm/TqHrvU+sqb+Q5kO/TqHrvWHCpb8+HE6/
odJgvhuCsr/o8Ui/09IovhuCsr+CATC/igAAAAAAAAABAAAAAgAAAAAAAAACAAAABgAAAAAA
AAAGAAAADgAAAAAAAAAOAAAADQAAAAAAAAANAAAAEQAAAAAAAAARAAAACAAAAAAAAAAIAAAA
AwAAAAAAAAADAAAABwAAAAAAAAAHAAAACQAAAAAAAAAJAAAABAAAAAAAAAAEAAAAAQAAAAEA
AAAEAAAABQAAAAEAAAAFAAAAAgAAAAIAAAAFAAAABgAAAAMAAAAIAAAABwAAAAQAAAAJAAAA
CgAAAAQAAAAKAAAACwAAAAQAAAALAAAABQAAAAUAAAALAAAADAAAAAUAAAAMAAAADQAAAAUA
AAANAAAADgAAAAUAAAAOAAAABgAAAAcAAAAIAAAADwAAAAcAAAAPAAAAEAAAAAcAAAAQAAAA
EgAAAAcAAAASAAAAFwAAAAcAAAAXAAAAGAAAAAcAAAAYAAAAFAAAAAcAAAAUAAAAEwAAAAcA
AAATAAAACgAAAAcAAAAKAAAACQAAAAgAAAARAAAAEgAAAAgAAAASAAAADwAAAAoAAAATAAAA
CwAAAAsAAAATAAAAFAAAAAsAAAAUAAAAFQAAAAsAAAAVAAAAFgAAAAsAAAAWAAAADAAAAAwA
AAAWAAAAEgAAAAwAAAASAAAAEQAAAAwAAAARAAAADQAAAA8AAAASAAAAEAAAABIAAAAWAAAA
FQAAABIAAAAVAAAAFwAAABQAAAAYAAAAFQAAABUAAAAYAAAAFwAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9UAAAABAAAAEDhtDza+G2/xwTuvslpjD7Q/m2/
xwTuvnQKJD3Q/m2/jg3OvojOjD3Q/m2/AACANFTjhD4AyD65AACANFTjhD4AyD65xwTuvuO+
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
rL9U6jU+Vh2pPVCsqb8AAIA0mLOpPJUbhL8AAIA0hnuMPcgHbr8AUL84GIK4PcgHbr+gBG4/
MJXrvVCsqb/n6kM/MJXrvRyCsr8IQhk/Vh2pPdODcr+gBG4/IH9qO+9Tir+gBG4/MJXrvd2F
mb+gBG4/GFRTPByCsr/6YII+2rkGPRyCsr8MQAg+hIaDPByCsr8AUL84MNyBvhyCsr8AUL84
idZFvsgHbr+gBG4/PGKqvhyCsr+gBG4/1nlsvhyCsr9SH04/MFfkvhyCsr/sGl4/MFfkvhFp
rL+gBG4/cnTivhyCsr+gBG4/lgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAA
BAAAAAAAAAAEAAAACgAAAAAAAAAKAAAAFQAAAAAAAAAVAAAACwAAAAAAAAALAAAABQAAAAAA
AAAFAAAAAQAAAAEAAAAFAAAABgAAAAEAAAAGAAAAAgAAAAIAAAAGAAAABwAAAAIAAAAHAAAA
CAAAAAIAAAAIAAAAAwAAAAMAAAAIAAAACQAAAAMAAAAJAAAABAAAAAQAAAAJAAAACgAAAAUA
AAALAAAABgAAAAYAAAAMAAAADQAAAAYAAAANAAAABwAAAAYAAAALAAAADgAAAAYAAAAOAAAA
DwAAAAYAAAAPAAAAEAAAAAYAAAAQAAAADAAAAAcAAAARAAAAEgAAAAcAAAASAAAAEwAAAAcA
AAATAAAACAAAAAcAAAANAAAAEQAAAAgAAAATAAAAFAAAAAgAAAAUAAAACQAAAAkAAAAUAAAA
CgAAAAoAAAAUAAAAFQAAAAsAAAAVAAAAGQAAAAsAAAAZAAAAGgAAAAsAAAAaAAAAFgAAAAsA
AAAWAAAAEAAAAAsAAAAQAAAADwAAAAsAAAAPAAAADgAAAAwAAAAQAAAAFgAAAAwAAAAWAAAA
FwAAAAwAAAAXAAAADQAAAA0AAAAXAAAAFgAAAA0AAAAWAAAAGgAAAA0AAAAaAAAAGAAAAA0A
AAAYAAAAFAAAAA0AAAAUAAAAEwAAAA0AAAATAAAAEgAAAA0AAAASAAAAEQAAABQAAAAYAAAA
GQAAABQAAAAZAAAAFQAAABgAAAAaAAAAGQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD9mAAAABAAAAPFG/D4A0L64AEA/Odzg7T4K/tK+AEA/OWzjhD4A0L64
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
AwAAAB4AAAAgAAAAAwAAACAAAAAVAAAAAwAAABUAAAAPAAAAAwAAAA8AAAAKAAAABAAAAAoA
AAAQAAAABAAAABAAAAAFAAAABQAAABEAAAASAAAABQAAABIAAAAGAAAABQAAABAAAAATAAAA
BQAAABMAAAARAAAABgAAABIAAAAUAAAABgAAABQAAAAPAAAABgAAAA8AAAAVAAAABgAAABUA
AAAWAAAABgAAABYAAAAHAAAABwAAABYAAAAXAAAABwAAABcAAAAYAAAABwAAABgAAAAIAAAA
CAAAABkAAAALAAAACAAAAAsAAAAJAAAACAAAABgAAAAaAAAACAAAABoAAAAbAAAACAAAABsA
AAAcAAAACAAAABwAAAAZAAAACgAAAA8AAAAQAAAACwAAABkAAAAdAAAACwAAAB0AAAAMAAAA
DAAAAB0AAAANAAAADQAAABwAAAAbAAAADQAAABsAAAAeAAAADQAAAB4AAAAOAAAADQAAAB0A
AAAZAAAADQAAABkAAAAcAAAADwAAABQAAAAfAAAADwAAAB8AAAARAAAADwAAABEAAAATAAAA
DwAAABMAAAAQAAAAEQAAAB8AAAASAAAAEgAAAB8AAAAUAAAAFQAAACAAAAAhAAAAFQAAACEA
AAAXAAAAFQAAABcAAAAWAAAAFwAAACIAAAAjAAAAFwAAACMAAAAaAAAAFwAAABoAAAAYAAAA
FwAAACEAAAAiAAAAGgAAACMAAAAbAAAAGwAAACMAAAAeAAAAHgAAACMAAAAgAAAAIAAAACMA
AAAiAAAAIAAAACIAAAAhAAAA</SharedString>
		<SharedString md5="fJSzk9zJwSCKzNXY8vBxhA==">Q1NHUEhTBgAAANjWCzwAAAAAAAAAAAAAAAARols5AAAAAAAAAADQAVs5AAAAAHw2UjgQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JAAAAAQAAADRCmA8BLaNvau+
Zz5yh4u9b2uxPKm+Z74wC2A8D7aNvam+Z752h4s9OIv/PKi+Z750h4u9Z2uxPKu+Zz706Ao9
/bWNPau+Zz7dO3u8ALaNPae+Z74co3494ifRvKu+Zz5yh4s9AYv/PKu+Zz4vo349DSjRvKm+
Z77oO3u8AraNPau+Zz4M6Qo9AraNPai+Z748AAAAAAAAAAEAAAACAAAAAwAAAAIAAAABAAAA
BAAAAAAAAAAFAAAABAAAAAEAAAAAAAAABgAAAAEAAAAEAAAABgAAAAMAAAABAAAABwAAAAAA
AAACAAAABwAAAAUAAAAAAAAACAAAAAMAAAAFAAAACAAAAAUAAAAHAAAACAAAAAcAAAADAAAA
CQAAAAIAAAADAAAACQAAAAMAAAAHAAAACQAAAAcAAAACAAAACgAAAAQAAAAFAAAACgAAAAUA
AAAGAAAACgAAAAYAAAAEAAAACwAAAAUAAAADAAAACwAAAAMAAAAGAAAACwAAAAYAAAAFAAAA
</SharedString>
		<SharedString md5="oAqLOvZlGicIFwMMS0nliA==">Q1NHUEhTBgAAAB5R0UTia9K8/o/FPLE/wT5dLtJIPPETRlxtWcMN57NIwOs0wufBQUkQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/MwAAAAQAAADrcaRB+NG8QFi1
J77rcaRBI4qhQIx7Y77gnp1B+NG8QHQcvr5ORVtB+NG8QJbnvb9ORVtBAAAAAHPA1L/rcaRB
AAAAADAKwb7rcaRBOtKCQGJ7kr6dwJlB2ax0QABjIL+PtZRB+NG8QIbqI7/R8GNB+NG8QBAW
tL9ORVtBYaG1QD74v79ORVtBQHouQHvQz7+2xIJB1ApQQN9umL/aU4VBAAAAAChwl78gw5xB
AAAAACrCHb/rcaRBgHnpP4SwrL7dq3hB+NG8QCSJmr9aAAAAAAAAAAEAAAACAAAAAAAAAAIA
AAAIAAAAAAAAAAgAAAAQAAAAAAAAABAAAAAJAAAAAAAAAAkAAAADAAAAAAAAAAMAAAAEAAAA
AAAAAAQAAAAFAAAAAAAAAAUAAAAPAAAAAAAAAA8AAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYA
AAAHAAAAAQAAAAcAAAAIAAAAAQAAAAgAAAACAAAAAwAAAAkAAAAKAAAAAwAAAAoAAAALAAAA
AwAAAAsAAAAEAAAABAAAAAsAAAAMAAAABAAAAAwAAAANAAAABAAAAA0AAAAOAAAABAAAAA4A
AAAFAAAABQAAAA4AAAAPAAAABgAAAA8AAAAHAAAABwAAAA8AAAAOAAAABwAAAA4AAAANAAAA
BwAAAA0AAAAMAAAABwAAAAwAAAAIAAAACAAAAAwAAAAQAAAACQAAAAsAAAAKAAAACQAAABAA
AAALAAAACwAAABAAAAAMAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPzkAAAAEAAAAAAAAAE5FW8FzwNS/AAAAAOtxpMHOGsG+AAAAANpThcFtbJe/fBlQwLbE
gsEscZi/FD8cv05FW8GorNO/Ej3bwE5FW8GEgrW/Ej3bwOtxpMGwWMq96Kt0wJ3AmcFAXiC/
AAAAACDDnMFTvh2/utWCwOtxpMGUfJK+Sn0uwE5FW8HQy8+/kELbwCqvjsFawDu/ixDMwEdd
dsH445q/66K1wE5FW8Eu87+/Ej3bwPFOcsFGTZu/Ej3bwPlmksEMiiW/jwB2wE5FW8F/68m/
Ej3bwNjdd8Gys5O/Ej3bwCJXhMF6N3m/ZgAAAAAAAAABAAAACAAAAAAAAAAIAAAAAgAAAAAA
AAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAACgAAAAAAAAAKAAAAEAAAAAAAAAAQAAAA
DQAAAAAAAAANAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAAAQAAAAEAAAAHAAAACAAAAAEA
AAAGAAAACQAAAAEAAAAJAAAABwAAAAIAAAAIAAAABwAAAAIAAAAHAAAAAwAAAAMAAAAKAAAA
BAAAAAMAAAAHAAAACwAAAAMAAAALAAAADAAAAAMAAAAMAAAACgAAAAUAAAANAAAADgAAAAUA
AAAOAAAACwAAAAUAAAALAAAABgAAAAYAAAALAAAADwAAAAYAAAAPAAAACQAAAAcAAAAJAAAA
DwAAAAcAAAAPAAAACwAAAAoAAAAMAAAAEAAAAAsAAAAOAAAAEQAAAAsAAAARAAAAEgAAAAsA
AAASAAAADAAAAAwAAAASAAAAEQAAAAwAAAARAAAADgAAAAwAAAAOAAAADQAAAAwAAAANAAAA
EAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD88AAAABAAAAI9C
20DrcaRBsBDKvY9C20BORVtB1Ia1v49C20D5ZpJBM4Qlv0GC2kDrcaRBSIPNvQAAAADrcaRB
AgzBvgAAAABORVtBc8DUv+qitUBORVtBuve/v49C20DxTnJB/1Cbv49C20Aqr45BCsU7v+er
dECdwJlBUmIgvzvQgkDrcaRBvGySvgAAAAAgw5xBVcIdvwAAAADaU4VBEHCXv3kkUEC2xIJB
1XSYvxQ/HD9ORVtBprHTv4oQzEBHXXZBr+eav44AdkBORVtBRfDJv49C20DY3XdBP7eTv49C
20AiV4RBhDN5v0eILkBORVtBt9DPv2wAAAAAAAAAAQAAAAcAAAAAAAAABwAAABEAAAAAAAAA
EQAAABIAAAAAAAAAEgAAAAgAAAAAAAAACAAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAoA
AAAAAAAACgAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAA4AAAABAAAA
DgAAABMAAAABAAAAEwAAABAAAAABAAAAEAAAAAYAAAABAAAABgAAAAcAAAACAAAACAAAAAkA
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
AAAKAAAABgAAAAEAAAAEAAAABQAAAAIAAAAGAAAACgAAAAIAAAAKAAAACwAAAAIAAAALAAAA
BwAAAAMAAAAHAAAACAAAAAMAAAAIAAAABAAAAAQAAAAIAAAACQAAAAQAAAAJAAAACwAAAAQA
AAALAAAACgAAAAQAAAAKAAAABQAAAAcAAAALAAAACAAAAAgAAAALAAAACQAAABAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8kAAAABAAAAPhDW0F6nY1BRNcuPjNw
dkF6nY1BODaEP/hDW0H+xJhBODaEP/hDW0H40bxBODaEP/Whc0EVTrZBODaEP1HXiUFfJqlB
ODaEP1HXiUF6nY1BODaEP1HXiUFoCZdBSuoCQPhDW0FZ8KxBSuoCQPhDW0H40bxBSuoCQPWh
c0EVTrZBSuoCQFHXiUFfJqlBSuoCQDwAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAgAAAAAAAAA
CAAAAAkAAAAAAAAACQAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAYA
AAAAAAAABgAAAAEAAAABAAAABgAAAAcAAAABAAAABwAAAAgAAAABAAAACAAAAAIAAAADAAAA
CQAAAAoAAAADAAAACgAAAAQAAAAEAAAACgAAAAsAAAAEAAAACwAAAAUAAAAFAAAACwAAAAcA
AAAFAAAABwAAAAYAAAAHAAAACwAAAAoAAAAHAAAACgAAAAkAAAAHAAAACQAAAAgAAAAQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JAAAAAQAAAD4Q1tBFNK8wTwu
hD/toXNBK022wTwuhD/4Q1tBFNK8wUrqAkD4Q1tBvp6NwXD8LD7914lBxyWpwTwuhD/toXNB
K022wUrqAkD4Q1tBe+6swUrqAkD4Q1tB/MWYwTwuhD8rcHZBvp6NwTwuhD/914lBvp6NwTwu
hD/914lBxyWpwUrqAkD914lBcQqXwUrqAkA8AAAAAAAAAAEAAAAFAAAAAAAAAAUAAAACAAAA
AAAAAAIAAAAGAAAAAAAAAAYAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAABAAAAAQAAAAMA
AAAEAAAAAQAAAAQAAAAKAAAAAQAAAAoAAAAFAAAAAgAAAAUAAAAKAAAAAgAAAAoAAAALAAAA
AgAAAAsAAAAGAAAAAwAAAAcAAAAIAAAAAwAAAAgAAAAJAAAAAwAAAAkAAAAEAAAABAAAAAkA
AAALAAAABAAAAAsAAAAKAAAABgAAAAsAAAAIAAAABgAAAAgAAAAHAAAACAAAAAsAAAAJAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAP9eJwb6e
jUECNIQ/I3B2wb6ejUECNIQ/P9eJwXEKl0FK6gJAP9eJwcclqUECNIQ/kEJbwb6ejUHA+Cw+
kEJbwfzFmEECNIQ/kEJbwXvurEFK6gJAP9eJwcclqUFK6gJA5qFzwStNtkECNIQ/kEJbwRTS
vEECNIQ/kEJbwRTSvEFK6gJA5qFzwStNtkFK6gJAPAAAAAAAAAABAAAAAgAAAAAAAAACAAAA
BwAAAAAAAAAHAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAEA
AAAFAAAABgAAAAEAAAAGAAAAAgAAAAIAAAAGAAAACgAAAAIAAAAKAAAACwAAAAIAAAALAAAA
BwAAAAMAAAAHAAAACwAAAAMAAAALAAAACAAAAAMAAAAIAAAABAAAAAQAAAAIAAAACQAAAAQA
AAAJAAAACgAAAAQAAAAKAAAABgAAAAQAAAAGAAAABQAAAAgAAAALAAAACgAAAAgAAAAKAAAA
CQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8nAAAABAAAAIj0
xMHQ1jxBYjaEP+hKmcHQ1jxBgLVZPoj0xMHQ1jxBSuoCQMNMtsHrnXNBYjaEP+hKmcHT+1lB
YjaEP1VNosHQ1jxBYjaEPxIPpsFhnI1BYjaEP+hKmcFhnI1BYjaEP6cRtcHQ1jxBSuoCQMNM
tsHrnXNBSuoCQOhKmcFJFodBSuoCQBIPpsFhnI1BSuoCQOhKmcFhnI1BSuoCQEIAAAAAAAAA
AQAAAAUAAAAAAAAABQAAAAgAAAAAAAAACAAAAAIAAAAAAAAAAgAAAAkAAAAAAAAACQAAAAMA
AAAAAAAAAwAAAAEAAAABAAAABAAAAAUAAAABAAAAAwAAAAYAAAABAAAABgAAAAcAAAABAAAA
BwAAAAwAAAABAAAADAAAAAoAAAABAAAACgAAAAQAAAACAAAACAAAAAoAAAACAAAACgAAAAwA
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
1b2vGJJB+NE8QYas/r1ORVtBJhsXQQ1lnb8FRHdB+NE8Qc4qMb+at11B/x4UQW5Tnb9ORVtB
/IASQVYCob/R8GNB+NG8QCAdtL9JBZpB+NG8QLZr9b6M1JBBwf/vQAN/Jr/rcaRBn6f1QGCm
6Lv0WoJB6jAuQRfmLL8RSo1B+NE8QRZXhb4btHhB+NE8QZW5Lb9HXXZBRBbMQPLYmr/dq3hB
+NG8QNOAmr+PtZRB+NG8QAm+I7+iAAAAAAAAAAEAAAAFAAAAAAAAAAUAAAALAAAAAAAAAAsA
AAAWAAAAAAAAABYAAAAMAAAAAAAAAAwAAAAGAAAAAAAAAAYAAAACAAAAAAAAAAIAAAADAAAA
AAAAAAMAAAAHAAAAAAAAAAcAAAAOAAAAAAAAAA4AAAAYAAAAAAAAABgAAAAZAAAAAAAAABkA
AAAQAAAAAAAAABAAAAAIAAAAAAAAAAgAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAFAAAA
AgAAAAYAAAAHAAAAAgAAAAcAAAADAAAABAAAAAgAAAAJAAAABAAAAAkAAAAFAAAABQAAAAoA
AAALAAAABQAAAAkAAAATAAAABQAAABMAAAAbAAAABQAAABsAAAAcAAAABQAAABwAAAAUAAAA
BQAAABQAAAAKAAAABgAAAAwAAAAHAAAABwAAAAwAAAANAAAABwAAAA0AAAAOAAAACAAAAA8A
AAASAAAACAAAABIAAAAJAAAACAAAABAAAAARAAAACAAAABEAAAAPAAAACQAAABIAAAATAAAA
CgAAABQAAAAVAAAACgAAABUAAAALAAAACwAAABUAAAANAAAACwAAAA0AAAAWAAAADAAAABYA
AAANAAAADQAAABUAAAAXAAAADQAAABcAAAAOAAAADgAAABcAAAAYAAAADwAAABEAAAASAAAA
EAAAABkAAAAXAAAAEAAAABcAAAARAAAAEQAAABMAAAASAAAAEQAAABcAAAAaAAAAEQAAABoA
AAATAAAAEwAAABoAAAAbAAAAFAAAABwAAAAVAAAAFQAAABsAAAAaAAAAFQAAABoAAAAXAAAA
FQAAABwAAAAbAAAAFwAAABkAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAP0IAAAAEAAAAj0LbQE5FW8EkSLW/j0LbQPFOcsGtTJu/6qK1QE5FW8Fc9b+/
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
AAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAJAAAAAAAAAAkAAAATAAAAAAAAABMAAAAUAAAA
AAAAABQAAAAKAAAAAAAAAAoAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAGAAAAAQAAAAYA
AAACAAAAAgAAAAYAAAAHAAAAAwAAAAgAAAAEAAAABAAAAAgAAAAJAAAABQAAAAoAAAALAAAA
BQAAAAsAAAAMAAAABQAAAAwAAAAWAAAABQAAABYAAAAYAAAABQAAABgAAAANAAAABQAAAA0A
AAAGAAAABgAAAA0AAAAOAAAABgAAAA4AAAAPAAAABgAAAA8AAAAQAAAABgAAABAAAAAHAAAA
BwAAABAAAAARAAAACAAAABIAAAAJAAAACQAAABIAAAATAAAACgAAABQAAAAVAAAACgAAABUA
AAALAAAACwAAABYAAAAMAAAACwAAABUAAAAXAAAACwAAABcAAAAYAAAACwAAABgAAAAWAAAA
DQAAABgAAAAXAAAADQAAABcAAAAOAAAADgAAABcAAAAZAAAADgAAABkAAAAaAAAADgAAABoA
AAAPAAAADwAAABoAAAAQAAAAEAAAABoAAAARAAAAEQAAABoAAAAbAAAAEgAAABwAAAATAAAA
EwAAABwAAAAdAAAAEwAAAB0AAAAVAAAAEwAAABUAAAAUAAAAFQAAAB0AAAAZAAAAFQAAABkA
AAAXAAAAGQAAAB0AAAAeAAAAGQAAAB4AAAAfAAAAGQAAAB8AAAAbAAAAGQAAABsAAAAaAAAA
HAAAACAAAAAdAAAAHQAAACAAAAAeAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPyQAAAAEAAAA63GkwRXSvEB48Ca+QcW1wRXSvEC/KoQ/63GkwQAAAAC4+sC+
63GkwU7SgkDcW5K+hLPVwRXSvEC/KoQ/+g7HwRXSvEBK6gJA4CzNwQAAAABK6gJAj0LbwQAA
AAC/KoQ/6grXwXkYq0C/KoQ/hLPVwRXSvEBK6gJAj0LbwQAAAABK6gJA6grXwXkYq0BK6gJA
PAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAACQAAAAAA
AAAJAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAABgAAAAEAAAAGAAAAAgAAAAIAAAAGAAAA
CgAAAAIAAAAKAAAABwAAAAIAAAAHAAAACAAAAAIAAAAIAAAAAwAAAAMAAAAIAAAABAAAAAQA
AAAIAAAACwAAAAQAAAALAAAACQAAAAUAAAAJAAAACwAAAAUAAAALAAAACgAAAAUAAAAKAAAA
BgAAAAcAAAAKAAAACwAAAAcAAAALAAAACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD8kAAAABAAAAI9C20EAAAAASuoCQOoK10F5GKvASuoCQI9C20EAAAAA
vyqEP+AszUEAAAAASuoCQISz1UEV0rzASuoCQOoK10F5GKvAvyqEP+txpEEAAAAAuPrAvkHF
tUEV0rzAvyqEP/oOx0EV0rzASuoCQISz1UEV0rzAvyqEP+txpEFO0oLA3FuSvutxpEEV0rzA
ePAmvjwAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAIAAAAAAAAAAgAAAAYAAAAAAAAABgAAAAMA
AAAAAAAAAwAAAAgAAAAAAAAACAAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAkAAAABAAAA
CQAAAAUAAAACAAAABQAAAAYAAAADAAAABgAAAAcAAAADAAAABwAAAAgAAAAEAAAACAAAAAcA
AAAEAAAABwAAAAsAAAAEAAAACwAAAAkAAAAFAAAACQAAAAoAAAAFAAAACgAAAAYAAAAGAAAA
CgAAAAsAAAAGAAAACwAAAAcAAAAJAAAACwAAAAoAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/LQAAAAQAAADrcaTBAAAAALj6wL5BxbXBW828wL8qhD/rcaTB
W828wPCqJ77rcaTBpXnpvyR2rL7qCtfBehirwL8qhD+PQtvBAAAAAL8qhD/gLM3BAAAAAErq
AkDunbTBFtK8wDKQWj/6DsfBW828wErqAkDrcaTBgYWhwIBmY76Es9XBW828wL8qhD/rcaTB
k82CwNxbkr7qCtfBehirwErqAkCPQtvBAAAAAErqAkCEs9XBW828wErqAkBOAAAAAAAAAAEA
AAACAAAAAAAAAAIAAAAJAAAAAAAAAAkAAAALAAAAAAAAAAsAAAADAAAAAAAAAAMAAAAEAAAA
AAAAAAQAAAAFAAAAAAAAAAUAAAANAAAAAAAAAA0AAAAGAAAAAAAAAAYAAAABAAAAAQAAAAcA
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
QcGcTAG+ubhdwYS3XcECsC+/wERbwdi4X8GsgS+/4vN/wQ7SXMFORClAxHJ2wWGcjcGeLYQ/
wERbwdDWPMFQkXO/Exl9wRj3WcEgpBxADe+TwWGcjcFW5AJAyeCBwSVJYMEsQypAxkiZwRoV
h8FW5AJAxkiZwdP7WcGeLYQ/evSBwdUZYMGq/SlAtCWAwYd6XMFORClAaG59we6hWcEgpBxA
1kmNwdDWPMH4QIW+arR4wdDWPMFyyS2/okJ3wdDWPMHmOTG/wERbwaNEW8GIGDq/t8iBwVxx
YMGq/SlA5Tl9wQ3DWcGszBxAog2Awb6iXMEGhClAogAAAAAAAAABAAAAAgAAAAAAAAACAAAA
AwAAAAAAAAADAAAADAAAAAAAAAAMAAAADwAAAAAAAAAPAAAABAAAAAAAAAAEAAAAEQAAAAAA
AAARAAAAEgAAAAAAAAASAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAABwAAAAAAAAAHAAAA
CAAAAAAAAAAIAAAAAQAAAAEAAAAJAAAAAgAAAAEAAAAIAAAACQAAAAIAAAAJAAAACgAAAAIA
AAAKAAAAGQAAAAIAAAAZAAAADQAAAAIAAAANAAAAAwAAAAMAAAALAAAADAAAAAMAAAANAAAA
DgAAAAMAAAAOAAAACwAAAAQAAAAPAAAAEAAAAAQAAAAQAAAAEQAAAAUAAAASAAAAEwAAAAUA
AAATAAAAFAAAAAUAAAAUAAAAFQAAAAUAAAAVAAAADQAAAAUAAAANAAAAGAAAAAUAAAAYAAAA
FwAAAAUAAAAXAAAAFgAAAAUAAAAWAAAABwAAAAUAAAAHAAAABgAAAAcAAAAWAAAACAAAAAgA
AAAWAAAAFwAAAAgAAAAXAAAACQAAAAkAAAAXAAAAGAAAAAkAAAAYAAAADQAAAAkAAAANAAAA
GQAAAAkAAAAZAAAACgAAAAsAAAAQAAAAGgAAAAsAAAAaAAAADAAAAAsAAAAOAAAAGwAAAAsA
AAAbAAAAHAAAAAsAAAAcAAAAEAAAAAwAAAAaAAAADwAAAA0AAAAVAAAAGwAAAA0AAAAbAAAA
DgAAAA8AAAAaAAAAEAAAABAAAAAcAAAAFAAAABAAAAAUAAAAEwAAABAAAAATAAAAEQAAABEA
AAATAAAAEgAAABQAAAAcAAAAGwAAABQAAAAbAAAAFQAAABAAAAAAAAAAAAAAAAAAAAAAAAAA
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
AAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAA
EgAAAAAAAAASAAAAEwAAAAAAAAATAAAABwAAAAAAAAAHAAAAAQAAAAEAAAAHAAAACQAAAAEA
AAAJAAAACAAAAAIAAAAKAAAACwAAAAIAAAALAAAAAwAAAAMAAAALAAAADAAAAAMAAAAMAAAA
DQAAAAMAAAANAAAABAAAAAQAAAANAAAADgAAAAQAAAAOAAAADwAAAAQAAAAPAAAABQAAAAUA
AAAPAAAABgAAAAYAAAAPAAAAEAAAAAYAAAAQAAAAHAAAAAYAAAAcAAAAHwAAAAYAAAAfAAAA
EQAAAAYAAAARAAAAEgAAAAcAAAATAAAACQAAAAgAAAAJAAAAFAAAAAgAAAAUAAAAFQAAAAkA
AAATAAAAEgAAAAkAAAASAAAAFgAAAAkAAAAWAAAAFAAAAAoAAAAXAAAAGAAAAAoAAAAYAAAA
CwAAAAsAAAAYAAAADAAAAAwAAAAYAAAAFwAAAAwAAAAXAAAAGQAAAAwAAAAZAAAAGgAAAAwA
AAAaAAAADQAAAA0AAAAaAAAAGwAAAA0AAAAbAAAADgAAAA4AAAAbAAAAHAAAAA4AAAAcAAAA
DwAAAA8AAAAcAAAAEAAAABEAAAAXAAAAHQAAABEAAAAdAAAAHgAAABEAAAAeAAAAFAAAABEA
AAAUAAAAFgAAABEAAAAWAAAAEgAAABEAAAAfAAAAIwAAABEAAAAjAAAAIAAAABEAAAAgAAAA
FwAAABQAAAAeAAAAFQAAABcAAAAgAAAAIQAAABcAAAAhAAAAIgAAABcAAAAiAAAAGQAAABkA
AAAiAAAAGgAAABoAAAAiAAAAIAAAABoAAAAgAAAAIwAAABoAAAAjAAAAGwAAABsAAAAjAAAA
HwAAABsAAAAfAAAAHAAAACAAAAAiAAAAIQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD8/AAAABAAAAAxI20AQZdNBSuoCQAxI20AQZdNBpSaEP45C20ByhKBB
YHZevgxI20DKwMRBSuoCQMrNJ0GgkMpBSuoCQMrNJ0GgkMpBpSaEPwxI20D7dLNBpSaEPyn7
BEFyhKBB8JvyvVCL/kByhKBBQQOhP1loAUFyhKBBqe22P8R7BkFyhKBB2hjcPz6GB0FyhKBB
UBLjP2W4C0FyhKBBcozrP5bmDEFyhKBB2+btP49CW0Fh8axBSuoCQI9CW0GP0LxBSuoCQI9C
W0GP0LxBpSaEP+jmBkFyhKBBAHzWvUnQEkFyhKBBtJPrP49CW0FyhKBBpSaEPwswNEFyhKBB
qmDiPnIAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAA4AAAAAAAAADgAAAA8A
AAAAAAAADwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAIAAAACAAAA
BgAAAAMAAAACAAAABQAAAAcAAAACAAAABwAAABEAAAACAAAAEQAAABQAAAACAAAAFAAAABMA
AAACAAAAEwAAABIAAAACAAAAEgAAAA0AAAACAAAADQAAAAwAAAACAAAADAAAAAsAAAACAAAA
CwAAAAoAAAACAAAACgAAAAkAAAACAAAACQAAAAgAAAACAAAACAAAAAYAAAADAAAABgAAAAkA
AAADAAAACQAAAAoAAAADAAAACgAAAAsAAAADAAAACwAAAAwAAAADAAAADAAAAA0AAAADAAAA
DQAAAA4AAAAEAAAADwAAABAAAAAEAAAAEAAAAAUAAAAFAAAAEAAAAAcAAAAGAAAACAAAAAkA
AAAHAAAAEAAAABEAAAANAAAAEgAAAA4AAAAOAAAAEgAAABMAAAAOAAAAEwAAABAAAAAOAAAA
EAAAAA8AAAAQAAAAEwAAABQAAAAQAAAAFAAAABEAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/PwAAAAQAAACOQtvAdoSgwcA3Xr6OQtvA/3SzweQihD+OQtvA
0GPTweQihD/KzSfBppDKweQihD8p+wTBdoSgwSAk8r1Qi/7AdoSgwbj+oD9ZaAHBdoSgwcvv
tj+OQtvAz8DEwUrqAkCOQtvA0GPTwUrqAkDKzSfBppDKwUrqAkCPQlvBldC8weQihD/o5gbB
doSgwQAF1r3EewbBdoSgwfsZ3D/+iAfBdoSgwUAT4z9luAvBdoSgweaF6z+W5gzBdoSgwT/g
7T+PQlvBZfGswUrqAkCPQlvBldC8wUrqAkCPQlvBdoSgweQihD8LMDTBdoSgwdp24j4J0xLB
doSgwSiN6z9yAAAAAAAAAAEAAAAHAAAAAAAAAAcAAAAIAAAAAAAAAAgAAAACAAAAAAAAAAIA
AAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAALAAAAAAAAAAsAAAATAAAAAAAAABMAAAASAAAA
AAAAABIAAAAUAAAAAAAAABQAAAAPAAAAAAAAAA8AAAAOAAAAAAAAAA4AAAANAAAAAAAAAA0A
AAAMAAAAAAAAAAwAAAAGAAAAAAAAAAYAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAGAAAA
AQAAAAYAAAAHAAAAAgAAAAgAAAAJAAAAAgAAAAkAAAADAAAAAwAAAAkAAAARAAAAAwAAABEA
AAAKAAAAAwAAAAoAAAAEAAAABAAAAAoAAAALAAAABgAAAAwAAAAHAAAABwAAAAwAAAANAAAA
BwAAAA0AAAAOAAAABwAAAA4AAAAPAAAABwAAAA8AAAAQAAAABwAAABAAAAARAAAABwAAABEA
AAAJAAAABwAAAAkAAAAIAAAACgAAABEAAAAQAAAACgAAABAAAAASAAAACgAAABIAAAATAAAA
CgAAABMAAAALAAAADwAAABQAAAAQAAAAEAAAABQAAAASAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAP40AAAAEAAAAj0JbQeaBoEFKIYQ/j0JbQR7CmEFKIYQ/
j0JbQcoYlEHSit8+bHhNQdS/mUHPJ+A+CzA0QeaBoEHAm+I+SdASQeaBoEGVj+s/FtsNQU6K
nkHQiB5AhhcOQTSFnkEQsB5A6KEMQWmDnEEsQypAmdsMQal2nEHDASpAj0JbQZBCW0FsDTq/
DxkLQZkNmkGcSilAj0JbQbRKhkFc2AW+jIlBQXDUkEF48AC+6OYGQeaBoEGo6NS9luYMQeaB
oEFd6e0/JKQNQWGBnkGeGR5AxDYMQZyNnEEnUSlAN2gMQQ+LnEHDASpAZbgLQeaBoEGVj+s/
PoYHQeaBoEHyE+M/xHsGQeaBoEGbBtw/WWgBQeaBoEH17LY/raUKQUYjmkGcSilAXt8KQYYW
mkF7hSlA0D9bQZBCW0FsDTq/qCAXQZBCW0E8ap2/j0JbQR1FW0FsDTq/j0JbQXK7X0GAhi+/
XjAuQYNbgkFk+Cy/KfsEQeaBoEGohvG96jEAQfzfn0FwHbQ/jkLbQOaBoEGsvV2+9oEKQZIy
mkGLoChAUIv+QOaBoEG2AKE/DEjbQJBCW0EEibW/HYYSQZBCW0H8/aC/8CQUQWC4XUESUJ2/
DEjbQLndd0GgtJO/ofjvQHDUkEHgbSa/jkLbQPSRnkHStoy+DEjbQFFnkkEQTiW/DEjbQKYT
XEGKnbS//D0OQZBCW0HucaO/DEjbQFxMckG0N5u/DEjbQO9WhEHQHHm/DEjbQDmwjkHklTu/
DgEAAAAAAAABAAAACgAAAAAAAAAKAAAAGwAAAAAAAAAbAAAAHAAAAAAAAAAcAAAADAAAAAAA
AAAMAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAADgAAAAAAAAAOAAAA
HgAAAAAAAAAeAAAAIAAAAAAAAAAgAAAAIgAAAAAAAAAiAAAAFgAAAAAAAAAWAAAAFQAAAAAA
AAAVAAAAFAAAAAAAAAAUAAAAEwAAAAAAAAATAAAADwAAAAAAAAAPAAAABQAAAAAAAAAFAAAA
BgAAAAAAAAAGAAAABwAAAAAAAAAHAAAACAAAAAAAAAAIAAAACQAAAAAAAAAJAAAAAQAAAAEA
AAAJAAAACwAAAAEAAAALAAAACgAAAAIAAAAMAAAAAwAAAAMAAAANAAAABAAAAAMAAAAMAAAA
DQAAAAQAAAANAAAADgAAAAUAAAAPAAAABgAAAAYAAAAQAAAAEQAAAAYAAAARAAAAEgAAAAYA
AAASAAAACAAAAAYAAAAIAAAABwAAAAYAAAAPAAAAEwAAAAYAAAATAAAAFAAAAAYAAAAUAAAA
FQAAAAYAAAAVAAAAFgAAAAYAAAAWAAAAEAAAAAgAAAASAAAAFwAAAAgAAAAXAAAAGAAAAAgA
AAAYAAAACwAAAAgAAAALAAAACQAAAAoAAAAZAAAAIwAAAAoAAAAjAAAAKwAAAAoAAAArAAAA
JAAAAAoAAAAkAAAAGgAAAAoAAAAaAAAAGwAAAAoAAAALAAAAGAAAAAoAAAAYAAAAGQAAAAwA
AAAcAAAADQAAAA0AAAAcAAAAHQAAAA0AAAAdAAAAHgAAAA0AAAAeAAAADgAAABAAAAAWAAAA
EQAAABEAAAAWAAAAHwAAABEAAAAfAAAAIAAAABEAAAAgAAAAIQAAABEAAAAhAAAAFwAAABEA
AAAXAAAAEgAAABYAAAAiAAAAHwAAABcAAAAhAAAAIwAAABcAAAAjAAAAGAAAABgAAAAjAAAA
GQAAABoAAAAkAAAAJQAAABoAAAAlAAAAHQAAABoAAAAdAAAAHAAAABoAAAAcAAAAGwAAAB0A
AAAlAAAAJgAAAB0AAAAmAAAAJwAAAB0AAAAnAAAAHgAAAB4AAAAnAAAAIAAAAB8AAAAiAAAA
IAAAACAAAAAoAAAAIwAAACAAAAAjAAAAIQAAACAAAAAnAAAAKQAAACAAAAApAAAAKAAAACMA
AAAoAAAAKgAAACMAAAAqAAAAKwAAACQAAAArAAAAJQAAACUAAAArAAAALAAAACUAAAAsAAAA
JgAAACYAAAAsAAAAKAAAACYAAAAoAAAALQAAACYAAAAtAAAAJwAAACcAAAAtAAAALgAAACcA
AAAuAAAAKQAAACgAAAApAAAALgAAACgAAAAuAAAALQAAACgAAAAsAAAAKgAAACoAAAAsAAAA
KwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD+BAAAABAAAAI5C
28CoR1vBBIm1v17fCsGHFprBe4UpQK2lCsFHI5rBnEopQLaECsGUMprBi6AoQI5C28Aug6DB
rL1dvo5C28BbTHLBtDebv/w9DsGoR1vB7nGjv49CW8GoR1vBbA06vw8ZC8GbDZrBnEopQOih
DMFrg5zBLEMqQDdoDMERi5zBwwEqQMQ2DMGejZzBJ1EpQCD+78By1JDB4G0mv45C28BSZ5LB
EE4lv+oxAMH+35/BcB20P1CL/sAug6DBtgChPyn7BMEug6DBqIbxvY5C28C53XfBoLSTv/Ak
FMFeuF3BElCdvx2GEsGoR1vB/P2gv6ggF8GoR1vBPGqdv49CW8Fwu1/BgIYvv49CW8EgwpjB
SiGEP5nbDMGrdpzBwwEqQI9CW8Eug6DBSiGEP4YXDsE2hZ7BELAeQBbbDcFQip7B0IgeQFlo
AcEug6DB9ey2PySkDcFjgZ7BnhkeQI5C28DvVoTB0Bx5v4tN28A6sI7B5JU7v14wLsGEW4LB
ZPgsv+jmBsEug6DBqOjUvYyJQcFy1JDBePAAvo9CW8G0SobBXNgFvo9CW8HLGJTB0orfPmx4
TcHWv5nBzyfgPgswNMEug6DBwJviPgnTEsEug6DBlY/rP5bmDMEug6DBXentP2W4C8Eug6DB
lY/rP/6IB8Eug6DB8hPjP8R7BsEug6DBmwbcP/YAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMA
AAAAAAAAAwAAAAQAAAAAAAAABAAAAA0AAAAAAAAADQAAAB0AAAAAAAAAHQAAABEAAAAAAAAA
EQAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAAABMAAAAAAAAAEwAAABQAAAAAAAAAFAAAAAcA
AAAAAAAABwAAAAEAAAABAAAABwAAAAgAAAABAAAACAAAAAkAAAABAAAACQAAAAIAAAACAAAA
CQAAAAoAAAACAAAACgAAAAsAAAACAAAACwAAAAMAAAADAAAACwAAAAQAAAAEAAAADAAAAA0A
AAAEAAAACwAAAA4AAAAEAAAADgAAAA8AAAAEAAAADwAAABsAAAAEAAAAGwAAACoAAAAEAAAA
KgAAACkAAAAEAAAAKQAAACgAAAAEAAAAKAAAACcAAAAEAAAAJwAAACYAAAAEAAAAJgAAABgA
AAAEAAAAGAAAACUAAAAEAAAAJQAAACAAAAAEAAAAIAAAABAAAAAEAAAAEAAAAAwAAAAFAAAA
EQAAABIAAAAFAAAAEgAAAAYAAAAGAAAAEgAAABMAAAAHAAAAFAAAABUAAAAHAAAAFQAAACIA
AAAHAAAAIgAAACMAAAAHAAAAIwAAABgAAAAHAAAAGAAAABYAAAAHAAAAFgAAAAgAAAAIAAAA
FgAAABcAAAAIAAAAFwAAAAkAAAAJAAAAFwAAABgAAAAJAAAAGAAAABkAAAAJAAAAGQAAABoA
AAAJAAAAGgAAAAoAAAAKAAAAGgAAAAsAAAALAAAAGwAAAA4AAAALAAAAGgAAABwAAAALAAAA
HAAAABsAAAAMAAAAEQAAAB0AAAAMAAAAHQAAAB4AAAAMAAAAHgAAAA0AAAAMAAAAEAAAAB8A
AAAMAAAAHwAAABEAAAANAAAAHgAAAB0AAAAOAAAAGwAAAA8AAAAQAAAAIAAAACEAAAAQAAAA
IQAAAB8AAAARAAAAHwAAABIAAAASAAAAFAAAABMAAAASAAAAHwAAABQAAAAUAAAAHwAAABUA
AAAVAAAAHwAAACEAAAAVAAAAIQAAACIAAAAWAAAAGAAAABcAAAAYAAAAIwAAACQAAAAYAAAA
JAAAACUAAAAYAAAAJgAAABoAAAAYAAAAGgAAABkAAAAaAAAAJwAAACgAAAAaAAAAKAAAACkA
AAAaAAAAKQAAACoAAAAaAAAAKgAAABsAAAAaAAAAGwAAABwAAAAaAAAAJgAAACcAAAAgAAAA
JQAAACEAAAAhAAAAJQAAACQAAAAhAAAAJAAAACIAAAAiAAAAJAAAACMAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/hwAAAAQAAACPQltBqEdbwZoNOr+PQltB
YMKYwVAthD+PQltBdrtfwfKHL7+oIBdBqEdbwaVvnb+OQttAqEdbwSRKtb/Bf+9AYAyewZKF
KUCk7e9ALgKewbpKKUCPQltB7oCgwVAthD8ASfRATlSgwcsBKkCe1fNAm2OgwSxDKkCPQltB
2UqGwZgiBr6MiUFBptSQweijAb5eMC5BXFqCwSb6LL/wJBRBYrhdwX9Vnb8dhhJBqEdbwfgC
ob+OQttAsr1xwXH0m7+OQttADy6gwRiZoT/QdutARGGcwc89HEDEoutAxUecwfSsHEAoC+xA
pTScwaXNHEDeEe9ArRuewbpKKUCQDPRA7oCgwRyMKUCQDPRAe4OgwaIGqj8LMDRB7oCgwZiH
4j5seE1BGMCZwaTf3z6PQltBvxeUwbpC3z67Z/NAzm2gwcsBKkCyiPNA7oCgwRyMKUCPQltB
qm+Pwfz4eT5AOSJB7oCgwbhFYj7o5gZB7oCgwehU1r2s5AVB7oCgwdAK5b0g/u9AptSQwZKK
Jr+OQttAEVeEwYwveb+OQttAfkxywXRKm7+OQttA7oCgwbCroj/vz+5AQCyewb2gKEBUCvNA
oXGgwURRKUAp+wRB7oCgwUAe8r00g/NA7oCgwZKFKUDMJfNA7oCgwTLvKECOQttA7oCgwSQ3
X77yfN9A7oCgwcQ5Vr6OQttAmgKWwYyhCb+OQttAQ2aSweZqJb8CAQAAAAAAAAEAAAAHAAAA
AAAAAAcAAAAZAAAAAAAAABkAAAAcAAAAAAAAABwAAAAKAAAAAAAAAAoAAAACAAAAAAAAAAIA
AAADAAAAAAAAAAMAAAAOAAAAAAAAAA4AAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAGAAAA
AAAAAAYAAAABAAAAAQAAAAYAAAAIAAAAAQAAAAgAAAAJAAAAAQAAAAkAAAAHAAAAAgAAAAoA
AAALAAAAAgAAAAsAAAAMAAAAAgAAAAwAAAADAAAAAwAAAA0AAAAOAAAAAwAAAAwAAAANAAAA
BAAAAA8AAAAiAAAABAAAACIAAAAhAAAABAAAACEAAAAsAAAABAAAACwAAAArAAAABAAAACsA
AAApAAAABAAAACkAAAAjAAAABAAAACMAAAAQAAAABAAAABAAAAARAAAABAAAABEAAAASAAAA
BAAAABIAAAATAAAABAAAABMAAAAFAAAABAAAAA4AAAAPAAAABQAAABMAAAASAAAABQAAABIA
AAAUAAAABQAAABQAAAAJAAAABQAAAAkAAAAIAAAABQAAAAgAAAAGAAAABwAAAAkAAAAVAAAA
BwAAABUAAAAWAAAABwAAABYAAAAXAAAABwAAABcAAAAYAAAABwAAABgAAAAZAAAACQAAABQA
AAAaAAAACQAAABoAAAAbAAAACQAAABsAAAAVAAAACgAAABwAAAAYAAAACgAAABgAAAALAAAA
CwAAABgAAAAdAAAACwAAAB0AAAAeAAAACwAAAB4AAAAMAAAADAAAAB4AAAAfAAAADAAAAB8A
AAAgAAAADAAAACAAAAAhAAAADAAAACEAAAAiAAAADAAAACIAAAANAAAADQAAACIAAAAPAAAA
DQAAAA8AAAAOAAAAEAAAACMAAAARAAAAEQAAACMAAAAkAAAAEQAAACQAAAASAAAAEgAAACQA
AAAUAAAAFAAAACQAAAAlAAAAFAAAACUAAAAaAAAAFQAAABsAAAAWAAAAFgAAACYAAAAfAAAA
FgAAAB8AAAAeAAAAFgAAAB4AAAAdAAAAFgAAAB0AAAAXAAAAFgAAABsAAAAnAAAAFgAAACcA
AAAoAAAAFgAAACgAAAAjAAAAFgAAACMAAAApAAAAFgAAACkAAAAqAAAAFgAAACoAAAAmAAAA
FwAAAB0AAAAYAAAAGAAAABwAAAAZAAAAGgAAACUAAAAnAAAAGgAAACcAAAAbAAAAHwAAACYA
AAAgAAAAIAAAACsAAAAsAAAAIAAAACwAAAAhAAAAIAAAACYAAAArAAAAIwAAACgAAAAlAAAA
IwAAACUAAAAkAAAAJQAAACgAAAAnAAAAJgAAACoAAAArAAAAKQAAACsAAAAqAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP4cAAAAEAAAA8ELbwMCBoEGSp6I/
8ELbwNR4oEFsjaI/8ELbwMCBoEFQC1++uiDzwMCBoEFC7yhAQQXzwC1xoEHGSilA28ruwM8r
nkFImihAunHrwBxinEGDPhxA8ELbwOEuoEEaoqE/8ELbwDQClkF4kgm/Vn3fwMCBoEFkDla+
qWLzwFptoEFE+ylAoIPzwMCBoEGbhSlAygzvwDwbnkE9RClALaPrwFZHnEEapxxA8ELbwLtE
W0HwPLW/8ELbwChnkkFqWiW/i/7vwEfUkEEIeia/ZPsEwcCBoEHo0PG9C9bzwCdjoEGiPCpA
/Az0wMCBoEGbhSlArXrvwPALnkERfylAkgvswDc0nEHIxxxA8ELbwDS9cUGD6Ju/MUBbwbtE
W0EW/Dm/XoYSwbtEW0HI9qC/8ELbwMNWhEHaGnm/qzAuwVdbgkFK6Sy/p+cFwcCBoEEYvuS9
MUBbwcCBoEG6KoQ/MUBbwffBmEG6KoQ/7kP0wNpToEFE+ylAD+7vwL0BnkE9RClA8EJbwbtE
W0EW/Dm/8ELbwIxOckGPPpu/MiUUwf63XUF/SZ2/6yAXwbtEW0GkY52/MUBbwRG7X0H2di+/
oYxBwUfUkEHIfAG+JOcGwcCBoEHwCNa9WzA0wcCBoEF6jOI+x3hNway/mUGo5N8+MUBbwaIY
lEHGR98+MUBbwZNwj0H6DHo+MUBbwYhKhkFA+wW+iDkiwcCBoEHoWmI+AgEAAAAAAAABAAAA
BwAAAAAAAAAHAAAADgAAAAAAAAAOAAAAFgAAAAAAAAAWAAAAIQAAAAAAAAAhAAAAGQAAAAAA
AAAZAAAADwAAAAAAAAAPAAAACAAAAAAAAAAIAAAAAgAAAAAAAAACAAAACQAAAAAAAAAJAAAA
EQAAAAAAAAARAAAAGwAAAAAAAAAbAAAAJgAAAAAAAAAmAAAALAAAAAAAAAAsAAAAJwAAAAAA
AAAnAAAAHAAAAAAAAAAcAAAAEwAAAAAAAAATAAAACwAAAAAAAAALAAAAAwAAAAAAAAADAAAA
BAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAAAQAAAAEAAAAGAAAABwAAAAIA
AAAIAAAACQAAAAMAAAAKAAAABAAAAAMAAAALAAAACgAAAAQAAAAKAAAADAAAAAQAAAAMAAAA
BQAAAAUAAAAMAAAABgAAAAYAAAAMAAAADQAAAAYAAAANAAAADgAAAAYAAAAOAAAABwAAAAgA
AAAPAAAAEAAAAAgAAAAQAAAAEQAAAAgAAAARAAAACQAAAAoAAAALAAAAEgAAAAoAAAASAAAA
DAAAAAsAAAATAAAAEgAAAAwAAAASAAAAFAAAAAwAAAAUAAAADQAAAA0AAAAUAAAAFQAAAA0A
AAAVAAAADgAAAA4AAAAVAAAAFAAAAA4AAAAUAAAAFwAAAA4AAAAXAAAAIAAAAA4AAAAgAAAA
IwAAAA4AAAAjAAAAGAAAAA4AAAAYAAAAFgAAAA8AAAAZAAAAEAAAABAAAAAZAAAAGgAAABAA
AAAaAAAAGwAAABAAAAAbAAAAEQAAABIAAAATAAAAHAAAABIAAAAcAAAAHQAAABIAAAAdAAAA
HgAAABIAAAAeAAAAHwAAABIAAAAfAAAAFAAAABQAAAAfAAAAIAAAABQAAAAgAAAAFwAAABYA
AAAYAAAAIgAAABYAAAAiAAAAIQAAABgAAAAjAAAAIgAAABkAAAAhAAAAGgAAABoAAAAiAAAA
IwAAABoAAAAjAAAAJAAAABoAAAAkAAAAJQAAABoAAAAlAAAAGwAAABoAAAAhAAAAIgAAABsA
AAAlAAAAJgAAABwAAAAnAAAAKAAAABwAAAAoAAAAKQAAABwAAAApAAAAIAAAABwAAAAgAAAA
HQAAAB0AAAAgAAAAHwAAAB0AAAAfAAAAHgAAACAAAAApAAAAKgAAACAAAAAqAAAAKwAAACAA
AAArAAAAJAAAACAAAAAkAAAAIwAAACQAAAArAAAAJQAAACUAAAArAAAAKAAAACUAAAAoAAAA
LAAAACUAAAAsAAAAJgAAACcAAAAsAAAAKAAAACgAAAArAAAAKgAAACgAAAAqAAAAKQAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8qAAAABAAAAAAAAACPQtvB
vyqEPy0Zq0DqCtfBvyqEPwAAAACPQtvBSuoCQAAAAADrcaTBuPrAvtSC6T/rcaTBJHasvjvQ
gkDrcaTB3FuSvo9C20B/Y9PBvyqEPy0Zq0DqCtfBSuoCQAAAAADgLM3BSuoCQI9C20DrcaTB
25aoP6+GoUDrcaTBgGZjvo9C20B/Y9PBSuoCQI9C20DrcaTBKE3JvY9C20BUwMTBSuoCQEgA
AAAAAAAAAQAAAAcAAAAAAAAABwAAAAIAAAAAAAAAAgAAAAgAAAAAAAAACAAAAAMAAAAAAAAA
AwAAAAEAAAABAAAAAwAAAAQAAAABAAAABAAAAAUAAAABAAAABQAAAAYAAAABAAAABgAAAAsA
AAABAAAACwAAAAcAAAACAAAABwAAAAsAAAACAAAACwAAAA0AAAACAAAADQAAAAgAAAADAAAA
CQAAAAwAAAADAAAADAAAAAoAAAADAAAACgAAAAUAAAADAAAABQAAAAQAAAADAAAACAAAAAkA
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
AAAAAAsAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAANAAAAAAAAAA0AAAAPAAAAAAAAAA8A
AAAGAAAAAAAAAAYAAAABAAAAAQAAAAYAAAAHAAAAAQAAAAcAAAACAAAAAgAAAAcAAAAIAAAA
AgAAAAgAAAAJAAAAAgAAAAkAAAADAAAAAwAAAAkAAAAKAAAABAAAAAsAAAAFAAAABQAAAAwA
AAANAAAABQAAAAsAAAAOAAAABQAAAA4AAAAeAAAABQAAAB4AAAAtAAAABQAAAC0AAAAbAAAA
BQAAABsAAAAMAAAABgAAAA8AAAAQAAAABgAAABAAAAAHAAAABwAAABEAAAASAAAABwAAABIA
AAAIAAAABwAAABAAAAARAAAACAAAABIAAAATAAAACAAAABMAAAAUAAAACAAAABQAAAAJAAAA
CQAAABQAAAAVAAAACQAAABUAAAAWAAAACQAAABYAAAAKAAAACgAAABYAAAAXAAAACwAAABgA
AAAZAAAACwAAABkAAAAsAAAACwAAACwAAAAuAAAACwAAAC4AAAAcAAAACwAAABwAAAAOAAAA
DAAAABoAAAANAAAADAAAABsAAAAaAAAADQAAABoAAAAPAAAADgAAABwAAAAdAAAADgAAAB0A
AAAeAAAADwAAABoAAAAQAAAAEAAAABoAAAAfAAAAEAAAAB8AAAARAAAAEQAAAB8AAAAgAAAA
EQAAACAAAAAhAAAAEQAAACEAAAASAAAAEgAAACEAAAAiAAAAEgAAACIAAAATAAAAEwAAACIA
AAAjAAAAEwAAACMAAAAkAAAAEwAAACQAAAAUAAAAFAAAACQAAAAlAAAAFAAAACUAAAAVAAAA
FQAAACUAAAAmAAAAFQAAACYAAAAnAAAAFQAAACcAAAAWAAAAFgAAACcAAAAoAAAAFgAAACgA
AAApAAAAFgAAACkAAAAqAAAAFgAAACoAAAAXAAAAGAAAACsAAAAZAAAAGQAAACsAAAAoAAAA
GQAAACgAAAAsAAAAGgAAABsAAAAfAAAAGwAAAC0AAAAfAAAAHAAAAC4AAAAdAAAAHQAAAC4A
AAAmAAAAHQAAACYAAAAkAAAAHQAAACQAAAAjAAAAHQAAACMAAAAiAAAAHQAAACIAAAAgAAAA
HQAAACAAAAAtAAAAHQAAAC0AAAAeAAAAHwAAAC0AAAAgAAAAIAAAACIAAAAhAAAAJAAAACYA
AAAlAAAAJgAAAC4AAAAnAAAAJwAAAC4AAAAsAAAAJwAAACwAAAAoAAAAKAAAACsAAAApAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP4oAAAAEAAAAAAAAAAAA
AAATQCrAAAAAAI9CW8GCxdS/AAAAAJA1374TQCrA+ChSv/goUr8tQyrAQKyIvgAAAAATQCrA
j0JbwQAAAACCxdS/GD8cv49CW8GotNO/AAAAAJ5+UcEbXuG/j0JbwY9CW8HlHjq/AAAAALYo
ksDGNirAMFxkv3RTj8DgOSrAdG0iwFUKc8ATQCrA2LlOwNi5TsAtQyrAVQpzwHRtIsATQCrA
dFOPwDBcZL/gOSrAtiiSwAAAAADGNirAnn5RwQAAAAAbXuG/j0JbwUiILsCt2s+/SIguwI9C
W8Gt2s+/AAAAALNKEMEjLBLAKIsjwKx1TcFU4OG/j0JbwekdF8FLeJ2/nIY8wZyGPMFXcJ6/
6R0XwY9CW8FLeJ2//EThv26ADcHXQRLAZLnfv5wVh8DgOSrAHPpcwJRNBcFAbRLA/V2gwCbo
78ComBLAhxvMwIcbzMApqBLAnBWHwGS537/gOSrAJujvwP1doMComBLAlE0FwRz6XMBAbRLA
boANwfxE4b/XQRLAs0oQwQAAAAAjLBLArHVNwSiLI8BU4OG/j0JbwWmotcAgA8C/iwt2wI9C
W8HM98m//V2gwEuMQcHKIuO/j0JbwSB7EsEQDqG/XjAuwQe96MAMX+S/MSIUwTEiFMF55+S/
B73owF4wLsEMX+S/IHsSwY9CW8EQDqG/S4xBwf1doMDKIuO/aai1wI9CW8EgA8C/QDAOwY9C
W8H6c6O/CAEAAAAAAAABAAAABwAAAAAAAAAHAAAAEwAAAAAAAAATAAAACQAAAAAAAAAJAAAA
AgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAADwAAAAAAAAAPAAAAIQAAAAAA
AAAhAAAAEAAAAAAAAAAQAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAGAAAABwAAAAEAAAAFAAAA
CAAAAAEAAAAIAAAAFwAAAAEAAAAXAAAAKgAAAAEAAAAqAAAALQAAAAEAAAAtAAAALAAAAAEA
AAAsAAAAJAAAAAEAAAAkAAAAEgAAAAEAAAASAAAABgAAAAIAAAAJAAAAAwAAAAMAAAAJAAAA
CgAAAAMAAAAKAAAACwAAAAMAAAALAAAADAAAAAMAAAAMAAAADQAAAAMAAAANAAAADgAAAAMA
AAAOAAAADwAAAAMAAAAPAAAABAAAAAUAAAAQAAAAEQAAAAUAAAARAAAAIwAAAAUAAAAjAAAA
JgAAAAUAAAAmAAAAFQAAAAUAAAAVAAAACAAAAAYAAAASAAAABwAAAAcAAAASAAAAFAAAAAcA
AAAUAAAAEwAAAAgAAAAVAAAAFgAAAAgAAAAWAAAAFwAAAAkAAAATAAAAGAAAAAkAAAAYAAAA
CgAAAAoAAAAZAAAACwAAAAoAAAAYAAAAGgAAAAoAAAAaAAAAGQAAAAsAAAAbAAAAHAAAAAsA
AAAcAAAADAAAAAsAAAAZAAAAGwAAAAwAAAAcAAAADQAAAA0AAAAdAAAADgAAAA0AAAAcAAAA
HgAAAA0AAAAeAAAAHQAAAA4AAAAdAAAAHwAAAA4AAAAfAAAAIAAAAA4AAAAgAAAADwAAAA8A
AAAgAAAAIQAAABAAAAAiAAAAEQAAABAAAAAhAAAAIgAAABEAAAAiAAAAIwAAABIAAAAkAAAA
FAAAABMAAAAUAAAAGAAAABQAAAAkAAAAJQAAABQAAAAlAAAAGAAAABUAAAAmAAAAJwAAABUA
AAAnAAAAFgAAABYAAAAnAAAAKAAAABYAAAAoAAAAKQAAABYAAAApAAAAFwAAABcAAAApAAAA
KgAAABgAAAAlAAAAGgAAABkAAAAaAAAAGwAAABoAAAAlAAAAKQAAABoAAAApAAAAGwAAABsA
AAApAAAAKAAAABsAAAAoAAAAHAAAABwAAAAoAAAAHgAAAB0AAAAeAAAAHwAAAB4AAAAoAAAA
JwAAAB4AAAAnAAAAHwAAAB8AAAAnAAAAKwAAAB8AAAArAAAAIAAAACAAAAArAAAAIgAAACAA
AAAiAAAAIQAAACIAAAArAAAAIwAAACMAAAArAAAAJgAAACQAAAAsAAAAJQAAACUAAAAsAAAA
LQAAACUAAAAtAAAAKgAAACUAAAAqAAAAKQAAACYAAAArAAAAJwAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD+KAAAABAAAAAAAAACPQltBS8XUvwAAAAAAAAAA
E0AqwAAAAACeflFBTV3hv5SILsCPQltBsdrPv3I9W8GPQltBsCk6v3I9W8EAAAAAS8XUv3Cs
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</SharedString>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
		<SharedString md5="4alqyfbNPzvjWvssHUVMhw==">Q1NHUEhTBgAAAL7IAD0AAAAAAAAAAAAAAAB8ENc5AAAAAAAAAACJ9q48AAAAAKO3qzwQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/GAAAAAQAAADNZ3Y/GlNBvPMV
Fz4qZ4Y/L75jPFVJBz7NZ3Y/Ob5jPPEVFz7NZ3Y/FVNBvJqb3DzNZ3Y/Ur5jPJab3DwqZ4Y/
Q75jPJqb3DwqZ4Y/A1NBvJab3DwqZ4Y/CVNBvFZJBz4kAAAAAAAAAAEAAAACAAAAAgAAAAMA
AAAAAAAABAAAAAIAAAABAAAABAAAAAMAAAACAAAABQAAAAMAAAAEAAAABQAAAAQAAAABAAAA
BgAAAAMAAAAFAAAABgAAAAUAAAABAAAABgAAAAAAAAADAAAABwAAAAEAAAAAAAAABwAAAAAA
AAAGAAAABwAAAAYAAAABAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPyQAAAAEAAAARgFgPypTQbyP4iY+zWd2Pzi+YzzxFRc+RgFgP0O+YzyO4iY+RgFgPyVT
Qbycm9w8RgFgP16+Yzycm9w8zWd2P1G+YzyYm9w8zWd2PxRTQbycm9w8zWd2PxpTQbzzFRc+
RgFgPz/ee7yv/809IcJiP1neezx6r8k90PNlPzree7y+sL09RgFgPz7ee7wDgac9PAAAAAAA
AAABAAAAAgAAAAIAAAADAAAAAAAAAAQAAAADAAAAAgAAAAUAAAADAAAABAAAAAYAAAADAAAA
BQAAAAYAAAAFAAAAAQAAAAcAAAABAAAAAAAAAAcAAAAGAAAAAQAAAAgAAAAHAAAAAAAAAAgA
AAAAAAAAAwAAAAkAAAABAAAABQAAAAkAAAAFAAAABAAAAAkAAAACAAAAAQAAAAkAAAAEAAAA
AgAAAAoAAAAGAAAABwAAAAoAAAAHAAAACAAAAAsAAAAIAAAAAwAAAAsAAAAKAAAACAAAAAsA
AAADAAAABgAAAAsAAAAGAAAACgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8hAAAABAAAADg0M7/jaHq8YD09PTg0M78pbD689fCjvTg0M78vT3o8YD09Pb+a
Sb9Einq8YD09Pb+aSb+/Ym88YD09Pb+aSb85bD68fnepvb+aSb/S2WA8sFWkvTg0M7/N2WA8
iYKevTg0M7+8kHq8SyROPDg0M7999nc83vNsPL+aSb+iY288jOxYPDYAAAAAAAAAAQAAAAIA
AAAAAAAAAgAAAAMAAAAEAAAABQAAAAMAAAAEAAAAAwAAAAIAAAAGAAAABQAAAAQAAAAGAAAA
AQAAAAUAAAAHAAAAAgAAAAEAAAAHAAAAAQAAAAYAAAAIAAAABQAAAAEAAAAIAAAAAQAAAAAA
AAAIAAAAAwAAAAUAAAAIAAAAAAAAAAMAAAAJAAAAAgAAAAcAAAAJAAAABwAAAAYAAAAKAAAA
BgAAAAQAAAAKAAAACQAAAAYAAAAKAAAABAAAAAIAAAAKAAAAAgAAAAkAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQAAACxzRy/Hk96PDEJUj2xzRy/
GGw+vP8lnr2xzRy/v016vDEJUj0qZwa/EE96PDEJUj0qZwa/r016vDEJUj0qZwa/CGw+vNpS
mL2xzRy/xNlgPGGvmL0qZwa/vNlgPLL0kr0qZwa/qE16vFNPczyxzRy/tU16vLRPczwwAAAA
AAAAAAEAAAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAADAAAABAAAAAMAAAACAAAABgAAAAEA
AAAAAAAABgAAAAAAAAADAAAABwAAAAUAAAABAAAABwAAAAEAAAAGAAAABwAAAAMAAAAFAAAA
BwAAAAYAAAADAAAACAAAAAEAAAAFAAAACAAAAAUAAAAEAAAACAAAAAQAAAACAAAACQAAAAIA
AAABAAAACQAAAAEAAAAIAAAACQAAAAgAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAPx4AAAAEAAAAzWd2v/TDajwYeRc9zWd2v1psPrzI9sm9zWd2vyWP
erwYeRc9RgFgv33EajwYeRc9RgFgv46OerwYeRc9RgFgv0tsPrzkvLi9zWd2v/jZYDzdXsS9
RgFgv9XZYDyk0LK9RgFgvzqPerxOJE48zWd2v9KPerxMJE48MAAAAAAAAAABAAAAAgAAAAAA
AAACAAAAAwAAAAQAAAAFAAAAAwAAAAQAAAADAAAAAgAAAAYAAAABAAAAAAAAAAYAAAAAAAAA
AwAAAAYAAAAFAAAAAQAAAAcAAAADAAAABQAAAAcAAAAFAAAABgAAAAcAAAAGAAAAAwAAAAgA
AAABAAAABQAAAAgAAAAFAAAABAAAAAgAAAAEAAAAAgAAAAkAAAACAAAAAQAAAAkAAAABAAAA
CAAAAAkAAAAIAAAAAgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD8hAAAABAAAAEYBYD9bvmM8TnffvUYBYD8eU0G8SHffvb+aST8uU0G84iTvvUYBYD9evmM8
1U3uPMjLWj8pU0G81U3uPL+aST960PY7003uPL+aST9RvmM85CTvvb+aST80U0G8wwJnPEYB
YD8lU0G81U3uPL+aST+pn8u7003uPL+aST9wvmM8uwJnPDYAAAAAAAAAAQAAAAIAAAABAAAA
AAAAAAMAAAAEAAAAAgAAAAEAAAAFAAAABAAAAAMAAAAGAAAAAAAAAAIAAAAGAAAAAgAAAAUA
AAAGAAAAAwAAAAAAAAAHAAAAAgAAAAQAAAAHAAAABQAAAAIAAAAIAAAAAQAAAAMAAAAIAAAA
AwAAAAQAAAAIAAAABAAAAAEAAAAJAAAABAAAAAUAAAAJAAAABQAAAAcAAAAJAAAABwAAAAQA
AAAKAAAABQAAAAMAAAAKAAAAAwAAAAYAAAAKAAAABgAAAAUAAAAQAAAAAAAAAAAAAAAAAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JAAAAAQAAAA4NLO+cat6PDGkQT0qZ4a+f016vDGk
QT0qZ4a+tQV7PDGkQT0qZ4a+12s+vMIcqL04NLO+rdlgPNdWnb04NLO+jE16vJhOczw4NLO+
5ms+vIVJor0qZ4a+pNlgPBoqo704NLO+j016vDGkQT0qZ4a+fk16vNWNIjwqZ4a+A096PMgi
OTw4NLO+EE96PMhqcjw8AAAAAAAAAAEAAAACAAAAAwAAAAIAAAABAAAABAAAAAUAAAAAAAAA
BgAAAAUAAAAEAAAABgAAAAQAAAADAAAABwAAAAIAAAADAAAABwAAAAMAAAAEAAAACAAAAAEA
AAAAAAAACAAAAAAAAAAFAAAACAAAAAUAAAABAAAACQAAAAUAAAAGAAAACQAAAAYAAAADAAAA
CQAAAAMAAAABAAAACQAAAAEAAAAFAAAACgAAAAcAAAAEAAAACgAAAAIAAAAHAAAACwAAAAAA
AAACAAAACwAAAAIAAAAKAAAACwAAAAQAAAAAAAAACwAAAAoAAAAEAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyEAAAAEAAAAODQzvytPejwyCVI9ODQzvyhs
Prz38KO9ODQzv6VgerwyCVI9sc0cvx5PejwyCVI9sc0cv79NerwyCVI9sc0cvxlsPrwBJp69
ODQzv83ZYDyKgp69sc0cv8XZYDxkr5i9ODQzv7yQerxNJE48sc0cv7VNery0T3M8ODQzv3z2
dzze82w8NgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAQAAAAFAAAAAwAAAAQAAAADAAAA
AgAAAAYAAAABAAAAAAAAAAYAAAAFAAAAAQAAAAcAAAADAAAABQAAAAcAAAAFAAAABgAAAAgA
AAACAAAAAQAAAAgAAAAEAAAAAgAAAAkAAAAFAAAABAAAAAkAAAAEAAAACAAAAAkAAAABAAAA
BQAAAAkAAAAIAAAAAQAAAAoAAAADAAAABwAAAAoAAAAHAAAABgAAAAoAAAAAAAAAAwAAAAoA
AAAGAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAA
BAAAAEYBYL9AxGo8Xj09PUYBYL9JbD685Ly4vUYBYL+Ejnq8Xj09Pb+aSb/CYm88Xj09Pb+a
Sb9Finq8Xj09Pb+aSb85bD68fnepvUYBYL/U2WA8pNCyvb+aSb/T2WA8rlWkvb+aSb9gj3q8
TCROPEYBYL85j3q8TSROPL+aSb+jY288iuxYPDYAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMA
AAAEAAAABQAAAAMAAAAEAAAAAwAAAAIAAAAGAAAAAQAAAAAAAAAHAAAABQAAAAEAAAAHAAAA
AQAAAAYAAAAHAAAAAwAAAAUAAAAIAAAAAQAAAAUAAAAIAAAABQAAAAQAAAAIAAAABAAAAAIA
AAAJAAAAAgAAAAEAAAAJAAAAAQAAAAgAAAAJAAAACAAAAAIAAAAKAAAAAwAAAAcAAAAKAAAA
BwAAAAYAAAAKAAAAAAAAAAMAAAAKAAAABgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/JAAAAAQAAAArZ4a+fU16vC6kQT05NDO+eU16vC6kQT08NDO+
4/p6PC6kQT05NDO+xWs+vMhVtL0rZ4a+swV7PC6kQT0rZ4a+pdlgPBYqo70rZ4a+1Ws+vMIc
qL05NDO+rK9hPDM/r70rZ4a+fE16vNWNIjw5NDO+ak16vFyOFTw8NDO+8056PGdPKjwrZ4a+
PzB7PO5xDD08AAAAAAAAAAEAAAACAAAAAwAAAAIAAAABAAAABAAAAAAAAAACAAAABAAAAAUA
AAAAAAAABgAAAAAAAAAFAAAABgAAAAUAAAADAAAABwAAAAIAAAADAAAABwAAAAMAAAAFAAAA
CAAAAAAAAAAGAAAACAAAAAYAAAADAAAACAAAAAEAAAAAAAAACQAAAAMAAAABAAAACQAAAAEA
AAAIAAAACQAAAAgAAAADAAAACgAAAAIAAAAHAAAACgAAAAcAAAAFAAAACwAAAAUAAAAEAAAA
CwAAAAoAAAAFAAAACwAAAAQAAAACAAAACwAAAAIAAAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPx4AAAAEAAAAKmeGv2jDajwYeRc9KmeGv2lsPrxFgd69
KmeGv7yPerwYeRc9zWd2v/LDajwYeRc9zWd2vyWPerwYeRc9zWd2v1lsPrzJ9sm9KmeGv+LZ
YDwkati9zWd2v/fZYDzdXsS9zWd2v9GPerxNJE48KmeGv2WQerxMJE48MAAAAAAAAAABAAAA
AgAAAAAAAAACAAAAAwAAAAQAAAAFAAAAAwAAAAQAAAADAAAAAgAAAAYAAAABAAAAAAAAAAYA
AAAAAAAAAwAAAAcAAAAFAAAAAQAAAAcAAAABAAAABgAAAAcAAAADAAAABQAAAAcAAAAGAAAA
AwAAAAgAAAABAAAABQAAAAgAAAAFAAAABAAAAAgAAAAEAAAAAgAAAAkAAAACAAAAAQAAAAkA
AAABAAAACAAAAAkAAAAIAAAAAgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8kAAAABAAAAEYB4L78Tno8jrBTPUYB4L6cTXq8jrBTPSpnBr+uTXq8jrBTPUYB
4L6y2WA8A/06PipnBr92dz68tPw6PipnBr/7Tno8RuUYPipnBr8OT3o8jrBTPUYB4L4GKz+8
wvw6PipnBr+72WA8Cf06PipnBr+1TXq8jPMYPkYB4L6jTXq8hvMYPkYB4L56yHU8NOUYPjwA
AAAAAAAAAQAAAAIAAAABAAAAAAAAAAMAAAAEAAAABQAAAAIAAAAGAAAAAAAAAAIAAAAGAAAA
AgAAAAUAAAAGAAAABQAAAAAAAAAHAAAAAQAAAAMAAAAHAAAAAwAAAAQAAAAIAAAAAwAAAAUA
AAAIAAAABQAAAAQAAAAIAAAABAAAAAMAAAAJAAAABAAAAAIAAAAJAAAABwAAAAQAAAAJAAAA
AgAAAAEAAAAKAAAAAQAAAAcAAAAKAAAABwAAAAkAAAAKAAAACQAAAAEAAAALAAAAAwAAAAAA
AAALAAAAAAAAAAUAAAALAAAABQAAAAMAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/JAAAAAQAAAA4NLO+1Yt6PI6wUz04NLO+jk16vI6wUz1IAeC+nU16vI6w
Uz04NLO+p9lgPP78Oj5IAeC+Bis/vML8Oj5IAeC++E56PEDlGD5IAeC+/k56PI6wUz04NLO+
lt4/vNH8Oj5IAeC+stlgPAP9Oj5IAeC+pE16vIbzGD44NLO+k016vIDzGD44NLO+9U56PEAa
DD48AAAAAAAAAAEAAAACAAAAAQAAAAAAAAADAAAABAAAAAUAAAACAAAABgAAAAAAAAACAAAA
BgAAAAIAAAAFAAAABgAAAAUAAAAAAAAABwAAAAEAAAADAAAABwAAAAMAAAAEAAAACAAAAAMA
AAAFAAAACAAAAAUAAAAEAAAACAAAAAQAAAADAAAACQAAAAQAAAACAAAACQAAAAcAAAAEAAAA
CQAAAAIAAAABAAAACgAAAAEAAAAHAAAACgAAAAcAAAAJAAAACgAAAAkAAAABAAAACwAAAAMA
AAAAAAAACwAAAAAAAAAFAAAACwAAAAUAAAADAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAPzMAAAAEAAAAv5pJPzpTQbzRxDQ+4RpOPzdTQbyNgjM+v5pJP06+
YzzSxDQ+v5pJP6ify7vTTe48RgFgPz/ee7yv/809RgFgP16+YzzUTe48RgFgP0K+YzyO4iY+
RgFgPyRTQbzUTe48RgFgPypTQbyP4iY+v5pJP3feezx1Ric9v5pJP0zee7xe4Sc9v5pJP3nQ
9jvTTe48v5pJP1Dee7wq1fA94hpOP0u+YzyNgjM+yMtaPyhTQbzUTe48RgFgPz7ee7wDgac9
v5pJP2feezwKzfA9WgAAAAAAAAABAAAAAgAAAAIAAAADAAAAAAAAAAQAAAAFAAAABgAAAAcA
AAADAAAABQAAAAcAAAAFAAAABAAAAAgAAAAGAAAAAQAAAAgAAAAEAAAABgAAAAkAAAAGAAAA
BQAAAAkAAAADAAAAAgAAAAoAAAAAAAAAAwAAAAsAAAAFAAAAAwAAAAsAAAADAAAACQAAAAsA
AAAJAAAABQAAAAwAAAAAAAAACgAAAAwAAAAKAAAABAAAAAwAAAAEAAAACAAAAAwAAAAIAAAA
AQAAAAwAAAABAAAAAAAAAA0AAAACAAAAAQAAAA0AAAABAAAABgAAAA4AAAADAAAABwAAAA4A
AAAHAAAACgAAAA4AAAAKAAAAAwAAAA8AAAAHAAAABAAAAA8AAAAEAAAACgAAAA8AAAAKAAAA
BwAAABAAAAAJAAAAAgAAABAAAAACAAAADQAAABAAAAAGAAAACQAAABAAAAANAAAABgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8nAAAABAAAAL+aST9QvmM8
5STvvb+aST8vU0G85STvvTg0Mz8+U0G8fdL+vb+aST950PY7003uPDg0Mz9c3nu80k3uPDg0
Mz+G3ns81E3uPDg0Mz9FvmM8fNL+vb+aST81U0G8xgJnPL+aST+qn8u7003uPL+aST9xvmM8
uwJnPDj0Pj9U3nu81E3uPBgSPz9+3ns81E3uPDg0Mz9b3nu8FmKePEIAAAAAAAAAAQAAAAIA
AAABAAAAAAAAAAMAAAAEAAAAAwAAAAUAAAAEAAAABQAAAAIAAAAGAAAAAAAAAAIAAAAGAAAA
AgAAAAUAAAAHAAAAAQAAAAMAAAAIAAAAAwAAAAQAAAAIAAAABwAAAAMAAAAJAAAAAwAAAAAA
AAAKAAAABwAAAAgAAAAKAAAACAAAAAQAAAAKAAAAAQAAAAcAAAALAAAABQAAAAMAAAALAAAA
AwAAAAkAAAALAAAACQAAAAAAAAALAAAAAAAAAAYAAAALAAAABgAAAAUAAAAMAAAABAAAAAIA
AAAMAAAACgAAAAQAAAAMAAAAAgAAAAEAAAAMAAAAAQAAAAoAAAAQAAAAAAAAAAAAAAAAAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQAAAA4NDM/XN57vKKXrzw4NDM/RL5jPHzS
/r04NDM/it57PKKXrzyxzRw/lt57PKKXrzyxzRw/bd57vKKXrzyxzRw/TlNBvAtAB76xzRw/
Pb5jPAlAB744NDM/PlNBvH3S/r2xzRw/bN57vETAYTqxzRw/mt57POg8JzowAAAAAAAAAAEA
AAACAAAAAwAAAAAAAAACAAAABAAAAAAAAAADAAAABAAAAAMAAAAFAAAABgAAAAEAAAAFAAAA
BgAAAAUAAAADAAAABwAAAAUAAAABAAAABwAAAAEAAAAAAAAACAAAAAUAAAAHAAAACAAAAAcA
AAAAAAAACAAAAAAAAAAEAAAACAAAAAQAAAAFAAAACQAAAAMAAAACAAAACQAAAAYAAAADAAAA
CQAAAAIAAAABAAAACQAAAAEAAAAGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPzYAAAAEAAAAAAAAAAm4ezyQ25I8ODSzPaLQe7yQ25I8ODSzPbTeezyP25I8
ODSzPeAmDTtGnBW+AAAAAA5Ge7yQ25I8AAAAAIFSQbymlfC9AAAAAJm+Yzx0BfO9ODSzPYRS
QbzgiRG+ODSzPZC+YzzlmBG+yeNIPAAnDTsfXAK+AACAMAQnDTtYYvu9sS2fPIZSQbxTHwC+
ruOVPJe+YzzkeQC+5sFlPTbee7woWYi8ODSzPaLBeLx9FMm8AAAAAIpNerwIOKq6ODSzPb7e
ezy5DnG8AACAMMDWezxeyqo5YAAAAAAAAAABAAAAAgAAAAMAAAACAAAAAQAAAAQAAAABAAAA
AAAAAAQAAAAAAAAABQAAAAYAAAAFAAAAAAAAAAcAAAADAAAAAQAAAAgAAAACAAAAAwAAAAkA
AAADAAAABwAAAAoAAAAFAAAABgAAAAoAAAAGAAAACQAAAAsAAAAFAAAACgAAAAsAAAAKAAAA
CQAAAAsAAAAJAAAABwAAAAwAAAAIAAAAAwAAAAwAAAADAAAACQAAAAwAAAAJAAAABgAAAA0A
AAALAAAABwAAAA0AAAABAAAABAAAAA4AAAAHAAAAAQAAAA4AAAABAAAADQAAAA4AAAANAAAA
BwAAAA8AAAAFAAAACwAAAA8AAAALAAAADQAAAA8AAAAEAAAABQAAAA8AAAANAAAABAAAABAA
AAACAAAACAAAABEAAAAAAAAAAgAAABEAAAACAAAAEAAAABEAAAAMAAAABgAAABEAAAAGAAAA
AAAAABEAAAAIAAAADAAAABEAAAAQAAAACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD85AAAABAAAADg0Mz9MU0G8s/w6Pr+aST85U0G80cQ0PpNfMz9ZvmM8
s/w6Pjg0Mz+G3ns81E3uPDg0Mz9b3nu80k3uPL+aST9N3nu8XuEnPb+aST923ns8dUYnPb+a
ST9NvmM80sQ0Pr+aST+on8u7003uPL+aST940PY7003uPDj0Pj9U3nu81E3uPBgSPz9+3ns8
1E3uPDg0Mz9g3nu86CcFPr+aST9R3nu8K9XwPSGGRj9P3nu8huUQPUCTRj943ns8i6wQPTg0
Mz9x3ns8UB0FPr+aST9k3ns8Dc3wPTg0Mz/LvWM8s/w6PmYAAAAAAAAAAQAAAAIAAAADAAAA
BAAAAAAAAAAFAAAABgAAAAEAAAAHAAAAAgAAAAEAAAAHAAAAAQAAAAYAAAAIAAAABgAAAAUA
AAAIAAAABAAAAAMAAAAJAAAABgAAAAgAAAAJAAAACAAAAAMAAAAKAAAABQAAAAQAAAAKAAAA
BAAAAAgAAAALAAAAAwAAAAYAAAALAAAACQAAAAMAAAAMAAAAAQAAAAAAAAAMAAAAAAAAAAQA
AAAMAAAABAAAAAUAAAANAAAABQAAAAEAAAANAAAAAQAAAAwAAAANAAAADAAAAAUAAAAOAAAA
CAAAAAUAAAAOAAAABQAAAAoAAAAOAAAACgAAAAgAAAAPAAAABgAAAAkAAAAPAAAACQAAAAsA
AAAPAAAACwAAAAYAAAAQAAAAAgAAAAcAAAAQAAAAAwAAAAAAAAAQAAAABgAAAAMAAAARAAAA
BwAAAAYAAAARAAAABgAAABAAAAARAAAAEAAAAAcAAAASAAAAAAAAAAIAAAASAAAAAgAAABAA
AAASAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
IQAAAAQAAACxzRw/bt57vKCXrzyxzRw/PL5jPAlAB76xzRw/ld57PKCXrzwqZwY/od57PKCX
rzwqZwY/fd57vKCXrzwqZwY/XlNBvNgWD74qZwY/TL5jPNYWD76xzRw/T1NBvAtAB74qZwY/
e957vERk8buxzRw/bd57vETAYToqZwY/o957PPG+87s2AAAAAAAAAAEAAAACAAAAAwAAAAAA
AAACAAAABAAAAAAAAAADAAAABAAAAAMAAAAFAAAABgAAAAEAAAAFAAAABgAAAAUAAAADAAAA
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
ODSzPqzeezxzXLq8RgHgPqTeezwnTHe8PAAAAAAAAAABAAAAAgAAAAMAAAAAAAAAAgAAAAQA
AAAAAAAAAwAAAAQAAAADAAAABQAAAAYAAAAFAAAAAQAAAAYAAAABAAAAAAAAAAcAAAABAAAA
BQAAAAcAAAAFAAAAAwAAAAgAAAAEAAAABQAAAAgAAAAFAAAABgAAAAgAAAAAAAAABAAAAAkA
AAAGAAAAAAAAAAkAAAAAAAAACAAAAAkAAAAIAAAABgAAAAoAAAABAAAABwAAAAoAAAAHAAAA
AwAAAAoAAAADAAAAAgAAAAsAAAACAAAAAQAAAAsAAAABAAAACgAAAAsAAAAKAAAAAgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8kAAAABAAAADg0sz6c3nu8
MNuSPDg0sz5qvmM8DEYWvjg0sz6g3ns8MNuSPCpnhj6i3ns8MNuSPCpnhj69kHq8M9uSPCpn
hj6Xvzy8BkYWvjg0sz4F8j68DEYWvipnhj53vmM8BkYWvipnhj5bSnu8+fLnvDg0sz6a3nu8
18W5vCpnhj643ns812TovDg0sz6q3ns8c1y6vDwAAAAAAAAAAQAAAAIAAAADAAAAAAAAAAIA
AAAEAAAAAAAAAAMAAAAEAAAAAwAAAAUAAAAGAAAABQAAAAEAAAAGAAAAAQAAAAAAAAAHAAAA
AQAAAAUAAAAHAAAABQAAAAMAAAAIAAAABAAAAAUAAAAIAAAABQAAAAYAAAAIAAAAAAAAAAQA
AAAJAAAABgAAAAAAAAAJAAAAAAAAAAgAAAAJAAAACAAAAAYAAAAKAAAAAQAAAAcAAAAKAAAA
BwAAAAMAAAAKAAAAAwAAAAIAAAALAAAAAgAAAAEAAAALAAAAAQAAAAoAAAALAAAACgAAAAIA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/IQAAAAQAAACxzRw/
ld57PKCXrzyxzRw/bt57vKCXrzwqZwY/fd57vKCXrzyxzRw/UnNjPLn8Oj4qZwY/it57PFSl
ET4qZwY/PFNBvL38Oj4qZwY/od57PKCXrzyxzRw/TlNBvLn8Oj4qZwY/1ihjPMD8Oj4qZwY/
g957vO6vET6xzRw/dN57vOprCz42AAAAAAAAAAEAAAACAAAAAQAAAAAAAAADAAAABAAAAAMA
AAAAAAAABQAAAAQAAAACAAAABgAAAAAAAAACAAAABgAAAAIAAAAEAAAABgAAAAQAAAAAAAAA
BwAAAAEAAAADAAAABwAAAAMAAAAFAAAACAAAAAMAAAAEAAAACAAAAAQAAAAFAAAACAAAAAUA
AAADAAAACQAAAAcAAAAFAAAACQAAAAIAAAABAAAACQAAAAUAAAACAAAACgAAAAEAAAAHAAAA
CgAAAAcAAAAJAAAACgAAAAkAAAABAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPyQAAAAEAAAAODQzP4reezygl688ODQzP1zee7ygl688sc0cP23ee7ygl688
ODQzP8u9Yzy0/Do+sc0cP05TQby5/Do+sc0cP37eezxSYQs+sc0cP5beezygl688ODQzP01T
Qby0/Do+sc0cP1FzYzy6/Do+sc0cP3Pee7zraws+ODQzP2Tee7zpJwU+ODQzP3HeezxQHQU+
PAAAAAAAAAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAgAAAAYAAAAAAAAAAgAAAAYA
AAACAAAABQAAAAYAAAAFAAAAAAAAAAcAAAABAAAAAwAAAAcAAAADAAAABAAAAAgAAAADAAAA
BQAAAAgAAAAFAAAABAAAAAgAAAAEAAAAAwAAAAkAAAAHAAAABAAAAAkAAAACAAAAAQAAAAkA
AAAEAAAAAgAAAAoAAAABAAAABwAAAAoAAAAHAAAACQAAAAoAAAAJAAAAAQAAAAsAAAADAAAA
AAAAAAsAAAAAAAAABQAAAAsAAAAFAAAAAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD8hAAAABAAAACpnhj6k3ns8MNuSPCpnhj6+kHq8M9uSPDg0Mz4Qoni8
MNuSPCpnhj5pSWI80vw6Pjg0Mz7TCns8FOUYPjg0Mz71UkG81vw6Pjg0Mz6w3ns8L9uSPCpn
hj4HU0G8zvw6Pjg0Mz7w/mE81vw6Pjg0Mz5t3nu8WfMYPipnhj5+3nu8VPMYPjYAAAAAAAAA
AQAAAAIAAAABAAAAAAAAAAMAAAAEAAAAAwAAAAAAAAAFAAAABAAAAAIAAAAGAAAAAAAAAAIA
AAAGAAAAAgAAAAQAAAAGAAAABAAAAAAAAAAHAAAAAQAAAAMAAAAHAAAAAwAAAAUAAAAIAAAA
AwAAAAQAAAAIAAAABAAAAAUAAAAIAAAABQAAAAMAAAAJAAAABwAAAAUAAAAJAAAAAgAAAAEA
AAAJAAAABQAAAAIAAAAKAAAAAQAAAAcAAAAKAAAABwAAAAkAAAAKAAAACQAAAAEAAAAQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/IQAAAAQAAAAqZwY/ot57POfa
kjwqZwY/ft57vOnakjxGAeA+kN57vOjakjwqZwY/2ShjPMD8Oj5GAeA+mt57PFnpFz5GAeA+
K1NBvMT8Oj5GAeA+ot57POjakjwqZwY/PVNBvL/8Oj5GAeA+Xd5iPMf8Oj5GAeA+lt57vPLz
Fz4qZwY/hN57vO+vET42AAAAAAAAAAEAAAACAAAAAQAAAAAAAAADAAAABAAAAAMAAAAAAAAA
BQAAAAQAAAACAAAABgAAAAAAAAACAAAABgAAAAIAAAAEAAAABgAAAAQAAAAAAAAABwAAAAEA
AAADAAAABwAAAAMAAAAFAAAACAAAAAMAAAAEAAAACAAAAAQAAAAFAAAACAAAAAUAAAADAAAA
CQAAAAcAAAAFAAAACQAAAAIAAAABAAAACQAAAAUAAAACAAAACgAAAAEAAAAHAAAACgAAAAcA
AAAJAAAACgAAAAkAAAABAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPyEAAAAEAAAAODSzPqDeezww25I8ODSzPpzee7ww25I8KmeGPruQerwz25I8ODSzPuGT
YjzL/Do+KmeGPk5VezwO5Rg+KmeGPgZTQbzP/Do+KmeGPqLeezww25I8ODSzPhZTQbzK/Do+
KmeGPmdJYjzS/Do+KmeGPn/ee7xU8xg+ODSzPpDee7xO8xg+NgAAAAAAAAABAAAAAgAAAAEA
AAAAAAAAAwAAAAQAAAADAAAAAAAAAAUAAAAEAAAAAgAAAAYAAAAAAAAAAgAAAAYAAAACAAAA
BAAAAAYAAAAEAAAAAAAAAAcAAAABAAAAAwAAAAcAAAADAAAABQAAAAgAAAADAAAABAAAAAgA
AAAEAAAABQAAAAgAAAAFAAAAAwAAAAkAAAAHAAAABQAAAAkAAAACAAAAAQAAAAkAAAAFAAAA
AgAAAAoAAAABAAAABwAAAAoAAAAHAAAACQAAAAoAAAAJAAAAAQAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8nAAAABAAAAEYB4D6h3ns86NqSPEYB4D6N3nu8
6NqSPDg0sz6d3nu85tqSPEYB4D5c3mI8x/w6Pjg0sz4YU0G8y/w6Pjg0sz7Ln3s8B+UYPjg0
sz6h3ns86NqSPEYB4D4pU0G8xPw6Pjg0sz7ik2I8zPw6Po3f2D6W3nu8SPMYPjg0sz6R3nu8
T/MYPkYB4D6T3nu88/MXPtj52D6Z3ns8AeUYPkIAAAAAAAAAAQAAAAIAAAABAAAAAAAAAAMA
AAAEAAAABQAAAAIAAAAGAAAAAAAAAAIAAAAGAAAAAgAAAAUAAAAHAAAAAQAAAAMAAAAHAAAA
AwAAAAQAAAAIAAAAAwAAAAUAAAAIAAAABQAAAAQAAAAIAAAABAAAAAMAAAAJAAAABwAAAAQA
AAAJAAAAAgAAAAEAAAAKAAAABAAAAAIAAAAKAAAAAgAAAAkAAAAKAAAACQAAAAQAAAALAAAA
AQAAAAcAAAALAAAABwAAAAkAAAALAAAACQAAAAEAAAAMAAAAAAAAAAYAAAAMAAAABgAAAAUA
AAAMAAAAAwAAAAAAAAAMAAAABQAAAAMAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/GAAAAAQAAAAqZ4a/aWw+vESB3r1TzJy/Hmw+vAAAwDNTzJy/iWw+vD4h
Eb5TzJy/BvlmPAAAwDMqZ4a/1IBjPAAAwDMqZ4a/MWw+vAAAwDNTzJy/H9pgPDZEDr4qZ4a/
5NlgPCRq2L0kAAAAAAAAAAEAAAACAAAAAwAAAAIAAAABAAAAAwAAAAEAAAAEAAAABQAAAAAA
AAAEAAAABQAAAAQAAAABAAAABQAAAAEAAAAAAAAABgAAAAIAAAADAAAABgAAAAAAAAACAAAA
BwAAAAQAAAAAAAAABwAAAAAAAAAGAAAABwAAAAMAAAAEAAAABwAAAAYAAAADAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPx4AAAAEAAAAKmeGP/5SQbwHoL69
KmeGP1u+YzwFoL69KmeGP0O+Yzycm9w8RgFgPyVTQbycm9w8RgFgPx5TQbxJd9+9RgFgP1++
Yzycm9w8RgFgP1u+YzxPd9+9KmeGPwRTQbyYm9w8PqmFP/9SQbzvJcG9OqmFP12+Yzz4JcG9
MAAAAAAAAAABAAAAAgAAAAMAAAAEAAAAAAAAAAUAAAAEAAAAAwAAAAUAAAADAAAAAgAAAAUA
AAACAAAAAQAAAAYAAAAEAAAABQAAAAYAAAAFAAAAAQAAAAcAAAAAAAAAAgAAAAcAAAACAAAA
AwAAAAcAAAADAAAAAAAAAAgAAAAEAAAABgAAAAgAAAAAAAAABAAAAAgAAAABAAAAAAAAAAkA
AAAGAAAAAQAAAAkAAAABAAAACAAAAAkAAAAIAAAABgAAABAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAACpnBr8OT3o8jrBTPTg0s76PTXq8jrBTPTg0
s77Vi3o8jrBTPTg0s77naz68hUmivSpnBr+72WA8svSSvSpnBr+mTXq8V09zPCpnBr8IbD68
21KYvTg0s76s2WA811advSpnBr+vTXq8jrBTPTg0s76MTXq8mE5zPDg0s74OT3o8xmpyPDYA
AAAAAAAAAQAAAAIAAAADAAAAAgAAAAEAAAAEAAAABQAAAAAAAAAGAAAAAwAAAAUAAAAGAAAA
BQAAAAQAAAAHAAAAAwAAAAYAAAAHAAAABgAAAAQAAAAHAAAAAgAAAAMAAAAIAAAAAQAAAAAA
AAAIAAAAAAAAAAUAAAAIAAAABQAAAAEAAAAJAAAAAwAAAAEAAAAJAAAAAQAAAAUAAAAJAAAA
BQAAAAMAAAAKAAAABAAAAAAAAAAKAAAABwAAAAQAAAAKAAAAAAAAAAIAAAAKAAAAAgAAAAcA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JAAAAAQAAAA5NDO+
4YV6PBQv9TwAAAAAoxp7vBQv9TwAAAAAtN57PBQv9TwAAIAwBCcNO1di+705NDO+cU16vBQv
9Tw5NDO+xms+vMhVtL05NDO+ra9hPDM/r70AAAAAgVJBvKaV8L0AAAAAmb5jPHMF8705NDO+
a016vFyOFTxAoq670U16vE862DsAAAAAm517PLCYDLk8AAAAAAAAAAEAAAACAAAAAwAAAAIA
AAABAAAABAAAAAEAAAAAAAAABAAAAAAAAAAFAAAABgAAAAMAAAAFAAAABgAAAAUAAAAAAAAA
BwAAAAMAAAABAAAABwAAAAUAAAADAAAACAAAAAIAAAADAAAACAAAAAMAAAAGAAAACAAAAAYA
AAAAAAAACQAAAAQAAAAFAAAACQAAAAUAAAAHAAAACQAAAAEAAAAEAAAACgAAAAcAAAABAAAA
CgAAAAEAAAAJAAAACgAAAAkAAAAHAAAACwAAAAAAAAACAAAACwAAAAIAAAAIAAAACwAAAAgA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPycAAAAEAAAA
KmcGvxBPejwyCVI9KmcGv7FNerwyCVI9ODQzv6dgerwyCVI9KmcGv77ZYDwL/To+ODQzv1Rs
Pry1/Do+ODQzvwBPejxS5Rg+ODQzvy1PejwyCVI9KmcGv3d3Pry2/Do+ODQzv9HZYDwV/To+
ODQzv4GReryAIyE+KmcGv7hNeryM8xg+KmcGvwFCcTwu5Rg+EpYmv4GReryAIyE+QgAAAAAA
AAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAgAAAAYAAAAAAAAAAgAAAAYAAAACAAAA
BQAAAAYAAAAFAAAAAAAAAAcAAAABAAAAAwAAAAcAAAADAAAABAAAAAgAAAADAAAABQAAAAgA
AAAFAAAABAAAAAgAAAAEAAAAAwAAAAkAAAAEAAAAAgAAAAkAAAAHAAAABAAAAAkAAAACAAAA
AQAAAAoAAAABAAAABwAAAAsAAAADAAAAAAAAAAsAAAAAAAAABQAAAAsAAAAFAAAAAwAAAAwA
AAAJAAAAAQAAAAwAAAABAAAACgAAAAwAAAAHAAAACQAAAAwAAAAKAAAABwAAABAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAADs0M77j+no8MKRBPTo0
M756TXq8MKRBPTg0s76NTXq8MKRBPTo0M76V2WA88fw6Pjg0s772Tno8OuUYPjg0s76V3j+8
z/w6Pjg0s75xq3o8MKRBPTo0M762RUG86fw6Pjg0s76n2WA8/fw6Pjg0s76TTXq8gPMYPjs0
M74Q1Hq8c/MYPjYAAAAAAAAAAQAAAAIAAAABAAAAAAAAAAMAAAAEAAAAAwAAAAAAAAAFAAAA
BAAAAAIAAAAGAAAAAAAAAAIAAAAGAAAAAgAAAAQAAAAGAAAABAAAAAAAAAAHAAAAAQAAAAMA
AAAHAAAAAwAAAAUAAAAIAAAAAwAAAAQAAAAIAAAABAAAAAUAAAAIAAAABQAAAAMAAAAJAAAA
BQAAAAIAAAAJAAAABwAAAAUAAAAKAAAAAQAAAAcAAAAKAAAABwAAAAkAAAAKAAAAAgAAAAEA
AAAKAAAACQAAAAIAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
JwAAAAQAAAA4NDO/Lk96PGA9PT04NDO/42h6vGA9PT1GAWC/go56vGA9PT04NDO/0NlgPBX9
Oj5GAWC/RWw+vLP8Oj5GAWC/zcNqPEoTIT5GAWC/PcRqPGA9PT04NDO/U2w+vLP8Oj5GAWC/
5dlgPCH9Oj44NDO/f5F6vH4jIT5GAWC/f5F6vH4jIT62cTW/AE96PFPlGD44NDO/q/V3PHsj
Gj5CAAAAAAAAAAEAAAACAAAAAQAAAAAAAAADAAAABAAAAAUAAAACAAAABgAAAAAAAAACAAAA
BgAAAAIAAAAFAAAABwAAAAEAAAADAAAABwAAAAMAAAAEAAAACAAAAAUAAAAEAAAACAAAAAQA
AAADAAAACQAAAAcAAAAEAAAACQAAAAIAAAABAAAACQAAAAEAAAAHAAAACgAAAAQAAAACAAAA
CgAAAAIAAAAJAAAACgAAAAkAAAAEAAAACwAAAAUAAAAIAAAACwAAAAgAAAADAAAACwAAAAAA
AAAGAAAACwAAAAYAAAAFAAAADAAAAAMAAAAAAAAADAAAAAAAAAALAAAADAAAAAsAAAADAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAARgFgv33E
ajwYeRc9RgFgv4+OerwYeRc9KmeGv72PerwYeRc9RgFgv+TZYDwh/To+KmeGvzhsPryz/Do+
KmeGv+rKajxeCiE+KmeGv2nDajwYeRc9RgFgv0VsPryz/Do+KmeGv/jZYDwt/To+RgFgv4KR
erx+IyE+KmeGv4KRerx+IyE+RgFgv83DajxKEyE+PAAAAAAAAAABAAAAAgAAAAEAAAAAAAAA
AwAAAAQAAAAFAAAAAgAAAAYAAAAAAAAAAgAAAAYAAAACAAAABQAAAAYAAAAFAAAAAAAAAAcA
AAABAAAAAwAAAAcAAAADAAAABAAAAAgAAAADAAAABQAAAAgAAAAFAAAABAAAAAgAAAAEAAAA
AwAAAAkAAAABAAAABwAAAAkAAAAHAAAABAAAAAkAAAACAAAAAQAAAAoAAAAEAAAAAgAAAAoA
AAACAAAACQAAAAoAAAAJAAAABAAAAAsAAAADAAAAAAAAAAsAAAAAAAAABQAAAAsAAAAFAAAA
AwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAAFPM
nL+GbD68PiERvnYJs78CbD68//+/M3gJs7/saz68N/06vnwxs7/KIWo8//+/M1PMnL8G+WY8
//+/M1PMnL8dbD68//+/M1PMnL8c2mA8NkQOvoyCrb8K2mA8Mv06vngJs78M2mA8Mv06voQB
rL/vaz68N/06vjAAAAAAAAAAAQAAAAIAAAADAAAAAQAAAAQAAAADAAAAAgAAAAEAAAAFAAAA
AAAAAAQAAAAFAAAABAAAAAEAAAAFAAAAAQAAAAAAAAAGAAAABwAAAAMAAAAGAAAAAwAAAAQA
AAAGAAAABAAAAAAAAAAIAAAABwAAAAIAAAAIAAAAAgAAAAMAAAAIAAAAAwAAAAcAAAAJAAAA
BwAAAAYAAAAJAAAABgAAAAAAAAAJAAAAAAAAAAIAAAAJAAAAAgAAAAcAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JwAAAAQAAAAAAAAAst57PBQv9TwAAAAA
pBp7vBQv9Tw5NDO+cU16vBQv9TwAAAAA+2lhPOX8Oj45NDO+tkVBvOv8Oj45NDO+8k56PC3l
GD45NDO+34V6PBQv9TwAAAAAz1JBvOH8Oj45NDO+ltlgPPH8Oj4AAAAARd57vGPzGD46NDO+
EtR6vHPzGD5KPju97k56PCXlGD4AAAAAgiZtPCXlGD5CAAAAAAAAAAEAAAACAAAAAQAAAAAA
AAADAAAABAAAAAUAAAACAAAABgAAAAAAAAACAAAABgAAAAIAAAAFAAAABgAAAAUAAAAAAAAA
BwAAAAEAAAADAAAABwAAAAMAAAAEAAAACAAAAAMAAAAFAAAACAAAAAUAAAAEAAAACAAAAAQA
AAADAAAACQAAAAEAAAAHAAAACQAAAAcAAAAEAAAACQAAAAIAAAABAAAACgAAAAQAAAACAAAA
CgAAAAIAAAAJAAAACgAAAAkAAAAEAAAACwAAAAAAAAAFAAAACwAAAAUAAAADAAAADAAAAAMA
AAAAAAAADAAAAAAAAAALAAAADAAAAAsAAAADAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAODQzPq/eezyQ25I8ODQzPhKieLyQ25I8AAAAAA1G
e7yQ25I8ODQzPvD+YTzY/Do+AAAAAM9SQbzj/Do+AAAAANd1ejwh5Rg+AAAAAAy4ezyQ25I8
ODQzPvZSQbzW/Do+AAAAAP1pYTzn/Do+ODQzPm7ee7xZ8xg+AAAAAEXee7xk8xg+ODQzPqLe
ezzV4VI9PAAAAAAAAAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAgAAAAYAAAAAAAAA
AgAAAAYAAAACAAAABQAAAAcAAAABAAAAAwAAAAcAAAADAAAABAAAAAgAAAADAAAABQAAAAgA
AAAFAAAABAAAAAgAAAAEAAAAAwAAAAkAAAAHAAAABAAAAAkAAAACAAAAAQAAAAkAAAABAAAA
BwAAAAoAAAAEAAAAAgAAAAoAAAACAAAACQAAAAoAAAAJAAAABAAAAAsAAAAAAAAABgAAAAsA
AAAGAAAABQAAAAsAAAADAAAAAAAAAAsAAAAFAAAAAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAACpnhj8uvmM8VUkHPipnhj8AU0G8CKC+vSpn
hj8JU0G8V0kHPjg0sz/AUkG8sY/cuypnhj9cvmM8BqC+vTg0sz8SvmM8oY/cu3PFoT8XvmM8
T0CTPXPFoT/dUkG8TkCTPdssrT8evmM8cA/rvMhpkj8hvmM8c7DsPdssrT/IUkG8bQ/rvDYA
AAAAAAAAAQAAAAIAAAADAAAAAgAAAAEAAAAEAAAAAAAAAAUAAAAEAAAAAQAAAAAAAAAGAAAA
AwAAAAUAAAAGAAAABQAAAAAAAAAHAAAAAgAAAAMAAAAHAAAAAwAAAAYAAAAIAAAAAQAAAAQA
AAAIAAAABAAAAAUAAAAIAAAABQAAAAMAAAAJAAAAAgAAAAcAAAAJAAAABwAAAAYAAAAJAAAA
AAAAAAIAAAAJAAAABgAAAAAAAAAKAAAAAwAAAAEAAAAKAAAAAQAAAAgAAAAKAAAACAAAAAMA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/LQAAAAQAAAAqZ4a/
Z5B6vEskTjwqZ4a/1IBjPAAAwDMqZ4a/99lgPC39Oj50CbO/HtpgPEX9Oj50CbO/HWw+vLP8
Oj4qZ4a/N2w+vLP8Oj59MbO/yyFqPAAAwDN3CbO/A2w+vAAAwDMqZ4a/Mmw+vAAAwDM4NLO/
2456vE2STDw4NLO/PcRqPIiSTDwqZ4a/gJF6vH4jIT44NLO/3Y56vF4KIT4qZ4a/6cpqPF4K
IT4qZ4a/QsNqPDskTjxOAAAAAAAAAAEAAAACAAAAAwAAAAQAAAACAAAABQAAAAAAAAACAAAA
BQAAAAIAAAAEAAAABgAAAAEAAAAHAAAACAAAAAcAAAABAAAACAAAAAEAAAAAAAAACQAAAAcA
AAAIAAAACQAAAAgAAAAAAAAACQAAAAoAAAAGAAAACQAAAAYAAAAHAAAACwAAAAkAAAAAAAAA
CwAAAAAAAAAFAAAACwAAAAUAAAAEAAAADAAAAAkAAAALAAAADAAAAAsAAAAEAAAADAAAAAoA
AAAJAAAADAAAAAQAAAADAAAADAAAAAMAAAAKAAAADQAAAAoAAAADAAAADQAAAAMAAAACAAAA
DQAAAAIAAAABAAAADgAAAAoAAAANAAAADgAAAA0AAAABAAAADgAAAAEAAAAGAAAADgAAAAYA
AAAKAAAA</SharedString>
	</SharedStrings>
</roblox>